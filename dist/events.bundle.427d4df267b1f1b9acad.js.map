{"version":3,"sources":["webpack:///events.bundle.427d4df267b1f1b9acad.js","webpack:///webpack/bootstrap c84bccab9927e7885f57?1585*****","webpack:///./client/app/features/main/dashboard/events/index.js","webpack:///./~/css-loader/lib/css-base.js?da04****","webpack:///./~/style-loader/addStyles.js?b980****","webpack:///./~/angular-ui-router/release/angular-ui-router.js?dfe8","webpack:///./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.controller.js","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.controller.js","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.controller.js","webpack:///./client/app/features/main/dashboard/events/components/eventList/event/event.controller.js","webpack:///./client/app/features/main/dashboard/events/components/eventList/eventList.controller.js","webpack:///./client/app/features/main/dashboard/events/components/eventList/index.js","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.controller.js","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.controller.js","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/index.js","webpack:///./client/app/features/main/dashboard/events/eventList/eventList.controller.js","webpack:///./client/app/features/main/dashboard/events/events.controller.js","webpack:///./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.scss","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.scss","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.scss","webpack:///./client/app/features/main/dashboard/events/components/eventList/event/event.scss","webpack:///./client/app/features/main/dashboard/events/components/eventList/eventList.scss","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.scss","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.scss","webpack:///./client/app/features/main/dashboard/events/eventList/eventList.scss","webpack:///./client/app/features/main/dashboard/events/events.scss","webpack:///./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.routes.js","webpack:///./client/app/features/main/dashboard/events/collectionSlots/index.js","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.directive.js","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/index.js","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.directive.js","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/index.js","webpack:///./client/app/features/main/dashboard/events/components/eventList/event/event.directive.js","webpack:///./client/app/features/main/dashboard/events/components/eventList/event/index.js","webpack:///./client/app/features/main/dashboard/events/components/eventList/eventList.directive.js","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.directive.js","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/index.js","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.directive.js","webpack:///./client/app/features/main/dashboard/events/eventList/eventList.routes.js","webpack:///./client/app/features/main/dashboard/events/eventList/index.js","webpack:///./client/app/features/main/dashboard/events/events.routes.js","webpack:///./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.tpl.html","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.tpl.html","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.tpl.html","webpack:///./client/app/features/main/dashboard/events/components/eventList/event/event.tpl.html","webpack:///./client/app/features/main/dashboard/events/components/eventList/eventList.tpl.html","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.tpl.html","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.tpl.html","webpack:///./client/app/features/main/dashboard/events/eventList/eventList.tpl.html","webpack:///./client/app/features/main/dashboard/events/events.tpl.html","webpack:///./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.scss?feed","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.scss?c720","webpack:///./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.scss?c35a","webpack:///./client/app/features/main/dashboard/events/components/eventList/event/event.scss?55f6","webpack:///./client/app/features/main/dashboard/events/components/eventList/eventList.scss?7a72","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.scss?7319","webpack:///./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.scss?d65c","webpack:///./client/app/features/main/dashboard/events/eventList/eventList.scss?101f","webpack:///./client/app/features/main/dashboard/events/events.scss?44bd"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_events","_events2","_events3","_events4","_eventList","_eventList2","_collectionSlots","_collectionSlots2","_eventList3","_eventList4","_event","_event2","_eventScheduleList","_eventScheduleList2","_eventSchedule","_eventSchedule2","_collectionSlotsList","_collectionSlotsList2","_collectionSlotsItem","_collectionSlotsItem2","angular","config","controller","UID","name","1","list","toString","result","i","this","length","item","push","join","mediaQuery","alreadyImportedModules","2","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","createLinkElement","linkElement","rel","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","111","undefined","inherit","parent","extra","extend","prototype","merge","dst","forEach","value","key","hasOwnProperty","ancestors","first","second","path","n","objectKeys","object","Object","keys","val","array","Array","Number","len","from","Math","ceil","floor","inheritParams","currentParams","newParams","$current","$to","parentParams","parents","inherited","inheritList","params","equalForKeys","a","b","k","filterByKeys","values","filtered","pick","copy","concat","slice","omit","collection","callback","isArray","map","$Resolve","$q","$injector","VISIT_IN_PROGRESS","VISIT_DONE","NOTHING","NO_DEPENDENCIES","NO_LOCALS","NO_PARENT","when","$$promises","$$values","study","invocables","visit","visited","cycle","isString","plan","get","annotate","param","pop","isResolve","isObject","then","invocableKeys","locals","self","done","wait","merged","$$inheritedValues","resolution","resolve","fail","reason","$$failure","reject","invoke","invocable","onfailure","invocation","proceed","isDefined","promise","e","defer","waitParams","dep","promises","ii","$TemplateFactory","$http","$templateCache","fromConfig","template","fromString","templateUrl","fromUrl","templateProvider","fromProvider","isFunction","url","cache","headers","Accept","response","data","provider","UrlMatcher","pattern","parentMatcher","addParameter","location","paramNames","$$UMFP","Param","quoteRegExp","string","squash","optional","surroundPattern","replace","matchDetails","isSearch","regexp","segment","cfg","substring","last","RegExp","caseInsensitive","placeholder","searchPlaceholder","compiled","segments","$$new","ParamSet","source","exec","isOptional","lastIndex","search","sourceSearch","sourcePath","strict","prefix","$$paramNames","Type","$UrlMatcherFactory","valToString","valFromString","getDefaultConfig","isStrictMode","isCaseInsensitive","isInjectable","flushTypeQueue","typeQueue","shift","$types","injector","def","defaultSquashPolicy","enqueue","defaultTypes","encode","decode","is","int","parseInt","bool","date","getFullYear","getMonth","getDate","match","capture","Date","isNaN","valueOf","equals","toISOString","json","toJson","fromJson","any","identity","$$getDefaultValue","strictMode","compile","isMatcher","o","definition","definitionFn","$get","unwrapShorthand","isShorthand","$$fn","getType","urlType","getArrayMode","arrayDefaults","arrayParamNomenclature","getSquashPolicy","getReplace","arrayMode","configuredKeys","defaultPolicy","to","defaultValue","$value","hasReplaceVal","$replace","$normalize","$asArray","dynamic","$$parent","$$keys","chain","ignore","reverse","paramset","paramValues","$$equals","paramValues1","paramValues2","equal","left","right","$$validates","rawVal","normalized","encoded","$UrlRouterProvider","$locationProvider","$urlMatcherFactory","regExpPrefix","re","interpolate","what","handleIfMatch","handler","$match","$location","$rootScope","$browser","$sniffer","appendBasePath","isHtml5","absolute","baseHref","evt","check","rule","handled","defaultPrevented","lastPushedUrl","rules","otherwise","listen","listener","$on","interceptDeferred","sync","read","urlMatcher","format","$$avoidResync","validates","html5Mode","enabled","history","hashPrefix","slash","port","protocol","host","redirect","handlerIsString","strategies","matcher","regex","global","sticky","deferIntercept","$inject","$StateProvider","$urlRouterProvider","isRelative","stateName","findState","stateOrName","base","isStr","split","pathLength","current","state","states","queueState","parentName","queue","flushQueuedChildren","queued","registerState","lastIndexOf","stateBuilder","$delegates","abstractKey","$stateParams","$state","navigable","transitionTo","isGlob","text","doesStateMatchGlob","glob","globSegments","l","unshift","MAX_VALUE","decorator","func","$view","$resolve","$urlRouter","handleRedirect","$broadcast","TransitionAborted","retry","$retry","TransitionFailed","retryTransition","transition","TransitionSuperseded","toParams","resolveState","paramsAreFiltered","resolveViews","viewsPromises","views","view","injectables","$template","load","globals","notify","controllerProvider","injectLocals","$$controller","$$state","$$controllerAs","controllerAs","all","TransitionPrevented","root","reload","go","relative","fromParams","fromPath","toState","hash","redirectResult","toPath","keep","toLocals","reloadState","ownParams","shouldSkipReload","resolved","entering","exiting","onExit","onEnter","error","includes","lossy","nav","context","nonSearchParamsEqual","fromAndToState","notSearchParam","nonQueryParamKeys","nonQueryParams","nonQueryParamSet","reloadOnSearch","compositeName","charAt","","abstract","$ViewProvider","$templateFactory","defaults","async","$ViewScrollProvider","useAnchorScroll","$anchorScroll","$timeout","$element","scrollIntoView","$ViewDirective","$uiViewScroll","$interpolate","getService","service","has","getRenderer","attrs","scope","animEnabled","element","ngMajorVer","ngMinorVer","$animate","$animator","statics","enter","target","cb","after","leave","noanimation","version","minor","animate","directive","restrict","terminal","priority","transclude","tElement","tAttrs","$transclude","cleanupLastView","cleanOld","_previousEl","_currentScope","$destroy","previousEl","currentScope","_willBeDestroyed","currentEl","renderer","updateView","firstTime","newScope","getUiViewName","previousLocals","latestLocals","$new","$emit","clone","autoScrollExp","$eval","onloadExp","onload","autoscroll","$ViewDirectiveFill","$compile","$controller","initial","html","link","contents","$scope","children","uiView","inheritedData","parseStateRef","ref","parsed","preparsed","paramExpr","stateContext","el","stateData","getTypeInfo","isSvg","prop","isForm","nodeName","attr","isAnchor","toUpperCase","clickable","clickHook","button","which","ctrlKey","metaKey","shiftKey","preventDefault","ignorePreventDefaultCount","cancel","defaultOpts","$StateRefDirective","require","uiSrefActive","uiSref","active","uiSrefOpts","$$addStateInfo","$set","$watch","$StateRefDynamicDirective","runStateRefLink","group","uiState","uiStateParams","uiStateOpts","watch","$StateRefActiveDirective","$attrs","addState","stateParams","activeClass","stateHash","createStateHash","activeClasses","anyMatch","addClass","removeClass","exactMatch","activeEqClass","className","uiSrefActiveEq","newState","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","defaultConfig","searchParams","decodePathArray","reverseString","str","unquoteDashes","allReversed","paramName","parameters","nTotal","nPath","paramVal","encodeDashes","charCodeAt","isPathParam","isDefaultValue","nextSegment","isFinalPathParam","$subPattern","sub","substr","mode","ArrayType","bindTo","callbackName","arrayWrap","arrayUnwrap","falsey","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","$arrayMode","run","factory","major","473","_classCallCheck","instance","Constructor","TypeError","defineProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","collectionSlotsController","Spinner","CollectionSlotsService","_this","show","getCollectionSlots","venueId","console","log","hideSpinner","collectionSlots","hide","474","collectionSlotsItemController","Snack","contextualMenu","contextual","DialogService","LabelService","ErrorService","gettextCatalog","EventService","collectionSlot","showMenu","contextualMenuSuccess","contextualMenuCancel","originalCollectionSlot","restoreOriginalValues","$selected","cardItemList","deleteItem","entity","start","$start","$startFactor","end","$end","$endFactor","$hasSteps","step","isValidEntity","buildEntityToCollectionSlot","updateCollectionSlot","collectionSlotsListCtrl","createCollectionSlot","_collectionSlot","onUpdateItem","getString","err","showError","_this2","$event","selectItem","stopPropagation","_this3","COLLECTION_SLOT_SCHEDULE","title","message","_this4","isCodeVisible","removeCollectionSlotFromSchedules","onItemDeleted","_this5","TITLE_DELETE_COLLECTION_SLOT","CONTENT_DELETE_COLLECTION_SLOT","getSchedules","schedules","showSlotUsedDialog","475","collectionSlotsListController","VenueService","isCreating","slot","Preoday","PickupSlot","currentVenue","newData","deferred","position","save","476","eventController","EventScheduleService","OutletLocationService","buildOutletLocation","event","showContextual","originalEvent","$expanding","hasClass","expandItem","close","addEventSchedule","updateEvent","createEvent","eventListCtrl","$deleted","$expanded","getNewScheduleModel","$images","image","EVENT_OUTLET_LOCATION","EVENT_OUTLET_LOCATION_NO_CHILDREN","hasOutletLocations","showDrawer","outletLocation","outletId","showOutletLocationWithOutletMessage","hasChildren","outletLocationId","showOutletLocationWithoutChildren","TITLE_DELETE_EVENT","CONTENT_DELETE_EVENT","visible","removeEventItem","outletLocations","findById","doneButtonText","schedule","hasSlots","477","eventListController","events","Event","478","479","eventScheduleController","MenuService","EventScheduleFrequency","originalSchedule","$startDate","$endDate","eventScheduleListCtrl","cancelSchedule","moment","getTime","dateTimer","$startTime","hours","minutes","toDate","formatDate","startDate","concatStartDateWithTime","isOnceFrequency","endDate","pickupSlots","buildEntityToSchedule","updateSchedule","createSchedule","_schedule","buildScheduleTimestamp","getSchedulesCount","showCannotDeleteScheduleDialog","TITLE_DELETE_SCHEDULE","CONTENT_DELETE_SCHEDULE","SCHEDULE_EVENT","hasStartDate","hasEndDate","freq","ONCE","480","eventScheduleListController","buildSchedules","newVal","oldVal","$show","recalculateHeight","style","maxHeight","eventCtrl","$startTimestamp","$endTimestamp","shouldShow","481","_eventScheduleList3","_eventScheduleList4","482","eventListViewController","$sce","MaterialCalendarData","calendarMode","expandedSchedules","calendar","selectedDate","firstDayOfWeek","dayFormat","tooltips","setDayContent","subtract","getEvents","getOutletLocations","results","dateFormat","getEventByDate","eventsName","getDayEventsName","trustAsHtml","innerHTML","getDayKey","isCalendarMode","expandSchedules","dates","kLen","expandSchedule","addExpandedScheduleItem","483","eventsController","771","772","773","774","775","776","777","778","779","915","routes","$stateProvider","eventContent","916","_angularUiRouter","_angularUiRouter2","_collectionSlots3","_collectionSlots4","917","collectionSlotsItem","hasActions","bindToController","ctrls","918","_collectionSlotsItem3","_collectionSlotsItem4","919","collectionSlotsList","hasNew","hasSearch","ctrl","920","_collectionSlotsList3","_collectionSlotsList4","921","922","_event3","_event4","_","_2","923","eventList","924","eventSchedule","925","_eventSchedule3","_eventSchedule4","926","eventScheduleList","on","propertyName","927","928","929","isEvent","authenticated","hasVenueSet","1056","1057","1058","1059","1060","1061","1062","1063","1064","1151","content","1152","1153","1154","1155","1156","1157","1158","1159"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,IAGAV,EAAA,KDMMW,EACA,SAASP,EAAQD,EAASH,GE7ChC,YA4CA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GA3CvFb,EAAA,KAKA,IAAAgB,GAAAhB,EAAA,KAAIiB,EAAWL,EAAuBI,GACtCE,EAAAlB,EAAA,KAGImB,EAAWP,EAAuBM,GADtCE,EAAApB,EAAA,KAKIqB,EAAcT,EAAuBQ,GAJzCE,EAAAtB,EAAA,KAQIuB,EAAoBX,EAAuBU,GAN/CE,EAAAxB,EAAA,KAUIyB,EAAcb,EAAuBY,GATzCE,EAAA1B,EAAA,KAaI2B,EAAUf,EAAuBc,GAXrCE,EAAA5B,EAAA,KAeI6B,EAAsBjB,EAAuBgB,GAdjDE,EAAA9B,EAAA,KAkBI+B,EAAkBnB,EAAuBkB,GAhB7CE,EAAAhC,EAAA,KAoBIiC,EAAwBrB,EAAuBoB,GAnBnDE,EAAAlC,EAAA,KAuBImC,EAAwBvB,EAAuBsB,EArBnDE,SAAQhC,OAAO,iBACb,YAD+BiB,aAAAE,aAAAE,aAAAE,aAAAE,aAAAE,aAAAE,aAAAE,eAW9BE,OAXHlB,cAYGmB,WAAWrB,aAAWsB,IAZzBtB,cAaGuB,MFkEGC,EACA,SAASrC,EAAQD,GGhGvBC,EAAAD,QAAA,WACA,GAAAuC,KA0CA,OAvCAA,GAAAC,SAAA,WAEA,OADAC,MACAC,EAAA,EAAgBA,EAAAC,KAAAC,OAAiBF,IAAA,CACjC,GAAAG,GAAAF,KAAAD,EACAG,GAAA,GACAJ,EAAAK,KAAA,UAAAD,EAAA,OAAwCA,EAAA,QAExCJ,EAAAK,KAAAD,EAAA,IAGA,MAAAJ,GAAAM,KAAA,KAIAR,EAAAG,EAAA,SAAA9C,EAAAoD,GACA,gBAAApD,KACAA,IAAA,KAAAA,EAAA,KAEA,QADAqD,MACAP,EAAA,EAAgBA,EAAAC,KAAAC,OAAiBF,IAAA,CACjC,GAAAxC,GAAAyC,KAAAD,GAAA,EACA,iBAAAxC,KACA+C,EAAA/C,IAAA,GAEA,IAAAwC,EAAA,EAAYA,EAAA9C,EAAAgD,OAAoBF,IAAA,CAChC,GAAAG,GAAAjD,EAAA8C,EAKA,iBAAAG,GAAA,IAAAI,EAAAJ,EAAA,MACAG,IAAAH,EAAA,GACAA,EAAA,GAAAG,EACKA,IACLH,EAAA,OAAAA,EAAA,aAAAG,EAAA,KAEAT,EAAAO,KAAAD,MAIAN,IH6GMW,EACA,SAASjD,EAAQD,EAASH,GIjGhC,QAAAsD,GAAAC,EAAAC,GACA,OAAAX,GAAA,EAAeA,EAAAU,EAAAR,OAAmBF,IAAA,CAClC,GAAAG,GAAAO,EAAAV,GACAY,EAAAC,EAAAV,EAAA3C,GACA,IAAAoD,EAAA,CACAA,EAAAE,MACA,QAAAC,GAAA,EAAiBA,EAAAH,EAAAI,MAAAd,OAA2Ba,IAC5CH,EAAAI,MAAAD,GAAAZ,EAAAa,MAAAD,GAEA,MAAQA,EAAAZ,EAAAa,MAAAd,OAAuBa,IAC/BH,EAAAI,MAAAZ,KAAAa,EAAAd,EAAAa,MAAAD,GAAAJ,QAEG,CAEH,OADAK,MACAD,EAAA,EAAiBA,EAAAZ,EAAAa,MAAAd,OAAuBa,IACxCC,EAAAZ,KAAAa,EAAAd,EAAAa,MAAAD,GAAAJ,GAEAE,GAAAV,EAAA3C,KAA2BA,GAAA2C,EAAA3C,GAAAsD,KAAA,EAAAE,WAK3B,QAAAE,GAAArB,GAGA,OAFAa,MACAS,KACAnB,EAAA,EAAeA,EAAAH,EAAAK,OAAiBF,IAAA,CAChC,GAAAG,GAAAN,EAAAG,GACAxC,EAAA2C,EAAA,GACAiB,EAAAjB,EAAA,GACAkB,EAAAlB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,GAAcH,MAAAC,QAAAC,YACdH,GAAA3D,GAGA2D,EAAA3D,GAAAwD,MAAAZ,KAAAmB,GAFAb,EAAAN,KAAAe,EAAA3D,IAAgCA,KAAAwD,OAAAO,KAIhC,MAAAb,GAGA,QAAAc,GAAAb,EAAAc,GACA,GAAAC,GAAAC,IACAC,EAAAC,IAAA3B,OAAA,EACA,YAAAS,EAAAmB,SACAF,EAEGA,EAAAG,YACHL,EAAAM,aAAAP,EAAAG,EAAAG,aAEAL,EAAAO,YAAAR,GAJAC,EAAAM,aAAAP,EAAAC,EAAAQ,YAMAL,EAAAzB,KAAAqB,OACE,eAAAd,EAAAmB,SAGF,SAAAK,OAAA,qEAFAT,GAAAO,YAAAR,IAMA,QAAAW,GAAAX,GACAA,EAAAY,WAAAC,YAAAb,EACA,IAAAc,GAAAV,EAAAW,QAAAf,EACAc,IAAA,GACAV,EAAAY,OAAAF,EAAA,GAIA,QAAAG,GAAA/B,GACA,GAAAc,GAAAkB,SAAAC,cAAA,QAGA,OAFAnB,GAAAoB,KAAA,WACArB,EAAAb,EAAAc,GACAA,EAGA,QAAAqB,GAAAnC,GACA,GAAAoC,GAAAJ,SAAAC,cAAA,OAGA,OAFAG,GAAAC,IAAA,aACAxB,EAAAb,EAAAoC,GACAA,EAGA,QAAA9B,GAAAjD,EAAA2C,GACA,GAAAc,GAAAwB,EAAAC,CAEA,IAAAvC,EAAAwC,UAAA,CACA,GAAAC,GAAAC,GACA5B,GAAA6B,MAAAZ,EAAA/B,IACAsC,EAAAM,EAAAC,KAAA,KAAA/B,EAAA2B,GAAA,GACAF,EAAAK,EAAAC,KAAA,KAAA/B,EAAA2B,GAAA,OACEpF,GAAAsD,WACF,kBAAAmC,MACA,kBAAAA,KAAAC,iBACA,kBAAAD,KAAAE,iBACA,kBAAAC,OACA,kBAAAC,OACApC,EAAAqB,EAAAnC,GACAsC,EAAAa,EAAAN,KAAA,KAAA/B,GACAyB,EAAA,WACAd,EAAAX,GACAA,EAAAsC,MACAN,IAAAE,gBAAAlC,EAAAsC,SAGAtC,EAAAiB,EAAA/B,GACAsC,EAAAe,EAAAR,KAAA,KAAA/B,GACAyB,EAAA,WACAd,EAAAX,IAMA,OAFAwB,GAAAjF,GAEA,SAAAiG,GACA,GAAAA,EAAA,CACA,GAAAA,EAAA7C,MAAApD,EAAAoD,KAAA6C,EAAA5C,QAAArD,EAAAqD,OAAA4C,EAAA3C,YAAAtD,EAAAsD,UACA,MACA2B,GAAAjF,EAAAiG,OAEAf,MAcA,QAAAK,GAAA9B,EAAAyC,EAAAhB,EAAAlF,GACA,GAAAoD,GAAA8B,EAAA,GAAAlF,EAAAoD,GAEA,IAAAK,EAAA0C,WACA1C,EAAA0C,WAAAC,QAAAC,EAAAH,EAAA9C,OACE,CACF,GAAAkD,GAAA3B,SAAA4B,eAAAnD,GACAoD,EAAA/C,EAAA+C,UACAA,GAAAN,IAAAzC,EAAAa,YAAAkC,EAAAN,IACAM,EAAAtE,OACAuB,EAAAO,aAAAsC,EAAAE,EAAAN,IAEAzC,EAAAQ,YAAAqC,IAKA,QAAAN,GAAAvC,EAAAzD,GACA,GAAAoD,GAAApD,EAAAoD,IACAC,EAAArD,EAAAqD,KAMA,IAJAA,GACAI,EAAAgD,aAAA,QAAApD,GAGAI,EAAA0C,WACA1C,EAAA0C,WAAAC,QAAAhD,MACE,CACF,KAAAK,EAAAS,YACAT,EAAAa,YAAAb,EAAAS,WAEAT,GAAAQ,YAAAU,SAAA4B,eAAAnD,KAIA,QAAA0C,GAAAf,EAAA/E,GACA,GAAAoD,GAAApD,EAAAoD,IACAE,EAAAtD,EAAAsD,SAEAA,KAEAF,GAAA,uDAAuDyC,KAAAa,SAAAC,mBAAAC,KAAAC,UAAAvD,MAAA,MAGvD,IAAAwD,GAAA,GAAAlB,OAAAxC,IAA6ByB,KAAA,aAE7BkC,EAAAhC,EAAAgB,IAEAhB,GAAAgB,KAAAN,IAAAC,gBAAAoB,GAEAC,GACAtB,IAAAE,gBAAAoB,GAhPA,GAAAlE,MACAmE,EAAA,SAAAC,GACA,GAAAC,EACA,mBAEA,MADA,mBAAAA,OAAAD,EAAAE,MAAAlF,KAAAmF,YACAF,IAGAG,EAAAL,EAAA,WACA,qBAAAM,KAAAC,OAAAC,UAAAC,UAAAC,iBAEA/D,EAAAqD,EAAA,WACA,MAAArC,UAAAjB,MAAAiB,SAAAgD,qBAAA,aAEArC,EAAA,KACAD,EAAA,EACAxB,IAEAtE,GAAAD,QAAA,SAAAuC,EAAAc,GAKAA,QAGA,mBAAAA,GAAAwC,YAAAxC,EAAAwC,UAAAkC,KAGA,mBAAA1E,GAAAmB,WAAAnB,EAAAmB,SAAA,SAEA,IAAApB,GAAAQ,EAAArB,EAGA,OAFAY,GAAAC,EAAAC,GAEA,SAAAiF,GAEA,OADAC,MACA7F,EAAA,EAAgBA,EAAAU,EAAAR,OAAmBF,IAAA,CACnC,GAAAG,GAAAO,EAAAV,GACAY,EAAAC,EAAAV,EAAA3C,GACAoD,GAAAE,OACA+E,EAAAzF,KAAAQ,GAEA,GAAAgF,EAAA,CACA,GAAAzE,GAAAD,EAAA0E,EACAnF,GAAAU,EAAAR,GAEA,OAAAX,GAAA,EAAgBA,EAAA6F,EAAA3F,OAAsBF,IAAA,CACtC,GAAAY,GAAAiF,EAAA7F,EACA,QAAAY,EAAAE,KAAA,CACA,OAAAC,GAAA,EAAkBA,EAAAH,EAAAI,MAAAd,OAA2Ba,IAC7CH,EAAAI,MAAAD,WACAF,GAAAD,EAAApD,OAiIA,IAAA6G,GAAA,WACA,GAAAyB,KAEA,iBAAA5B,EAAA6B,GAEA,MADAD,GAAA5B,GAAA6B,EACAD,EAAAE,OAAAC,SAAA5F,KAAA,WJ6NM6F,IACA,SAAS3I,EAAQD;;;;;;AKnZvB,mBAAAC,IAAA,mBAAAD,IAAAC,EAAAD,cACAC,EAAAD,QAAA,aAGA,SAAAiI,EAAAhG,EAAA4G,GAGA,YAYA,SAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAA,IAAAA,EAAA,cAA4CC,UAAAH,KAAoBC,GAGhE,QAAAG,GAAAC,GAQA,MAPAC,GAAAvB,UAAA,SAAApH,GACAA,IAAA0I,GACAC,EAAA3I,EAAA,SAAA4I,EAAAC,GACAH,EAAAI,eAAAD,KAAAH,EAAAG,GAAAD,OAIAF,EAUA,QAAAK,GAAAC,EAAAC,GACA,GAAAC,KAEA,QAAAC,KAAAH,GAAAE,KAAA,CACA,GAAAF,EAAAE,KAAAC,KAAAF,EAAAC,KAAAC,GAAA,KACAD,GAAA9G,KAAA4G,EAAAE,KAAAC,IAEA,MAAAD,GASA,QAAAE,GAAAC,GACA,GAAAC,OAAAC,KACA,MAAAD,QAAAC,KAAAF,EAEA,IAAAtH,KAKA,OAHA4G,GAAAU,EAAA,SAAAG,EAAAX,GACA9G,EAAAK,KAAAyG,KAEA9G,EAUA,QAAAyC,GAAAiF,EAAAb,GACA,GAAAc,MAAAlB,UAAAhE,QACA,MAAAiF,GAAAjF,QAAAoE,EAAAe,OAAAvC,UAAA,OAEA,IAAAwC,GAAAH,EAAAvH,SAAA,EAAA2H,EAAAF,OAAAvC,UAAA,MAKA,KAJAyC,IAAA,EAAAC,KAAAC,KAAAF,GAAAC,KAAAE,MAAAH,GAEAA,EAAA,IAAAA,GAAAD,GAEQC,EAAAD,EAAYC,IACpB,GAAAA,IAAAJ,MAAAI,KAAAjB,EAAA,MAAAiB,EAEA,UAYA,QAAAI,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAxB,EAAAqB,EAAAC,GAAAG,KAAsEC,IAEtE,QAAAzI,KAAAuI,GACA,GAAAA,EAAAvI,IAAAuI,EAAAvI,GAAA0I,SACAJ,EAAAlB,EAAAmB,EAAAvI,GAAA0I,QACAJ,EAAApI,QAEA,OAAAa,KAAAuH,GACA9F,EAAAiG,EAAAH,EAAAvH,KAAA,IACA0H,EAAArI,KAAAkI,EAAAvH,IACAyH,EAAAF,EAAAvH,IAAAmH,EAAAI,EAAAvH,IAGA,OAAAwF,MAAkBiC,EAAAL,GAYlB,QAAAQ,GAAAC,EAAAC,EAAAtB,GACA,IAAAA,EAAA,CACAA,IACA,QAAAJ,KAAAyB,GAAArB,EAAAnH,KAAA+G,GAGA,OAAAnH,GAAA,EAAeA,EAAAuH,EAAArH,OAAeF,IAAA,CAC9B,GAAA8I,GAAAvB,EAAAvH,EACA,IAAA4I,EAAAE,IAAAD,EAAAC,GAAA,SAEA,SAUA,QAAAC,GAAAxB,EAAAyB,GACA,GAAAC,KAKA,OAHAtC,GAAAY,EAAA,SAAA5H,GACAsJ,EAAAtJ,GAAAqJ,EAAArJ,KAEAsJ,EAeA,QAAAC,GAAAlL,GACA,GAAAmL,MACA5B,EAAAG,MAAAlB,UAAA4C,OAAAjE,MAAAuC,MAAAlB,UAAAkB,MAAAlB,UAAA6C,MAAA3L,KAAA0H,UAAA,GAIA,OAHAuB,GAAAY,EAAA,SAAAV,GACAA,IAAA7I,KAAAmL,EAAAtC,GAAA7I,EAAA6I,MAEAsC,EAKA,QAAAG,GAAAtL,GACA,GAAAmL,MACA5B,EAAAG,MAAAlB,UAAA4C,OAAAjE,MAAAuC,MAAAlB,UAAAkB,MAAAlB,UAAA6C,MAAA3L,KAAA0H,UAAA,GACA,QAAAyB,KAAA7I,GACAwE,EAAA+E,EAAAV,SAAAsC,EAAAtC,GAAA7I,EAAA6I,GAEA,OAAAsC,GAYA,QAAAnD,GAAAuD,EAAAC,GACA,GAAA/B,GAAAgC,EAAAF,GACAxJ,EAAA0H,OAMA,OALAd,GAAA4C,EAAA,SAAA/B,EAAAxH,GACAwJ,EAAAhC,EAAAxH,KACAD,EAAA0H,EAAA1H,EAAAG,OAAAF,GAAAwH,KAGAzH,EAGA,QAAA2J,GAAAH,EAAAC,GACA,GAAAzJ,GAAA0J,EAAAF,QAKA,OAHA5C,GAAA4C,EAAA,SAAA/B,EAAAxH,GACAD,EAAAC,GAAAwJ,EAAAhC,EAAAxH,KAEAD,EAiGA,QAAA4J,GAAAC,EAAAC,GAEA,GAAAC,GAAA,EACAC,EAAA,EACAC,KACAC,KACAC,EAAAF,EACAG,EAAA5D,EAAAqD,EAAAQ,KAAAJ,IAA4CK,WAAAL,EAAAM,SAAAN,GAuB5C/J,MAAAsK,MAAA,SAAAC,GAMA,QAAAC,GAAA7D,EAAAC,GACA,GAAA6D,EAAA7D,KAAAkD,EAAA,CAGA,GADAY,EAAAvK,KAAAyG,GACA6D,EAAA7D,KAAAiD,EAEA,KADAa,GAAAlI,OAAA,EAAAD,EAAAmI,EAAA9D,IACA,GAAA1E,OAAA,sBAAAwI,EAAAtK,KAAA,QAIA,IAFAqK,EAAA7D,GAAAiD,EAEAc,EAAAhE,GACAiE,EAAAzK,KAAAyG,GAAA,WAAqC,MAAAgD,GAAAiB,IAAAlE,KAA+BqD,OAC7D,CACP,GAAAvB,GAAAmB,EAAAkB,SAAAnE,EACAD,GAAA+B,EAAA,SAAAsC,GACAA,IAAAnE,GAAA2D,EAAA1D,eAAAkE,IAAAP,EAAAD,EAAAQ,QAEAH,EAAAzK,KAAAyG,EAAAD,EAAA8B,GAGAiC,EAAAM,MACAP,EAAA7D,GAAAkD,GAKA,QAAAmB,GAAAtE,GACA,MAAAuE,GAAAvE,MAAAwE,MAAAxE,EAAAyD,WAhCA,IAAAc,EAAAX,GAAA,SAAArI,OAAA,iCACA,IAAAkJ,GAAAjE,EAAAoD,OAGAK,KAAAF,KAAAD,IA+BA,OAPA/D,GAAA6D,EAAAC,GACAD,EAAAG,EAAAD,EAAA,KAMA,SAAAY,EAAAjF,EAAAkF,GAsBA,QAAAC,OAEAC,IACAC,GAAAjF,EAAAuC,EAAA3C,EAAAiE,UACAvK,EAAAuK,SAAAtB,EACAjJ,EAAAsK,WAAAtK,EAAAsK,aAAA,QACAtK,GAAA4L,kBACAC,EAAAC,QAAA7C,IAIA,QAAA8C,GAAAC,GACAhM,EAAAiM,UAAAD,EACAH,EAAAK,OAAAF,GAiCA,QAAAG,GAAArF,EAAAsF,EAAAzD,GAGA,QAAA0D,GAAAL,GACAM,EAAAJ,OAAAF,GACAD,EAAAC,GAcA,QAAAO,KACA,IAAAC,EAAAxM,EAAAiM,WACA,IACAK,EAAAR,QAAAhC,EAAAqC,OAAAC,EAAAZ,EAAAvC,IACAqD,EAAAG,QAAApB,KAAA,SAAArL,GACAiJ,EAAAnC,GAAA9G,EACAyL,KACaY,GACF,MAAAK,GACXL,EAAAK,IA1BA,GAAAJ,GAAAzC,EAAA8C,QAAAC,EAAA,CAOAhG,GAAA+B,EAAA,SAAAkE,GACAC,EAAA/F,eAAA8F,KAAAtB,EAAAxE,eAAA8F,KACAD,IACAE,EAAAD,GAAAxB,KAAA,SAAArL,GACAiJ,EAAA4D,GAAA7M,IACA4M,GAAAL,KACaF,MAGbO,GAAAL,IAcAO,EAAAhG,GAAAwF,EAAAG,QAhGA,GAHAtB,EAAAI,IAAAC,IAAApF,IACAoF,EAAAlF,EAAsBA,EAAAiF,EAAiBA,EAAA,MAEvCA,GACA,IAAAH,EAAAG,GACA,SAAAnJ,OAAA,kCAFAmJ,GAAApB,CAIA,IAAA7D,GACA,IAAA6E,EAAA7E,GACA,SAAAlE,OAAA,iEAFAkE,GAAA8D,CAOA,IAAAyB,GAAAhC,EAAA8C,QACA3M,EAAA6L,EAAAY,QACAK,EAAA9M,EAAAsK,cACArB,EAAAzC,KAA4B+E,GAC5BG,EAAA,EAAAZ,EAAA3K,OAAA,EACAwL,GAAA,CAmBA,IAAAa,EAAAlG,EAAA2F,WAEA,MADAF,GAAAzF,EAAA2F,WACAjM,CAGAsG,GAAAsF,mBACAlF,EAAAuC,EAAAM,EAAAjD,EAAAsF,kBAAAN,IAKA9E,EAAAsG,EAAAxG,EAAAgE,YACAhE,EAAAiE,UACAoB,EAAAjF,EAAAuC,EAAAM,EAAAjD,EAAAiE,SAAAe,IACAtL,EAAA4L,kBAAArC,EAAAjD,EAAAiE,SAAAe,GACAG,MAEAnF,EAAAsF,oBACA5L,EAAA4L,kBAAArC,EAAAjD,EAAAsF,kBAAAN,IAEAhF,EAAA+E,KAAAI,EAAAM,GAIA,QAAA9L,GAAA,EAAA8M,EAAAjC,EAAA3K,OAAmCF,EAAA8M,EAAM9M,GAAA,EACzCsL,EAAAxE,eAAA+D,EAAA7K,IAAAwL,IACAU,EAAArB,EAAA7K,GAAA6K,EAAA7K,EAAA,GAAA6K,EAAA7K,EAAA,GAsCA,OAAAD,KAiEAE,KAAA4L,QAAA,SAAArB,EAAAc,EAAAjF,EAAAkF,GACA,MAAAtL,MAAAsK,MAAAC,GAAAc,EAAAjF,EAAAkF,IAmBA,QAAAwB,GAAAC,EAAAC,EAAApD,GA2BA5J,KAAAiN,WAAA,SAAA1N,EAAAkJ,EAAA4C,GACA,MACAiB,GAAA/M,EAAA2N,UAAAlN,KAAAmN,WAAA5N,EAAA2N,SAAAzE,GACA6D,EAAA/M,EAAA6N,aAAApN,KAAAqN,QAAA9N,EAAA6N,YAAA3E,GACA6D,EAAA/M,EAAA+N,kBAAAtN,KAAAuN,aAAAhO,EAAA+N,iBAAA7E,EAAA4C,GACA,MAmBArL,KAAAmN,WAAA,SAAAD,EAAAzE,GACA,MAAA+E,GAAAN,KAAAzE,GAAAyE,GAiBAlN,KAAAqN,QAAA,SAAAI,EAAAhF,GAEA,MADA+E,GAAAC,SAAAhF,IACA,MAAAgF,EAAA,KACAV,EACAlC,IAAA4C,GAAmBC,MAAAV,EAAAW,SAAkCC,OAAA,eACrDzC,KAAA,SAAA0C,GAAkC,MAAAA,GAAAC,QAkBlC9N,KAAAuN,aAAA,SAAAQ,EAAAtF,EAAA4C,GACA,MAAAzB,GAAAqC,OAAA8B,EAAA,KAAA1C,IAAuD5C,YAyEvD,QAAAuF,GAAAC,EAAA1O,EAAA2O,GAwBA,QAAAC,GAAA5Q,EAAAqF,EAAArD,EAAA6O,GAEA,GADAC,EAAAlO,KAAA5C,GACA8K,EAAA9K,GAAA,MAAA8K,GAAA9K,EACA,iCAAA8H,KAAA9H,GAAA,SAAA2E,OAAA,2BAAA3E,EAAA,iBAAA0Q,EAAA,IACA,IAAAxF,EAAAlL,GAAA,SAAA2E,OAAA,6BAAA3E,EAAA,iBAAA0Q,EAAA,IAEA,OADAxF,GAAAlL,GAAA,GAAA+Q,GAAAC,MAAAhR,EAAAqF,EAAArD,EAAA6O,GACA3F,EAAAlL,GAGA,QAAAiR,GAAAC,EAAAR,EAAAS,EAAAC,GACA,GAAAC,IAAA,OAAA9O,EAAA2O,EAAAI,QAAA,wBAA+E,OAC/E,KAAAZ,EAAA,MAAAnO,EACA,QAAA4O,GACA,OAAAE,GAAA,SAAAD,EAAA,QAAuE,MACvE,QACA7O,IAAA+O,QAAA,UACAD,GAAA,gBACA,MACA,SAAAA,GAAA,IAAAF,EAAA,UAEA,MAAA5O,GAAA8O,EAAA,GAAAX,EAAAW,EAAA,GAOA,QAAAE,GAAApR,EAAAqR,GACA,GAAAxR,GAAAyR,EAAAC,EAAArM,EAAAsM,CAUA,OATA3R,GAAAG,EAAA,IAAAA,EAAA,GACAwR,EAAA3P,EAAAkJ,OAAAlL,GACA0R,EAAAhB,EAAAkB,UAAAC,EAAA1R,EAAAuG,OACA+K,EAAAD,EAAArR,EAAA,GAAAA,EAAA,UAAAA,EAAA,cAEAsR,IACApM,EAAA0L,EAAA1L,KAAAoM,IAAA7I,EAAAmI,EAAA1L,KAAA,WAAyEqL,QAAA,GAAAoB,QAAAL,EAAAzP,EAAA+P,gBAAA,IAAApJ,OAIzE3I,KAAAyR,SAAAC,UAAArM,OAAAsM,OA9DA3P,EAAA+G,GAAmBmC,WAAayC,EAAA3L,QAehC,IAEA7B,GAFA6R,EAAA,wFACAC,EAAA,4FACAC,EAAA,IAAAL,EAAA,EACAM,EAAA1P,KAAA0P,YACArH,EAAA6F,IAAAzF,UACAA,EAAAzI,KAAAyI,OAAAyF,IAAAzF,OAAAkH,QAAA,GAAArB,GAAAsB,SACAvB,IAyBArO,MAAA6P,OAAA5B,CAqBA,KADA,GAAArQ,GAAAmN,EAAAkE,GACAvR,EAAA6R,EAAAO,KAAA7B,MACArQ,EAAAkR,EAAApR,GAAA,KACAE,EAAAqR,QAAA1M,QAAA,WAEAwI,EAAAoD,EAAAvQ,EAAAL,GAAAK,EAAAgF,KAAAhF,EAAAsR,IAAA,QACAO,GAAAjB,EAAA5Q,EAAAqR,QAAAlE,EAAAnI,KAAAqL,QAAA4B,OAAA9E,EAAA2D,OAAA3D,EAAAgF,YACAL,EAAAvP,KAAAvC,EAAAqR,SACAG,EAAAG,EAAAS,SAEAf,GAAAhB,EAAAkB,UAAAC,EAGA,IAAArP,GAAAkP,EAAA1M,QAAA,IAEA,IAAAxC,GAAA,GACA,GAAAkQ,GAAAjQ,KAAAkQ,aAAAjB,EAAAE,UAAApP,EAIA,IAHAkP,IAAAE,UAAA,EAAApP,GACAC,KAAAmQ,WAAAlC,EAAAkB,UAAA,EAAAC,EAAArP,GAEAkQ,EAAAhQ,OAAA,EAEA,IADAmP,EAAA,EACA1R,EAAA8R,EAAAM,KAAAG,IACArS,EAAAkR,EAAApR,GAAA,GACAqN,EAAAoD,EAAAvQ,EAAAL,GAAAK,EAAAgF,KAAAhF,EAAAsR,IAAA,UACAE,EAAAG,EAAAS,cAKAhQ,MAAAmQ,WAAAlC,EACAjO,KAAAkQ,aAAA,EAGAT,IAAAjB,EAAAS,IAAA1P,EAAA6Q,UAAA,eACAV,EAAAvP,KAAA8O,GAEAjP,KAAAgP,OAAA,GAAAK,QAAAI,EAAAlQ,EAAA+P,gBAAA,IAAApJ,GACAlG,KAAAqQ,OAAAX,EAAA,GACA1P,KAAAsQ,aAAAjC,EAsPA,QAAAkC,GAAAhR,GACA+G,EAAAtG,KAAAT,GAwKA,QAAAiR,KASA,QAAAC,GAAAlJ,GAA6B,aAAAA,IAAA1H,WAAAgP,QAAA,WAAAA,QAAA,aAAAtH,EAC7B,QAAAmJ,GAAAnJ,GAA+B,aAAAA,IAAA1H,WAAAgP,QAAA,YAAAA,QAAA,WAAAtH,EAyD/B,QAAAoJ,KACA,OACAP,OAAAQ,EACAtB,gBAAAuB,GAIA,QAAAC,GAAAnK,GACA,MAAA6G,GAAA7G,IAAA6C,EAAA7C,IAAA6G,EAAA7G,IAAA1G,OAAA,IAqOA,QAAA8Q,KACA,KAAAC,EAAA/Q,QAAA,CACA,GAAA2C,GAAAoO,EAAAC,OACA,IAAArO,EAAAqL,QAAA,SAAA/L,OAAA,oDACA5C,GAAAgH,OAAA4K,EAAAtO,EAAAlD,MAAAyR,EAAAlF,OAAArJ,EAAAwO,OA6HA,QAAAxB,GAAAnH,GACAnC,EAAAtG,KAAAyI,OAjbA6F,EAAAtO,IAEA,IASiBmR,GATjBN,GAAA,EAAAD,GAAA,EAAAS,GAAA,EASAH,KAAiBI,GAAA,EAAAN,KAAAO,GACjB9C,QACA+C,OAAAf,EACAgB,OAAAf,EAGAgB,GAAA,SAAAnK,GAAyB,aAAAA,IAAA+E,EAAA/E,IAAA,gBAAAA,IACzB0G,QAAA,UAEA0D,OACAH,OAAAf,EACAgB,OAAA,SAAAlK,GAA6B,MAAAqK,UAAArK,EAAA,KAC7BmK,GAAA,SAAAnK,GAAyB,MAAA+E,GAAA/E,IAAAvH,KAAAyR,OAAAlK,EAAA1H,cAAA0H,GACzB0G,QAAA,OAEA4D,MACAL,OAAA,SAAAjK,GAA6B,MAAAA,GAAA,KAC7BkK,OAAA,SAAAlK,GAA6B,WAAAqK,SAAArK,EAAA,KAC7BmK,GAAA,SAAAnK,GAAyB,MAAAA,MAAA,GAAAA,KAAA,GACzB0G,QAAA,OAEA6D,MACAN,OAAA,SAAAjK,GACA,MAAAvH,MAAA0R,GAAAnK,IAEAA,EAAAwK,eACA,KAAAxK,EAAAyK,WAAA,IAAA5I,WACA,IAAA7B,EAAA0K,WAAA7I,WACAhJ,KAAA,KAJA8F,GAMAuL,OAAA,SAAAlK,GACA,GAAAvH,KAAA0R,GAAAnK,GAAA,MAAAA,EACA,IAAA2K,GAAAlS,KAAAmS,QAAArC,KAAAvI,EACA,OAAA2K,GAAA,GAAAE,MAAAF,EAAA,GAAAA,EAAA,KAAAA,EAAA,IAAAhM,GAEAwL,GAAA,SAAAnK,GAAyB,MAAAA,aAAA6K,QAAAC,MAAA9K,EAAA+K,YACzBC,OAAA,SAAA5J,EAAAC,GAA+B,MAAA5I,MAAA0R,GAAA/I,IAAA3I,KAAA0R,GAAA9I,IAAAD,EAAA6J,gBAAA5J,EAAA4J,eAC/BvE,QAAA,0DACAkE,QAAA,yDAEAM,MACAjB,OAAAlS,EAAAoT,OACAjB,OAAAnS,EAAAqT,SACAjB,GAAApS,EAAA4L,SACAqH,OAAAjT,EAAAiT,OACAtE,QAAA,UAEA2E,KACApB,OAAAlS,EAAAuT,SACApB,OAAAnS,EAAAuT,SACAN,OAAAjT,EAAAiT,OACAtE,QAAA,MAkBAuC,GAAAsC,kBAAA,SAAAvT,GACA,IAAAuR,EAAAvR,EAAAoH,OAAA,MAAApH,GAAAoH,KACA,KAAAwK,EAAA,SAAAjP,OAAA,8DACA,OAAAiP,GAAAlF,OAAA1M,EAAAoH,QAcA3G,KAAAsP,gBAAA,SAAA3I,GAGA,MAFA2F,GAAA3F,KACAkK,EAAAlK,GACAkK,GAcA7Q,KAAA+S,WAAA,SAAApM,GAGA,MAFA2F,GAAA3F,KACAiK,EAAAjK,GACAiK,GAkBA5Q,KAAAqR,oBAAA,SAAA1K,GACA,IAAA2F,EAAA3F,GAAA,MAAA0K,EACA,IAAA1K,KAAA,GAAAA,KAAA,IAAAgE,EAAAhE,GACA,SAAAzE,OAAA,0BAAAyE,EAAA,kDAEA,OADA0K,GAAA1K,EACAA,GAeA3G,KAAAgT,QAAA,SAAA/E,EAAA1O,GACA,UAAAyO,GAAAC,EAAA3H,EAAAqK,IAAApR,KAeAS,KAAAiT,UAAA,SAAAC,GACA,IAAAhI,EAAAgI,GAAA,QACA,IAAApT,IAAA,CAOA,OALA4G,GAAAsH,EAAAzH,UAAA,SAAAgB,EAAA7H,GACA8N,EAAAjG,KACAzH,KAAAwM,EAAA4G,EAAAxT,KAAA8N,EAAA0F,EAAAxT,OAGAI,GA8GAE,KAAA4C,KAAA,SAAAlD,EAAAyT,EAAAC,GACA,IAAA9G,EAAA6G,GAAA,MAAAjC,GAAAxR,EACA,IAAAwR,EAAArK,eAAAnH,GAAA,SAAAwC,OAAA,iBAAAxC,EAAA,8BAOA,OALAwR,GAAAxR,GAAA,GAAA6Q,GAAAjK,GAAoC5G,QAAayT,IACjDC,IACApC,EAAA7Q,MAAsBT,OAAA0R,IAAAgC,IACtB9B,GAAAP,KAEA/Q,MAaA0G,EAAA6K,EAAA,SAAA3O,EAAAlD,GAA8CwR,EAAAxR,GAAA,GAAA6Q,GAAAjK,GAAiC5G,QAAWkD,MAC1FsO,EAAA/K,EAAA+K,MAGAlR,KAAAqT,MAAA,qBAAAzJ,GAQA,MAPAuH,GAAAvH,EACA0H,GAAA,EACAP,IAEArK,EAAA6K,EAAA,SAAA3O,EAAAlD,GACAwR,EAAAxR,KAAAwR,EAAAxR,GAAA,GAAA6Q,GAAA3N,MAEA5C,OAGAA,KAAAuO,MAAA,SAAAhR,EAAAqF,EAAArD,EAAA6O,GAYA,QAAAkF,GAAA/T,GACA,GAAA+H,GAAA4D,EAAA3L,GAAA4H,EAAA5H,MACAgU,EAAAhR,EAAA+E,EAAA,eAAA/E,EAAA+E,EAAA,cACA/E,EAAA+E,EAAA,gBAAA/E,EAAA+E,EAAA,aAGA,OAFAiM,KAAAhU,GAAiCoH,MAAApH,IACjCA,EAAAiU,KAAA1C,EAAAvR,EAAAoH,OAAApH,EAAAoH,MAAA,WAA6E,MAAApH,GAAAoH,OAC7EpH,EAGA,QAAAkU,GAAAlU,EAAAmU,EAAAtF,GACA,GAAA7O,EAAAqD,MAAA8Q,EAAA,SAAAxR,OAAA,UAAA3E,EAAA,iCACA,OAAAmW,KACAnU,EAAAqD,KAEAtD,EAAAqL,SAAApL,EAAAqD,MACAsO,EAAA3R,EAAAqD,MACArD,EAAAqD,eAAA2N,GACAhR,EAAAqD,KACA,GAAA2N,GAAAhR,EAAAqD,MANA,WAAAwL,EAAA8C,EAAA0B,IAAA1B,EAAAzC,OAUA,QAAAkF,KACA,GAAAC,IAA2BpM,MAAA,WAAA4G,GAAA,QAC3ByF,EAAAtW,EAAA2U,MAAA,UAAwD1K,OAAA,KACxD,OAAAlB,GAAAsN,EAAAC,EAAAtU,GAAAiI,MAMA,QAAAsM,GAAAvU,EAAAwQ,GACA,GAAArB,GAAAnP,EAAAmP,MACA,KAAAqB,GAAArB,KAAA,UACA,KAAApC,EAAAoC,IAAA,MAAAA,EAAA,MAAA2C,EACA,IAAA3C,KAAA,GAAA/D,EAAA+D,GAAA,MAAAA,EACA,UAAAxM,OAAA,2BAAAwM,EAAA,uDAGA,QAAAqF,GAAAxU,EAAAyU,EAAAjE,EAAArB,GACA,GAAAG,GAAAoF,EAAAC,IACStM,KAAA,GAAAuM,GAAApE,GAAAiE,EAAA9N,EAAA,KACA0B,KAAA,KAAAuM,GAAApE,GAAAiE,EAAA9N,EAAA,IAMT,OAJA2I,GAAArF,EAAAjK,EAAAsP,SAAAtP,EAAAsP,WACAlE,EAAA+D,IACAG,EAAA1O,MAAsByH,KAAA8G,EAAAyF,GAAAjO,IACtB+N,EAAAxK,EAAAoF,EAAA,SAAA3O,GAAoD,MAAAA,GAAA0H,OACpD7B,EAAAmO,EAAA,SAAAhU,GAAmD,MAAAqC,GAAA0R,EAAA/T,EAAA0H,aAAoDuB,OAAA0F,GAMvG,QAAAiE,KACA,IAAA3B,EAAA,SAAAjP,OAAA,8DACA,IAAAkS,GAAAjD,EAAAlF,OAAA1M,EAAAiU,KACA,WAAAY,OAAAlO,IAAAoF,EAAA1I,KAAA8O,GAAA0C,GACA,SAAAlS,OAAA,kBAAAkS,EAAA,oBAAA9I,EAAA/N,GAAA,iCAAA+N,EAAA1I,KAAAlD,KAAA,IACA,OAAA0U,GAOA,QAAAC,GAAA1N,GACA,QAAA2N,GAAA/M,GAAmC,gBAAAxJ,GAAuB,MAAAA,GAAA6J,OAAAL,GAC1D,QAAAgN,GAAA5N,GACA,GAAAb,GAAA2D,EAAA1D,EAAAuF,EAAAuD,QAAAyF,EAAA3N,IAAA,SAAA5I,GAAyF,MAAAA,GAAAoW,IACzF,OAAArO,GAAA7F,OAAA6F,EAAA,GAAAa,EAGA,MADAA,GAAA4N,EAAA5N,GACA2F,EAAA3F,GAAA2E,EAAA1I,KAAA4R,WAAA7N,GAAAmM,IAGA,QAAAjT,KAAyB,gBAAUtC,EAAA,IAAAqF,EAAA,aAAA8L,EAAA,eAAAqB,EAAA,IAvFnC,GAAAzE,GAAAtL,IACAT,GAAA+T,EAAA/T,GACAqD,EAAA6Q,EAAAlU,EAAAqD,EAAAwL,EACA,IAAA4F,GAAAL,GACA/Q,GAAAoR,EAAApR,EAAA6R,SAAAT,EAAA,WAAA5F,GAAAxL,EACA,WAAAA,EAAAlD,MAAAsU,GAAA,SAAA5F,GAAA7O,EAAAoH,QAAAT,IACA3G,EAAAoH,MAAA,GACA,IAAAoJ,GAAAxQ,EAAAoH,QAAAT,EACAwI,EAAAoF,EAAAvU,EAAAwQ,GACAlB,EAAAkF,EAAAxU,EAAAyU,EAAAjE,EAAArB,EAgFApI,GAAAtG,MACAzC,KACAqF,OACAwL,WACA5G,MAAAwM,EACAtF,SACAG,UACAkB,aACApJ,MAAA0N,EACAK,QAAAxO,EACA3G,SACAM,cAQA+P,EAAArJ,WACAoJ,MAAA,WACA,MAAAxJ,GAAAnG,KAAAsG,EAAA,GAAAsJ,IAAmD+E,SAAA3U,SAEnD4U,OAAA,WAGA,IAFA,GAAAtN,MAAAuN,KAAAzO,EAAApG,KACA8U,EAAA3N,EAAAyI,EAAArJ,WACAH,GAAsByO,EAAA1U,KAAAiG,GAAoBA,IAAAuO,QAO1C,OANAE,GAAAE,UACArO,EAAAmO,EAAA,SAAAG,GACAtO,EAAAS,EAAA6N,GAAA,SAAApO,GACArE,EAAA+E,EAAAV,SAAArE,EAAAuS,EAAAlO,SAAAU,EAAAnH,KAAAyG,OAGAU,GAEA+C,SAAA,SAAA4K,GACA,GAAAlM,MAAqBuC,EAAAtL,IAIrB,OAHA0G,GAAA4E,EAAAsJ,SAAA,SAAAhO,GACAmC,EAAAnC,GAAA0E,EAAA1E,GAAAD,MAAAsO,KAAArO,MAEAmC,GAEAmM,SAAA,SAAAC,EAAAC,GACA,GAAAC,IAAA,EAAA/J,EAAAtL,IAKA,OAJA0G,GAAA4E,EAAAsJ,SAAA,SAAAhO,GACA,GAAA0O,GAAAH,KAAAvO,GAAA2O,EAAAH,KAAAxO,EACA0E,GAAA1E,GAAAhE,KAAA2P,OAAA+C,EAAAC,KAAAF,GAAA,KAEAA,GAEAG,YAAA,SAAAP,GACA,GAAAlV,GAAAgL,EAAA0K,EAAAC,EAAAC,EAAArO,EAAAtH,KAAA4U,QACA,KAAA7U,EAAA,EAAiBA,EAAAuH,EAAArH,SACjB8K,EAAA/K,KAAAsH,EAAAvH,IACA0V,EAAAR,EAAA3N,EAAAvH,IACA0V,IAAAvP,GAAA,OAAAuP,IAAA1K,EAAAgF,YAHkChQ,IAAA,CAMlC,GADA2V,EAAA3K,EAAAnI,KAAA4R,WAAAiB,IACA1K,EAAAnI,KAAA8O,GAAAgE,GACA,QAEA,IADAC,EAAA5K,EAAAnI,KAAA4O,OAAAkE,GACApW,EAAAqL,SAAAgL,KAAA5K,EAAAnI,KAAAqL,QAAA6B,KAAA6F,GACA,SAEA,UAEAhB,SAAAzO,GAGAlG,KAAA4P,WAwBA,QAAAgG,GAAAC,EAAAC,GAIA,QAAAC,GAAAC,GACA,GAAA3F,GAAA,kDAA4DP,KAAAkG,EAAAnG,OAC5D,cAAAQ,IAAA,GAAAxB,QAAA,kBAIA,QAAAoH,GAAAhI,EAAAiE,GACA,MAAAjE,GAAAY,QAAA,iBAAyC,SAAAnR,EAAAwY,GACzC,MAAAhE,GAAA,MAAAgE,EAAA,EAAAxO,OAAAwO,MAmFA,QAAAC,GAAAvM,EAAAwM,EAAAlE,GACA,IAAAA,EAAA,QACA,IAAApS,GAAA8J,EAAAqC,OAAAmK,KAAqDC,OAAAnE,GACrD,QAAA5F,EAAAxM,MAwJA,QAAAuT,GAAAiD,EAAAC,EAAA3M,EAAA4M,EAAAC,GAIA,QAAAC,GAAAjJ,EAAAkJ,EAAAC,GACA,YAAAC,EAAApJ,EACAkJ,EAAAE,EAAAzN,MAAA,MAAAqE,EACAmJ,EAAAC,EAAAzN,MAAA,GAAAqE,EACAA,EAIA,QAAAzK,GAAA8T,GAOA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAApN,EAAA0M,EAEA,SAAAW,IACAtM,EAAAsM,IAAAX,EAAAzH,UAAApB,IAAAwJ,IACA,GAXA,IAAAH,MAAAI,iBAAA,CACAC,GAAAb,EAAA7I,QAAA0J,CACAA,GAAAjR,CAWA,IAAAnG,GAAAmH,EAAAkQ,EAAAnX,MAEA,KAAAF,EAAA,EAAiBA,EAAAmH,EAAOnH,IACxB,GAAAgX,EAAAK,EAAArX,IAAA,MAGAsX,IAAAN,EAAAM,IAGA,QAAAC,KAEA,MADAC,MAAAhB,EAAAiB,IAAA,yBAAAxU,GAlCA,GAAAmU,GAAAN,EAAAL,EAAAK,WAAAzI,EAAAkI,EAAA7I,KAwCA,OAFAgK,IAAAH,KA6BAI,KAAA,WACA1U,KAGAsU,OAAA,WACA,MAAAA,MAGAtU,OAAA,SAAA2U,GACA,MAAAA,QACAvJ,EAAAkI,EAAA7I,YAGA6I,EAAA7I,QAAAW,IAEAkI,EAAA7I,IAAAW,GACAkI,EAAAzH,aAGA1O,KAAA,SAAAyX,EAAAnP,EAAA/H,GACA,GAAA+M,GAAAmK,EAAAC,OAAApP,MAGA,QAAAgF,GAAAhF,KAAA,OACAgF,GAAA,IAAAhF,EAAA,MAGA6N,EAAA7I,OACA0J,EAAAzW,KAAAoX,cAAAxB,EAAA7I,MAAAvH,EACAxF,KAAAmO,SAAAyH,EAAAzH,WA4BA/K,KAAA,SAAA8T,EAAAnP,EAAA/H,GACA,IAAAkX,EAAAG,UAAAtP,GAAA,WAEA,IAAAkO,GAAAd,EAAAmC,WACA1Y,GAAA4L,SAAAyL,KACAA,IAAAsB,SAGAtB,KAAAF,EAAAyB,OAEA,IAAAzK,GAAAmK,EAAAC,OAAApP,EAcA,IAbA/H,QAEAiW,GAAA,OAAAlJ,IACAA,EAAA,IAAAoI,EAAAsC,aAAA1K,GAIA,OAAAA,GAAAhF,KAAA,OACAgF,GAAA,IAAAhF,EAAA,MAGAgF,EAAAiJ,EAAAjJ,EAAAkJ,EAAAjW,EAAAkW,WAEAlW,EAAAkW,WAAAnJ,EACA,MAAAA,EAGA,IAAA2K,IAAAzB,GAAAlJ,EAAA,OAAA4K,EAAA/B,EAAA+B,MAGA,OAFAA,GAAA,KAAAA,GAAA,MAAAA,EAAA,OAAAA,GAEA/B,EAAAgC,WAAA,MAAAhC,EAAAiC,OAAAF,EAAAD,EAAA3K,GAAArN,KAAA,MAtZA,GAAAmX,GAAAH,KAAAC,EAAA,KAAAI,GAAA,CA8CAzX,MAAAgX,KAAA,SAAAA,GACA,IAAAxJ,EAAAwJ,GAAA,SAAA9U,OAAA,4BAEA,OADAkV,GAAAjX,KAAA6W,GACAhX,MAkCAA,KAAAqX,UAAA,SAAAL,GACA,GAAArM,EAAAqM,GAAA,CACA,GAAAwB,GAAAxB,CACAA,GAAA,WAA0B,MAAAwB,QAE1B,KAAAhL,EAAAwJ,GAAA,SAAA9U,OAAA,4BAEA,OADAmV,GAAAL,EACAhX,MAiDAA,KAAAmK,KAAA,SAAA+L,EAAAE,GACA,GAAAoC,GAAAC,EAAA9N,EAAAyL,EAGA,IAFAzL,EAAAuL,OAAAJ,EAAA9C,QAAAkD,KAEAuC,IAAAjL,EAAA4I,KAAA5M,EAAA4M,GACA,SAAAlU,OAAA,8BAEA,IAAAwW,IACAC,QAAA,SAAAzC,EAAAE,GAKA,MAJAqC,KACAD,EAAA1C,EAAA9C,QAAAoD,GACAA,GAAA,kBAAAC,GAAkD,MAAAmC,GAAAX,OAAAxB,MAElD/P,EAAA,SAAAsD,EAAA0M,GACA,MAAAH,GAAAvM,EAAAwM,EAAAF,EAAApG,KAAAwG,EAAArP,OAAAqP,EAAArG,aAEAI,OAAA1F,EAAAuL,EAAA7F,QAAA6F,EAAA7F,OAAA,MAGAuI,MAAA,SAAA1C,EAAAE,GACA,GAAAF,EAAA2C,QAAA3C,EAAA4C,OAAA,SAAA5W,OAAA,6CAMA,OAJAuW,KACAD,EAAApC,EACAA,GAAA,kBAAAC,GAAkD,MAAAJ,GAAAuC,EAAAnC,MAElD/P,EAAA,SAAAsD,EAAA0M,GACA,MAAAH,GAAAvM,EAAAwM,EAAAF,EAAApG,KAAAwG,EAAArP,WAEAoJ,OAAA0F,EAAAG,OAKAa,GAAiB4B,QAAA7C,EAAA7C,UAAAiD,GAAA0C,MAAA1C,YAAA7G,QAEjB,QAAAnI,KAAA6P,GACA,GAAAA,EAAA7P,GAAA,MAAAlH,MAAAgX,KAAA0B,EAAAxR,GAAAgP,EAAAE,GAGA,UAAAlU,OAAA,6BAmDAlC,KAAA+Y,eAAA,SAAAtM,GACAA,IAAAvG,IAAAuG,GAAA,GACAgL,EAAAhL,GAeAzM,KAAAqT,OACAA,EAAA2F,SAAA,4DA4LA,QAAAC,GAAAC,EAAApD,GAyFA,QAAAqD,GAAAC,GACA,WAAAA,EAAA7W,QAAA,UAAA6W,EAAA7W,QAAA,KAGA,QAAA8W,GAAAC,EAAAC,GACA,IAAAD,EAAA,MAAApT,EAEA,IAAAsT,GAAA7O,EAAA2O,GACA5Z,EAAA8Z,EAAAF,IAAA5Z,KACAuH,EAAAkS,EAAAzZ,EAEA,IAAAuH,EAAA,CACA,IAAAsS,EAAA,SAAArX,OAAA,sCAAAxC,EAAA,IACA6Z,GAAAF,EAAAE,EAIA,KAFA,GAAAxW,GAAArD,EAAA+Z,MAAA,KAAA1Z,EAAA,EAAA2Z,EAAA3W,EAAA9C,OAAA0Z,EAAAJ,EAEYxZ,EAAA2Z,EAAgB3Z,IAC5B,QAAAgD,EAAAhD,IAAA,IAAAA,EAAA,CAIA,SAAAgD,EAAAhD,GAKA,KAJA,KAAA4Z,EAAAvT,OAAA,SAAAlE,OAAA,SAAAxC,EAAA,0BAAA6Z,EAAA7Z,KAAA,IACAia,KAAAvT,WALAuT,GAAAJ,CAUAxW,KAAAqG,MAAArJ,GAAAK,KAAA,KACAV,EAAAia,EAAAja,MAAAia,EAAAja,MAAAqD,EAAA,QAAAA,EAEA,GAAA6W,GAAAC,EAAAna,EAEA,QAAAka,IAAAJ,OAAAI,IAAAN,GAAAM,EAAAtO,OAAAgO,GAGApT,EAFA0T,EAKA,QAAAE,GAAAC,EAAAH,GACAI,EAAAD,KACAC,EAAAD,OAEAC,EAAAD,GAAA5Z,KAAAyZ,GAGA,QAAAK,GAAAF,GAEA,IADA,GAAAG,GAAAF,EAAAD,OACAG,EAAAja,QACAka,EAAAD,EAAAjJ,SAIA,QAAAkJ,GAAAP,GAEAA,EAAAzT,EAAAyT,GACAtO,KAAAsO,EACAhO,QAAAgO,EAAAhO,YACA/L,SAAA,WAA4B,MAAAG,MAAAN,OAG5B,IAAAA,GAAAka,EAAAla,IACA,KAAAiL,EAAAjL,MAAA6C,QAAA,iBAAAL,OAAA,+BACA,IAAA2X,EAAAhT,eAAAnH,GAAA,SAAAwC,OAAA,UAAAxC,EAAA,uBAGA,IAAAqa,GAAAra,EAAA6C,QAAA,UAAA7C,EAAAyP,UAAA,EAAAzP,EAAA0a,YAAA,MACAzP,EAAAiP,EAAAxT,QAAAwT,EAAAxT,OACA8E,EAAA0O,EAAAxT,SAAAuE,EAAAiP,EAAAxT,OAAA1G,MAAAka,EAAAxT,OAAA1G,KACA,EAGA,IAAAqa,IAAAF,EAAAE,GACA,MAAAD,GAAAC,EAAAH,EAAAtO,KAGA,QAAA1E,KAAAyT,GACA7M,EAAA6M,EAAAzT,MAAAgT,EAAAhT,GAAAyT,EAAAzT,GAAAgT,EAAAS,EAAAC,WAAA1T,IAgBA,OAdAiT,GAAAna,GAAAka,GAGAA,EAAAW,IAAAX,EAAAnM,KACAyL,EAAA/O,KAAAyP,EAAAnM,KAAA,iCAAA4I,EAAAmE,GACAC,EAAAtS,SAAAuS,WAAAd,GAAAlR,EAAA2N,EAAAmE,IACAC,EAAAE,aAAAf,EAAAvD,GAA8ClQ,SAAA,EAAAiI,UAAA,OAM9C6L,EAAAva,GAEAka,EAIA,QAAAgB,GAAAC,GACA,MAAAA,GAAAtY,QAAA,QAIA,QAAAuY,GAAAC,GAKA,OAJAC,GAAAD,EAAAtB,MAAA,KACA/J,EAAA+K,EAAAtS,SAAAzI,KAAA+Z,MAAA,KAGA1Z,EAAA,EAAAkb,EAAAD,EAAA/a,OAA4CF,EAAAkb,EAAOlb,IACnD,MAAAib,EAAAjb,KACA2P,EAAA3P,GAAA,IAeA,OAVA,OAAAib,EAAA,KACAtL,IAAAtG,MAAA7G,EAAAmN,EAAAsL,EAAA,KACAtL,EAAAwL,QAAA,OAGA,OAAAF,IAAA/a,OAAA,KACAyP,EAAAlN,OAAAD,EAAAmN,EAAAsL,IAAA/a,OAAA,MAAAyH,OAAAyT,WACAzL,EAAAvP,KAAA,OAGA6a,EAAA/a,QAAAyP,EAAAzP,QAIAyP,EAAAtP,KAAA,MAAA4a,EAAA5a,KAAA,IA0GA,QAAAgb,GAAA1b,EAAA2b,GAEA,MAAA1Q,GAAAjL,KAAA4M,EAAA+O,GACAhB,EAAA3a,GAEA8N,EAAA6N,IAAA1Q,EAAAjL,IAGA2a,EAAA3a,KAAA2a,EAAAC,WAAA5a,KACA2a,EAAAC,WAAA5a,GAAA2a,EAAA3a,IAEA2a,EAAA3a,GAAA2b,EACArb,MANAA,KAyUA,QAAA4Z,GAAAla,EAAAyT,GAKA,MAHAjI,GAAAxL,GAAAyT,EAAAzT,EACAyT,EAAAzT,OACAya,EAAAhH,GACAnT,KA6BA,QAAAqT,GAAAkD,EAAA5M,EAAA2R,EAAA1R,EAAA2R,EAAAf,EAAAgB,EAAAlF,EAAAR,GASA,QAAA2F,GAAAjD,EAAAoB,EAAAnR,EAAA/H,GAiCA,GAAAoW,GAAAP,EAAAmF,WAAA,iBAAAlD,EAAAoB,EAAAnR,EAEA,IAAAqO,EAAAI,iBAEA,MADAsE,GAAAxY,SACA2Y,CAGA,KAAA7E,EAAA8E,MACA,WAIA,IAAAlb,EAAAmb,OAEA,MADAL,GAAAxY,SACA8Y,CAEA,IAAAC,GAAAtB,EAAAuB,WAAArS,EAAAQ,KAAA2M,EAAA8E,MAWA,OATAG,GAAA5Q,KAAA,WACA,MAAA4Q,KAAAtB,EAAAuB,WAAAC,GACAzD,EAAA9X,QAAAmb,QAAA,EACApB,EAAAE,aAAAnC,EAAArE,GAAAqE,EAAA0D,SAAA1D,EAAA9X,WACO,WACP,MAAAib,KAEAH,EAAAxY,SAEA+Y,EAwlBA,QAAAI,GAAAvC,EAAAnR,EAAA2T,EAAA7T,EAAA9B,EAAA/F,GAkBA,QAAA2b,KACA,GAAAC,KAwBA,OArBA5V,GAAAkT,EAAA2C,MAAA,SAAAC,EAAA9c,GACA,GAAA+c,GAAAD,EAAA5Q,SAAA4Q,EAAA5Q,UAAAgO,EAAAhO,QAAA4Q,EAAA5Q,UACA6Q,GAAAC,WAAA,WACA,MAAApB,GAAAqB,KAAAjd,GAAqC8c,OAAAnR,OAAA5E,EAAAmW,QAAAnU,OAAA+R,EAAAqC,OAAAnc,EAAAmc,UAAgF,KAGrHP,EAAAnc,KAAAob,EAAA3P,QAAA6Q,EAAAhW,EAAAmW,QAAAnW,EAAAmF,QAAAgO,GAAAzO,KAAA,SAAArL,GAEA,GAAA0N,EAAAgP,EAAAM,qBAAAtT,EAAAgT,EAAAM,oBAAA,CACA,GAAAC,GAAAzd,EAAAgH,UAAkDmW,EAAAhW,EAAAmW,QAClD9c,GAAAkd,aAAApT,EAAAqC,OAAAuQ,EAAAM,mBAAA,KAAAC,OAEAjd,GAAAkd,aAAAR,EAAAhd,UAGAM,GAAAmd,QAAArD,EACA9Z,EAAAod,eAAAV,EAAAW,aACA1W,EAAA/G,GAAAI,OAIA6J,EAAAyT,IAAAd,GAAAnR,KAAA,WACA,MAAA1E,GAAAmW,UAvCA,GAAApC,GAAA,EAAA/R,EAAAK,EAAA8Q,EAAAnR,OAAAmM,SAAAnM,GACA4C,GAAoBmP,eAMpB/T,GAAAmF,QAAA2P,EAAA3P,QAAAgO,EAAAhO,QAAAP,EAAA5E,EAAAmF,QAAAgO,EACA,IAAAhN,IAAAnG,EAAAmF,QAAAT,KAAA,SAAAyR,GACAnW,EAAAmW,YAmCA,OAjCArU,IAAAqE,EAAAzM,KAAAoI,GAiCAoB,EAAAyT,IAAAxQ,GAAAzB,KAAAkR,GAAAlR,KAAA,SAAApC,GACA,MAAAtC,KA7sBA,GAAAwV,GAAAtS,EAAAqC,OAAA,GAAA9J,OAAA,0BACAmb,EAAA1T,EAAAqC,OAAA,GAAA9J,OAAA,yBACAyZ,EAAAhS,EAAAqC,OAAA,GAAA9J,OAAA,uBACA4Z,EAAAnS,EAAAqC,OAAA,GAAA9J,OAAA,qBA8sBA,OA3oBAob,GAAAjS,QAAmBO,QAAA,KAAAgR,SAA0BpC,kBAE7CC,GACAhS,UACAkR,QAAA2D,EAAAhS,KACAnD,SAAAmV,EACAtB,WAAA,MAuDAvB,EAAA8C,OAAA,SAAA3D,GACA,MAAAa,GAAAE,aAAAF,EAAAd,QAAAa,GAAgE+C,OAAA3D,IAAA,EAAAzT,SAAA,EAAA0W,QAAA,KAuEhEpC,EAAA+C,GAAA,SAAArJ,EAAA1L,EAAA/H,GACA,MAAA+Z,GAAAE,aAAAxG,EAAA1L,EAAAnC,GAAqDH,SAAA,EAAAsX,SAAAhD,EAAAtS,UAA2CzH,KA2ChG+Z,EAAAE,aAAA,SAAAxG,EAAA+H,EAAAxb,GACAwb,QACAxb,EAAA4F,GACA8H,UAAA,EAAAjI,SAAA,EAAAsX,SAAA,KAAAZ,QAAA,EAAAU,QAAA,EAAA1B,QAAA,GACOnb,MAEP,IACAoW,GADAlP,EAAA6S,EAAAtS,SAAAuV,EAAAjD,EAAAhS,OAAAkV,EAAA/V,EAAAX,KACA2W,EAAAvE,EAAAlF,EAAAzT,EAAA+c,UAGAI,EAAA3B,EAAA,IAEA,KAAA5P,EAAAsR,GAAA,CACA,GAAApF,IAAwBrE,KAAA+H,WAAAxb,WACxBod,EAAArC,EAAAjD,EAAA5Q,EAAA0D,KAAAoS,EAAAhd,EAEA,IAAAod,EACA,MAAAA,EAUA,IALA3J,EAAAqE,EAAArE,GACA+H,EAAA1D,EAAA0D,SACAxb,EAAA8X,EAAA9X,QACAkd,EAAAvE,EAAAlF,EAAAzT,EAAA+c,WAEAnR,EAAAsR,GAAA,CACA,IAAAld,EAAA+c,SAAA,SAAAvb,OAAA,kBAAAiS,EAAA,IACA,UAAAjS,OAAA,sBAAAiS,EAAA,iBAAAzT,EAAA+c,SAAA,MAGA,GAAAG,EAAArD,GAAA,SAAArY,OAAA,wCAAAiS,EAAA,IAEA,IADAzT,EAAAyF,UAAA+V,EAAAlU,EAAAwS,EAAA0B,MAAgFzB,EAAAtS,SAAAyV,KAChFA,EAAAnV,OAAA+M,YAAA0G,GAAA,MAAAJ,EAEAI,GAAA0B,EAAAnV,OAAA4B,SAAA6R,GACA/H,EAAAyJ,CAEA,IAAAG,GAAA5J,EAAAlN,KAGA+W,EAAA,EAAApE,EAAAmE,EAAAC,GAAA3S,EAAAiS,EAAAjS,OAAA4S,IAEA,IAAAvd,EAAA6c,QAMO,GAAA5S,EAAAjK,EAAA6c,SAAArS,EAAAxK,EAAA6c,QAAA,CACP,GAAArS,EAAAxK,EAAA6c,UAAA7c,EAAA6c,OAAA7d,KACA,SAAAwC,OAAA,8BAGA,IAAAgc,GAAAxd,EAAA6c,UAAA,EAAAI,EAAA,GAAAtE,EAAA3Y,EAAA6c,OACA,IAAA7c,EAAA6c,SAAAW,EACA,SAAAhc,OAAA,0BAAAyI,EAAAjK,EAAA6c,QAAA7c,EAAA6c,OAAA7c,EAAA6c,OAAA7d,MAAA,IAGA,MAAAka,OAAA+D,EAAAK,IAAApE,IAAAsE,GACA7S,EAAA4S,EAAAD,GAAApE,EAAAvO,OACA2S,IACApE,EAAAmE,EAAAC,QAlBA,MAAApE,OAAA+D,EAAAK,IAAApE,EAAAuE,UAAAjJ,SAAAgH,EAAAwB,IACArS,EAAA4S,EAAAD,GAAApE,EAAAvO,OACA2S,IACApE,EAAAmE,EAAAC,EAwBA,IAAAI,EAAAjK,EAAA+H,EAAAtU,EAAA8V,EAAArS,EAAA3K,GAYA,MAXAmd,KAAA3B,EAAA,KAAA2B,GACApD,EAAAhS,OAAAyT,EACAhT,EAAAuR,EAAAhS,OAAA+R,GACAtR,EAAAJ,EAAAqL,EAAA1L,OAAAmM,SAAA4F,GAAArG,EAAA9I,OAAAuR,QAAApC,cACA9Z,EAAA0N,UAAA+F,EAAAuG,WAAAvG,EAAAuG,UAAAjN,MACA+N,EAAArb,KAAAgU,EAAAuG,UAAAjN,IAAAyO,GACApE,eAAA,EAAAjJ,QAAA,YAAAnO,EAAA0N,WAEAoN,EAAAxY,QAAA,IAEAyX,EAAAuB,WAAA,KACArS,EAAAQ,KAAAsQ,EAAAd,QAUA,IANAuC,EAAApT,EAAAqL,EAAA1L,OAAAmM,SAAAsH,OAGA2B,IAAA3B,EAAA,KAAA2B,GAGAnd,EAAAmc,QA4BAtG,EAAAmF,WAAA,oBAAAvH,EAAA7I,KAAA4Q,EAAAtU,EAAA0D,KAAAoS,EAAAhd,GAAAwW,iBAIA,MAHAX,GAAAmF,WAAA,qBAAAvH,EAAA7I,KAAA4Q,EAAAtU,EAAA0D,KAAAoS,GAEA,MAAAjD,EAAAuB,YAAAR,EAAAxY,SACAqa,CAaA,QAFAgB,GAAA1U,EAAAQ,KAAAkB,GAEA4P,EAAA+C,EAAwB/C,EAAA8C,EAAA9d,OAAmBgb,IAAArB,EAAAmE,EAAA9C,GAC3C5P,EAAA4S,EAAAhD,GAAA9U,EAAAkF,GACAgT,EAAAlC,EAAAvC,EAAAsC,EAAAtC,IAAAzF,EAAAkK,EAAAhT,EAAA3K,EAOA,IAAAsb,GAAAvB,EAAAuB,WAAAqC,EAAAlT,KAAA,WACA,GAAA8P,GAAAqD,EAAAC,CAEA,IAAA9D,EAAAuB,eAAA,MAAAC,EAGA,KAAAhB,EAAA0C,EAAA1d,OAAA,EAAqCgb,GAAA+C,EAAW/C,IAChDsD,EAAAZ,EAAA1C,GACAsD,EAAAjT,KAAAkT,QACA5U,EAAAqC,OAAAsS,EAAAjT,KAAAkT,OAAAD,EAAAjT,KAAAiT,EAAAlT,OAAAuR,SAEA2B,EAAAlT,OAAA,IAIA,KAAA4P,EAAA+C,EAAsB/C,EAAA8C,EAAA9d,OAAmBgb,IACzCqD,EAAAP,EAAA9C,GACAqD,EAAAjT,OAAA4S,EAAAhD,GACAqD,EAAAhT,KAAAmT,SACA7U,EAAAqC,OAAAqS,EAAAhT,KAAAmT,QAAAH,EAAAhT,KAAAgT,EAAAjT,OAAAuR,QAKA,OAAAnC,GAAAuB,eAAAC,GAGAxB,EAAAtS,SAAAgM,EACAsG,EAAAd,QAAAxF,EAAA7I,KACAmP,EAAAhS,OAAAyT,EACAhT,EAAAuR,EAAAhS,OAAA+R,GACAC,EAAAuB,WAAA,KAEAtb,EAAA0N,UAAA+F,EAAAuG,WACAc,EAAArb,KAAAgU,EAAAuG,UAAAjN,IAAA0G,EAAAuG,UAAArP,OAAAuR,QAAApC,cACA1C,eAAA,EAAAjJ,QAAA,YAAAnO,EAAA0N,WAIA1N,EAAAmc,QAeAtG,EAAAmF,WAAA,sBAAAvH,EAAA7I,KAAA4Q,EAAAtU,EAAA0D,KAAAoS,GAEAlC,EAAAxY,QAAA,GAEAyX,EAAAd,UACO,SAAA+E,GACP,MAAAjE,GAAAuB,eAAAC,GAEAxB,EAAAuB,WAAA,KAmBAlF,EAAAP,EAAAmF,WAAA,oBAAAvH,EAAA7I,KAAA4Q,EAAAtU,EAAA0D,KAAAoS,EAAAgB,GAEA5H,EAAAI,kBACAsE,EAAAxY,SAGA2G,EAAAqC,OAAA0S,KAGA,OAAA1C,IAqCAvB,EAAA/I,GAAA,SAAA4H,EAAA7Q,EAAA/H,GACAA,EAAA4F,GAAwBmX,SAAAhD,EAAAtS,UAA4BzH,MACpD,IAAAkZ,GAAAP,EAAAC,EAAA5Y,EAAA+c,SAEA,OAAAnR,GAAAsN,GACAa,EAAAtS,WAAAyR,KACAnR,GAAAC,EAAAkR,EAAAnR,OAAA4B,SAAA5B,GAAA+R,IAF8BtU,GAwD9BuU,EAAAkE,SAAA,SAAArF,EAAA7Q,EAAA/H,GAEA,GADAA,EAAA4F,GAAwBmX,SAAAhD,EAAAtS,UAA4BzH,OACpDiK,EAAA2O,IAAAsB,EAAAtB,GAAA,CACA,IAAAwB,EAAAxB,GACA,QAEAA,GAAAmB,EAAAtS,SAAAzI,KAGA,GAAAka,GAAAP,EAAAC,EAAA5Y,EAAA+c,SACA,OAAAnR,GAAAsN,KACAtN,EAAAmO,EAAAtS,SAAAwW,SAAA/E,EAAAla,UACA+I,GAAAC,EAAAkR,EAAAnR,OAAA4B,SAAA5B,GAAA+R,EAAArT,EAAAsB,KAF8BvC,GAiC9BuU,EAAA3W,KAAA,SAAAwV,EAAA7Q,EAAA/H,GACAA,EAAA4F,GACAsY,OAAA,EACAzY,SAAA,EACAyQ,UAAA,EACA6G,SAAAhD,EAAAtS,UACOzH,MAEP,IAAAkZ,GAAAP,EAAAC,EAAA5Y,EAAA+c,SAEA,KAAAnR,EAAAsN,GAAA,WACAlZ,GAAAyF,UAAAsC,EAAAT,EAAAwS,EAAA/R,MAA4EgS,EAAAtS,SAAAyR,GAE5E,IAAAiF,GAAAjF,GAAAlZ,EAAAke,MAAAhF,EAAAc,UAAAd,CAEA,OAAAiF,MAAApR,MAAAvH,GAAA,OAAA2Y,EAAApR,IAGA+N,EAAA1X,KAAA+a,EAAApR,IAAA3E,EAAA8Q,EAAAnR,OAAAmM,SAAAzL,OAAA,KAAAV,QACAmO,SAAAlW,EAAAkW,WAHA,MAoBA6D,EAAA5P,IAAA,SAAAyO,EAAAwF,GACA,OAAA3Z,UAAAlF,OAAA,MAAAwJ,GAAAtC,EAAA0S,GAAA,SAAAna,GAAiF,MAAAma,GAAAna,GAAA4L,MACjF,IAAAsO,GAAAP,EAAAC,EAAAwF,GAAArE,EAAAtS,SACA,OAAAyR,MAAAtO,KAAAsO,EAAAtO,KAAA,MAyDAmP,EAGA,QAAA2D,GAAAjK,EAAA+H,EAAAtU,EAAA8V,EAAArS,EAAA3K,GAEA,QAAAqe,GAAAC,EAAAtB,EAAAxB,GAEA,QAAA+C,GAAArY,GACA,gBAAAoY,EAAAvW,OAAA7B,GAAAwH,SAEA,GAAA8Q,GAAAF,EAAAvW,OAAAmM,SAAA7O,OAAAkZ,GACAE,EAAAlW,EAAA/D,UAAwC8Z,EAAAvW,QAAAU,OAAA+V,IACxCE,EAAA,GAAA9Q,GAAAsB,SAAAuP,EACA,OAAAC,GAAAlK,SAAAwI,EAAAxB,GASA,IAAAxb,EAAA6c,QAAApJ,IAAAvM,IACAyD,IAAAzD,EAAAyD,QAAA8I,EAAA7I,KAAA+T,kBAAA,GAAAN,EAAAnX,EAAA8V,EAAAxB,IACA,SA95CA,GAAAoB,GAAuB7C,EAAvBZ,KAAuBG,KAAoBO,EAAA,WAG3CF,GAKAjU,OAAA,SAAAwT,GACA,GAAAtN,EAAAsN,EAAAxT,SAAAwT,EAAAxT,OAAA,MAAAiT,GAAAO,EAAAxT,OAGA,IAAAkZ,GAAA,gBAAAxP,KAAA8J,EAAAla,KACA,OAAA4f,GAAAjG,EAAAiG,EAAA,IAAAhC,GAIAxP,KAAA,SAAA8L,GAIA,MAHAA,GAAAxT,QAAAwT,EAAAxT,OAAA0H,OACA8L,EAAA9L,KAAA8L,EAAAtO,KAAAwC,KAAA3H,EAAAyT,EAAAxT,OAAA0H,KAAA8L,EAAA9L,OAEA8L,EAAA9L,MAIAL,IAAA,SAAAmM,GACA,GAAAnM,GAAAmM,EAAAnM,IAAAlO,GAAqCkJ,OAAAmR,EAAAnR,WAErC,IAAAkC,EAAA8C,GACA,WAAAA,EAAA8R,OAAA,GAAAzJ,EAAA9C,QAAAvF,EAAA0B,UAAA,GAAA5P,IACAqa,EAAAxT,OAAAsU,WAAA4C,GAAA7P,IAAAtE,OAAAsE,EAAAlO,EAGA,KAAAkO,GAAAqI,EAAA7C,UAAAxF,GAAA,MAAAA,EACA,UAAAvL,OAAA,gBAAAuL,EAAA,eAAAmM,EAAA,MAIAc,UAAA,SAAAd,GACA,MAAAA,GAAAnM,IAAAmM,IAAAxT,OAAAwT,EAAAxT,OAAAsU,UAAA,MAIAyD,UAAA,SAAAvE,GACA,GAAAnR,GAAAmR,EAAAnM,KAAAmM,EAAAnM,IAAAhF,QAAA,GAAA6F,GAAAsB,QAIA,OAHAlJ,GAAAkT,EAAAnR,WAAgC,SAAAlJ,EAAAhC,GAChCkL,EAAAlL,KAAAkL,EAAAlL,GAAA,GAAA+Q,GAAAC,MAAAhR,EAAA,KAAAgC,EAAA,aAEAkJ,GAIAA,OAAA,SAAAmR,GACA,GAAAuE,GAAAlV,EAAA2Q,EAAAuE,UAAAvE,EAAAuE,UAAAvJ,SACA,OAAAgF,GAAAxT,QAAAwT,EAAAxT,OAAAqC,OAAAnC,EAAAsT,EAAAxT,OAAAqC,OAAAkH,QAAAwO,GAAA,GAAA7P,GAAAsB,UAQA2M,MAAA,SAAA3C,GACA,GAAA2C,KAMA,OAJA7V,GAAA4F,EAAAsN,EAAA2C,OAAA3C,EAAA2C,OAAsDiD,GAAA5F,GAAY,SAAA4C,EAAA9c,GAClEA,EAAA6C,QAAA,SAAA7C,GAAA,IAAAka,EAAAxT,OAAA1G,MACA6c,EAAA7c,GAAA8c,IAEAD,GAIAtV,KAAA,SAAA2S,GACA,MAAAA,GAAAxT,OAAAwT,EAAAxT,OAAAa,KAAAkC,OAAAyQ,OAIA+E,SAAA,SAAA/E,GACA,GAAA+E,GAAA/E,EAAAxT,OAAAE,KAA6CsT,EAAAxT,OAAAuY,YAE7C,OADAA,GAAA/E,EAAAla,OAAA,EACAif,GAGArE,cAyIAgD,GAAAnD,GACAza,KAAA,GACA+N,IAAA,IACA8O,MAAA,KACAkD,YAAA,IAEAnC,EAAA5C,UAAA,KA8FA1a,KAAAob,YA+UApb,KAAA4Z,QAiCA5Z,KAAAqT,OACAA,EAAA2F,SAAA,+GAuvBA,QAAA0G,KAcA,QAAArM,GAAAkD,EAAAoJ,GACA,OAYAhD,KAAA,SAAAjd,EAAAgB,GACA,GAAAZ,GAAA8f,GACA1S,SAAA,KAAA1N,WAAA,KAAAgd,KAAA,KAAAnR,OAAA,KAAAwR,QAAA,EAAAgD,OAAA,EAAApX,UAOA,OALA/H,GAAA4F,EAAAsZ,EAAAlf,GAEAA,EAAA8b,OACA1c,EAAA6f,EAAA1S,WAAAvM,EAAA8b,KAAA9b,EAAA+H,OAAA/H,EAAA2K,SAEAvL,IAlCAE,KAAAqT,OAWAA,EAAA2F,SAAA,iCAsCA,QAAA8G,KAEA,GAAAC,IAAA,CAWA/f,MAAA+f,gBAAA,WACAA,GAAA,GAiBA/f,KAAAqT,MAAA,oCAAA2M,EAAAC,GACA,MAAAF,GACAC,EAGA,SAAAE,GACA,MAAAD,GAAA,WACAC,EAAA,GAAAC,kBACO,SA8HP,QAAAC,GAAA3F,EAAA7Q,EAAAyW,EAAAC,GAEA,QAAAC,KACA,MAAA3W,GAAA,aAAA4W,GACA,MAAA5W,GAAA6W,IAAAD,GAAA5W,EAAAiB,IAAA2V,GAAA,MACK,SAAAA,GACL,IACA,MAAA5W,GAAAiB,IAAA2V,GACO,MAAAhU,GACP,cAWA,QAAAkU,GAAAC,EAAAC,GAQA,QAAAC,GAAAC,GACA,WAAAC,GAAAC,GAAA,IAAAC,EAAAhJ,QAAA6I,GACA,IAAAC,GAAAC,GAAA,IAAAC,EAAAhJ,YACAiJ,EAVA,GAAAC,IACAC,MAAA,SAAAN,EAAAO,EAAAC,GAA6CD,EAAAE,MAAAT,GAAuBQ,KACpEE,MAAA,SAAAV,EAAAQ,GAAqCR,EAAA7d,SAAkBqe,KAGvD,IAAAX,EAAAc,YAAA,MAAAN,EASA,IAAAF,EACA,OACAG,MAAA,SAAAN,EAAAO,EAAAC,GACAT,EAAAC,GAEWxhB,EAAAoiB,QAAAC,MAAA,EACXV,EAAAG,MAAAN,EAAA,KAAAO,GAAAlW,KAAAmW,GAEAL,EAAAG,MAAAN,EAAA,KAAAO,EAAAC,GAJAH,EAAAC,MAAAN,EAAAO,EAAAC,IAOAE,MAAA,SAAAV,EAAAQ,GACAT,EAAAC,GAEWxhB,EAAAoiB,QAAAC,MAAA,EACXV,EAAAO,MAAAV,GAAA3V,KAAAmW,GAEAL,EAAAO,MAAAV,EAAAQ,GAJAH,EAAAK,MAAAV,EAAAQ,IAWA,IAAAJ,EAAA,CACA,GAAAU,GAAAV,KAAAN,EAAAD,EAEA,QACAS,MAAA,SAAAN,EAAAO,EAAAC,GAA8CM,EAAAR,MAAAN,EAAA,KAAAO,GAAqCC,KACnFE,MAAA,SAAAV,EAAAQ,GAAsCM,EAAAJ,MAAAV,GAAwBQ,MAI9D,MAAAH,GAtDA,GAAAX,GAAAD,IACAW,EAAAV,EAAA,aACAS,EAAAT,EAAA,YAuDAqB,GACAC,SAAA,MACAC,UAAA,EACAC,SAAA,IACAC,WAAA,UACAjP,QAAA,SAAAkP,EAAAC,EAAAC,GACA,gBAAAxB,EAAAV,EAAAS,GAYA,QAAA0B,KAQA,QAAAC,KACAC,GACAA,EAAAtf,SAGAuf,GACAA,EAAAC,WAbA,GAAAF,GAAAG,EACAF,EAAAG,CAEAH,KACAA,EAAAI,kBAAA,GAaAC,GACAC,EAAAtB,MAAAqB,EAAA,WACAP,IACAI,EAAA,OAGAA,EAAAG,IAEAP,IACAI,EAAA,MAGAG,EAAA,KACAF,EAAA,KAGA,QAAAI,GAAAC,GACA,GAAAC,GACAvjB,EAAAwjB,EAAAtC,EAAAD,EAAAT,EAAAI,GACA6C,EAAAzjB,GAAA+a,EAAAtS,UAAAsS,EAAAtS,SAAAkD,OAAA3L,EAEA,KAAAsjB,GAAAG,IAAAC,KAAAxC,EAAAgC,iBAAA,CACAK,EAAArC,EAAAyC,OACAD,EAAA3I,EAAAtS,SAAAkD,OAAA3L,GAcAujB,EAAAK,MAAA,sBAAA5jB,EAEA,IAAA6jB,GAAAnB,EAAAa,EAAA,SAAAM,GACAT,EAAA1B,MAAAmC,EAAArD,EAAA,WACAyC,GACAA,EAAAW,MAAA,+BAGAhkB,EAAAgN,UAAAkX,QAAA5C,EAAA6C,MAAAD,KACAnD,EAAAkD,KAGAlB,KAGAQ,GAAAU,EACAZ,EAAAM,EAYAN,EAAAW,MAAA,qBAAA5jB,GACAijB,EAAAc,MAAAC,IA/FA,GAAAhB,GAAAG,EAAAF,EAAAS,EACAM,EAAA/C,EAAAgD,QAAA,GACAH,EAAA7C,EAAAiD,WACAd,EAAApC,EAAAC,EAAAC,EAEAA,GAAApJ,IAAA,iCACAuL,GAAA,KAGAA,GAAA,KA4FA,OAAAlB,GAIA,QAAAgC,GAAAC,EAAAC,EAAAtJ,EAAA6F,GACA,OACAwB,SAAA,MACAE,cACAhP,QAAA,SAAAkP,GACA,GAAA8B,GAAA9B,EAAA+B,MACA,iBAAArD,EAAAV,EAAAS,GACA,GAAAhH,GAAAc,EAAAtS,SACAzI,EAAAwjB,EAAAtC,EAAAD,EAAAT,EAAAI,GACAjV,EAAAsO,KAAAtO,OAAA3L,EAEA,IAAA2L,EAAA,CAIA6U,EAAApS,KAAA,WAAkCpO,OAAAka,MAAAvO,EAAA4R,UAClCiD,EAAA+D,KAAA5Y,EAAAqR,UAAArR,EAAAqR,UAAAsH,EAEA,IAAAE,GAAAJ,EAAA5D,EAAAiE,WAEA,IAAA9Y,EAAA2R,aAAA,CACA3R,EAAA+Y,OAAAxD,EACAvV,EAAA6U,UACA,IAAA1gB,GAAAukB,EAAA1Y,EAAA2R,aAAA3R,EACAA,GAAA6R,iBACA0D,EAAAvV,EAAA6R,gBAAA1d,GAEA0gB,EAAApS,KAAA,0BAAAtO,GACA0gB,EAAAmE,WAAAvW,KAAA,0BAAAtO,GAGA0kB,EAAAtD,OAUA,QAAAsC,GAAAtC,EAAAD,EAAAG,EAAAR,GACA,GAAA5gB,GAAA4gB,EAAAK,EAAA2D,QAAA3D,EAAAjhB,MAAA,IAAAkhB,GACArY,EAAAuY,EAAAyD,cAAA,UACA,OAAA7kB,GAAA6C,QAAA,QAAA7C,IAAA,KAAA6I,IAAAqR,MAAAla,KAAA,IAMA,QAAA8kB,GAAAC,EAAA9K,GACA,GAAyC+K,GAAzCC,EAAAF,EAAAvS,MAAA,oBAGA,IAFAyS,IAAAF,EAAA9K,EAAA,IAAAgL,EAAA,QACAD,EAAAD,EAAA5V,QAAA,WAAAqD,MAAA,6BACAwS,GAAA,IAAAA,EAAAzkB,OAAA,SAAAiC,OAAA,sBAAAuiB,EAAA,IACA,QAAU7K,MAAA8K,EAAA,GAAAE,UAAAF,EAAA,UAGV,QAAAG,GAAAC,GACA,GAAAC,GAAAD,EAAA1e,SAAAme,cAAA,UAEA,IAAAQ,KAAAnL,OAAAmL,EAAAnL,MAAAla,KACA,MAAAqlB,GAAAnL,MAIA,QAAAoL,GAAAF,GAEA,GAAAG,GAAA,+BAAA5d,OAAAd,UAAA1G,SAAApC,KAAAqnB,EAAAI,KAAA,SACAC,EAAA,SAAAL,EAAA,GAAAM,QAEA,QACAC,KAAAF,EAAA,SAAAF,EAAA,oBACAK,SAAA,MAAAR,EAAAI,KAAA,WAAAK,cACAC,WAAAL,GAIA,QAAAM,GAAAX,EAAArK,EAAAwF,EAAArd,EAAA+W,GACA,gBAAAnN,GACA,GAAAkZ,GAAAlZ,EAAAmZ,OAAAnZ,EAAAkZ,OAAArE,EAAA1H,GAEA,MAAA+L,EAAA,GAAAlZ,EAAAoZ,SAAApZ,EAAAqZ,SAAArZ,EAAAsZ,UAAAhB,EAAAO,KAAA,YAEA,GAAArJ,GAAAiE,EAAA,WACAxF,EAAA+C,GAAA6D,EAAAzH,MAAAyH,EAAA5Y,OAAA4Y,EAAA3gB,UAEA8L,GAAAuZ,gBAGA,IAAAC,GAAApjB,EAAA0iB,WAAAjE,EAAAvd,KAAA,GAEA0I,GAAAuZ,eAAA,WACAC,KAAA,GAAA/F,EAAAgG,OAAAjK,MAMA,QAAAkK,GAAApB,EAAArK,GACA,OAAUgD,SAAAoH,EAAAC,IAAArK,EAAAtS,SAAAhC,SAAA,GAkEV,QAAAggB,GAAA1L,EAAAwF,GACA,OACA6B,SAAA,IACAsE,SAAA,qCACAlC,KAAA,SAAAtD,EAAAE,EAAAH,EAAA0F,GACA,GAAA5B,GAAAD,EAAA7D,EAAA2F,OAAA7L,EAAAd,QAAAja,MACA0R,GAAoBwI,MAAA6K,EAAA7K,MAAA9V,KAAA,KAAA2E,OAAA,MACpB7F,EAAAoiB,EAAAlE,GACAyF,EAAAF,EAAA,IAAAA,EAAA,EAEAjV,GAAA1Q,QAAA4F,EAAA4f,EAAApF,EAAArG,GAAAkG,EAAA6F,WAAA5F,EAAA6C,MAAA9C,EAAA6F,eAEA,IAAAxjB,GAAA,SAAAuE,GACAA,IAAA6J,EAAA3I,OAAAnJ,EAAA4J,KAAA3B,IACA6J,EAAAtN,KAAA2W,EAAA3W,KAAA2gB,EAAA7K,MAAAxI,EAAA3I,OAAA2I,EAAA1Q,SAEA6lB,KAAAE,eAAAhC,EAAA7K,MAAAxI,EAAA3I,QACA,OAAA2I,EAAAtN,MAAA6c,EAAA+F,KAAA9jB,EAAAyiB,KAAAjU,EAAAtN,MAGA2gB,GAAAG,YACAhE,EAAA+F,OAAAlC,EAAAG,UAAA,SAAArd,GAAmDA,IAAA6J,EAAA3I,QAAAzF,EAAAuE,KAAuC,GAC1F6J,EAAA3I,OAAAnJ,EAAA4J,KAAA0X,EAAA6C,MAAAgB,EAAAG,aAEA5hB,IAEAJ,EAAA4iB,WACA1E,EAAAvd,KAAA,QAAAkiB,EAAA3E,EAAArG,EAAAwF,EAAArd,EAAA,WAAmF,MAAAwO,QAsBnF,QAAAwV,GAAAnM,EAAAwF,GACA,OACA6B,SAAA,IACAsE,SAAA,qCACAlC,KAAA,SAAAtD,EAAAE,EAAAH,EAAA0F,GAOA,QAAAQ,GAAAC,GACA1V,EAAAwI,MAAAkN,EAAA,GAA6B1V,EAAA3I,OAAAqe,EAAA,GAAuB1V,EAAA1Q,QAAAomB,EAAA,GACpD1V,EAAAtN,KAAA2W,EAAA3W,KAAAsN,EAAAwI,MAAAxI,EAAA3I,OAAA2I,EAAA1Q,SAEA6lB,KAAAE,eAAArV,EAAAwI,MAAAxI,EAAA3I,QACA2I,EAAAtN,MAAA6c,EAAA+F,KAAA9jB,EAAAyiB,KAAAjU,EAAAtN,MAXA,GAAAlB,GAAAoiB,EAAAlE,GACAyF,EAAAF,EAAA,IAAAA,EAAA,GACAS,GAAAnG,EAAAoG,QAAApG,EAAAqG,eAAA,KAAArG,EAAAsG,aAAA,MACAC,EAAA,IAAAJ,EAAArd,IAAA,SAAAlC,GAAkD,MAAAA,IAAA,SAAwBnH,KAAA,UAC1EgR,GAAoBwI,MAAA,KAAAnR,OAAA,KAAA/H,QAAA,KAAAoD,KAAA,KAUpB8c,GAAA+F,OAAAO,EAAAL,GAAA,GACAA,EAAAjG,EAAA6C,MAAAyD,IAEAtkB,EAAA4iB,WACA1E,EAAAvd,KAAA,QAAAkiB,EAAA3E,EAAArG,EAAAwF,EAAArd,EAAA,WAAmF,MAAAwO,QAmGnF,QAAA+V,GAAA1M,EAAAD,EAAA8F,GACA,OACAwB,SAAA,IACAtiB,YAAA,iDAAA4kB,EAAAlE,EAAAkH,EAAAnH,GAqCA,QAAAoH,GAAAjO,EAAAkO,EAAAC,GACA,GAAA3N,GAAAa,EAAA5P,IAAAuO,EAAAyL,EAAA3E,IACAsH,EAAAC,EAAArO,EAAAkO,EAEAzN,GAAA1Z,MACAyZ,UAA2Bla,KAAA0Z,GAC3B3Q,OAAA6e,EACAzJ,KAAA2J,IAGAE,EAAAF,GAAAD,EAQA,QAAAE,GAAA7N,EAAAnR,GACA,IAAAkC,EAAAiP,GACA,SAAA1X,OAAA,2BAEA,OAAAgJ,GAAAzC,GACAmR,EAAAlH,EAAAjK,IAEAA,EAAA2b,EAAAX,MAAAhb,GACAyC,EAAAzC,GACAmR,EAAAlH,EAAAjK,GAEAmR,GAIA,QAAA5W,KACA,OAAAjD,GAAA,EAAuBA,EAAA8Z,EAAA5Z,OAAmBF,IAC1C4nB,EAAA9N,EAAA9Z,GAAA6Z,MAAAC,EAAA9Z,GAAA0I,QACAmf,EAAA1H,EAAAwH,EAAA7N,EAAA9Z,GAAA8d,OAEAgK,EAAA3H,EAAAwH,EAAA7N,EAAA9Z,GAAA8d,OAGAiK,EAAAjO,EAAA9Z,GAAA6Z,MAAAC,EAAA9Z,GAAA0I,QACAmf,EAAA1H,EAAA6H,GAEAF,EAAA3H,EAAA6H,GAKA,QAAAH,GAAA9C,EAAAkD,GAAwC/H,EAAA,WAAuB6E,EAAA8C,SAAAI,KAC/D,QAAAH,GAAA/C,EAAAkD,GAA2ClD,EAAA+C,YAAAG,GAC3C,QAAAL,GAAA/N,EAAAnR,GAAwC,MAAAgS,GAAAkE,SAAA/E,EAAAla,KAAA+I,GACxC,QAAAqf,GAAAlO,EAAAnR,GAA0C,MAAAgS,GAAA/I,GAAAkI,EAAAla,KAAA+I,GAxF1C,GAAyCsf,GAAA1B,EAAzCxM,KAAA6N,IAKAK,GAAAzH,EAAA8G,EAAAa,gBAAA,OAAA7D,EAEA,KACAiC,EAAAjC,EAAAX,MAAA2D,EAAAf,cACO,MAAA7Z,IAIP6Z,KAAA/F,EAAA8G,EAAAf,cAAA,OAAAjC,GACAlZ,EAAAmb,IACA3f,EAAA2f,EAAA,SAAA/M,EAAAiO,GACA,GAAA5c,EAAA2O,GAAA,CACA,GAAAmL,GAAAD,EAAAlL,EAAAmB,EAAAd,QAAAja,KACA2nB,GAAA5C,EAAA7K,MAAAwK,EAAAX,MAAAgB,EAAAG,WAAA2C,MAMAvnB,KAAAymB,eAAA,SAAAyB,EAAAhgB,GAGAgD,EAAAmb,IAAAxM,EAAA5Z,OAAA,IAGAonB,EAAAa,EAAAhgB,EAAAme,GACArjB,MAGAohB,EAAA5M,IAAA,sBAAAxU,GAwDAA,OAqBA,QAAAmlB,GAAA1N,GACA,GAAA2N,GAAA,SAAAxO,EAAAnR,GACA,MAAAgS,GAAA/I,GAAAkI,EAAAnR,GAGA,OADA2f,GAAAC,WAAA,EACAD,EAaA,QAAAE,GAAA7N,GACA,GAAA8N,GAAA,SAAA3O,EAAAnR,EAAA/H,GACA,MAAA+Z,GAAAkE,SAAA/E,EAAAnR,EAAA/H,GAGA,OADA6nB,GAAAF,WAAA,EACAE,EAn6IA,GAAAjc,GAAAhN,EAAAgN,UACAkB,EAAAlO,EAAAkO,WACA7C,EAAArL,EAAAqL,SACAO,EAAA5L,EAAA4L,SACA1B,EAAAlK,EAAAkK,QACA9C,EAAApH,EAAAoH,QACAJ,EAAAhH,EAAAgH,OACA4C,EAAA5J,EAAA4J,KACAwJ,EAAApT,EAAAoT,MAkNApT,GAAAhC,OAAA,yBAcAgC,EAAAhC,OAAA,uCAgBAgC,EAAAhC,OAAA,yDAsCAgC,EAAAhC,OAAA,iCAEAgC,EAAAhC,OAAA,kCAYAoM,EAAAsP,SAAA,kBAgPA1Z,EAAAhC,OAAA,kBAAAkjB,QAAA,WAAA9W,GAcAoD,EAAAkM,SAAA,sCAkGA1Z,EAAAhC,OAAA,kBAAAkjB,QAAA,mBAAA1T,EAEA,IAAAwB,EAsMAN,GAAAzH,UAAA4C,OAAA,SAAA8E,EAAA1O,GAIA,GAAAipB,IACAlZ,gBAAAhB,EAAAgB,kBACAc,OAAA9B,EAAAyE,aACArE,OAAAJ,EAAA+C,sBAEA,WAAArD,GAAAhO,KAAAmQ,WAAAlC,EAAAjO,KAAAkQ,aAAA5J,EAAAkiB,EAAAjpB,GAAAS,OAGAgO,EAAAzH,UAAA1G,SAAA,WACA,MAAAG,MAAA6P,QA2BA7B,EAAAzH,UAAAuJ,KAAA,SAAA7I,EAAAwhB,GAWA,QAAAC,GAAAja,GACA,QAAAka,GAAAC,GAAiC,MAAAA,GAAAnP,MAAA,IAAA1E,UAAA3U,KAAA,IACjC,QAAAyoB,GAAAD,GAAiC,MAAAA,GAAA/Z,QAAA,YAEjC,GAAA4K,GAAAkP,EAAAla,GAAAgL,MAAA,WACAqP,EAAArf,EAAAgQ,EAAAkP,EACA,OAAAlf,GAAAqf,EAAAD,GAAA9T,UAhBA,GAAArX,GAAAsC,KAAAgP,OAAAc,KAAA7I,EACA,KAAAvJ,EAAA,WACA+qB,QAEA,IAEe1oB,GAAAe,EAAAioB,EAFf1a,EAAArO,KAAAgpB,aAAAC,EAAA5a,EAAApO,OACAipB,EAAAlpB,KAAA0P,SAAAzP,OAAA,EACA8I,IAEA,IAAAmgB,IAAAxrB,EAAAuC,OAAA,WAAAiC,OAAA,sCAAAlC,KAAA6P,OAAA,IAWA,IAAA9E,GAAAoe,CACA,KAAAppB,EAAA,EAAaA,EAAAmpB,EAAWnpB,IAAA,CAKxB,IAJAgpB,EAAA1a,EAAAtO,GACAgL,EAAA/K,KAAAyI,OAAAsgB,GACAI,EAAAzrB,EAAAqC,EAAA,GAEAe,EAAA,EAAeA,EAAAiK,EAAA8D,QAAA5O,OAA0Ba,IACzCiK,EAAA8D,QAAA/N,GAAA8G,OAAAuhB,MAAApe,EAAA8D,QAAA/N,GAAAqT,GAEAgV,IAAApe,EAAAvD,SAAA,IAAA2hB,EAAAT,EAAAS,IACA7c,EAAA6c,OAAApe,EAAAnI,KAAA6O,OAAA0X,IACApgB,EAAAggB,GAAAhe,EAAApE,MAAAwiB,GAEA,KAAYppB,EAAAkpB,EAAYlpB,IAAA,CAKxB,IAJAgpB,EAAA1a,EAAAtO,GACAgJ,EAAAggB,GAAA/oB,KAAAyI,OAAAsgB,GAAApiB,MAAA8hB,EAAAM,IACAhe,EAAA/K,KAAAyI,OAAAsgB,GACAI,EAAAV,EAAAM,GACAjoB,EAAA,EAAeA,EAAAiK,EAAA8D,QAAA5O,OAA0Ba,IACzCiK,EAAA8D,QAAA/N,GAAA8G,OAAAuhB,MAAApe,EAAA8D,QAAA/N,GAAAqT,GAEA7H,GAAA6c,OAAApe,EAAAnI,KAAA6O,OAAA0X,IACApgB,EAAAggB,GAAAhe,EAAApE,MAAAwiB,GAGA,MAAApgB,IAcAiF,EAAAzH,UAAAyiB,WAAA,SAAAje,GACA,MAAAuB,GAAAvB,GACA/K,KAAAyI,OAAAsC,IAAA,KADA/K,KAAAsQ,cAgBAtC,EAAAzH,UAAAwR,UAAA,SAAAtP,GACA,MAAAzI,MAAAyI,OAAA+M,YAAA/M,IAsBAuF,EAAAzH,UAAAsR,OAAA,SAAA9O,GAOA,QAAAqgB,GAAAR,GACA,MAAAlkB,oBAAAkkB,GAAA/Z,QAAA,cAAAlR,GAA8D,aAAAA,EAAA0rB,WAAA,GAAAxpB,SAAA,IAAA0lB,gBAP9Dxc,OACA,IAAA2G,GAAA1P,KAAA0P,SAAAjH,EAAAzI,KAAAgpB,aAAAhU,EAAAhV,KAAAyI,MACA,KAAAzI,KAAA+X,UAAAhP,GAAA,WAEA,IAAAhJ,GAAAkQ,GAAA,EAAAiZ,EAAAxZ,EAAAzP,OAAA,EAAAgpB,EAAAxgB,EAAAxI,OAAAH,EAAA4P,EAAA,EAMA,KAAA3P,EAAA,EAAaA,EAAAkpB,EAAYlpB,IAAA,CACzB,GAAAupB,GAAAvpB,EAAAmpB,EACAxpB,EAAA+I,EAAA1I,GAAAgL,EAAAiK,EAAAtV,GAAAiH,EAAAoE,EAAApE,MAAAoC,EAAArJ,IACA6pB,EAAAxe,EAAAgF,YAAAhF,EAAAnI,KAAA2P,OAAAxH,EAAApE,WACA+H,IAAA6a,GAAAxe,EAAA2D,OACAiH,EAAA5K,EAAAnI,KAAA4O,OAAA7K,EAEA,IAAA2iB,EAAA,CACA,GAAAE,GAAA9Z,EAAA3P,EAAA,GACA0pB,EAAA1pB,EAAA,IAAAmpB,CAEA,IAAAxa,KAAA,EACA,MAAAiH,IAEA7V,GADA0J,EAAAmM,GACAlM,EAAAkM,EAAAyT,GAAAhpB,KAAA,KAEAsE,mBAAAiR,IAGA7V,GAAA0pB,MACO,IAAA9a,KAAA,GACP,GAAAyD,GAAArS,EAAAoS,MAAA,uBACApS,IAAA0pB,EAAAtX,MAAAC,GAAA,OACOxH,GAAA+D,KACP5O,GAAA4O,EAAA8a,EAGAC,IAAA1e,EAAA2D,UAAA,SAAA5O,EAAAsJ,YAAAtJ,IAAAsJ,MAAA,WACK,CACL,SAAAuM,GAAA4T,GAAA7a,KAAA,UAEA,IADAlF,EAAAmM,YACA,IAAAA,EAAA1V,OAAA,QACA0V,GAAAlM,EAAAkM,EAAAjR,oBAAAtE,KAAA,IAAAV,EAAA,KACAI,IAAAmQ,EAAA,UAAAvQ,EAAA,IAAAiW,GACA1F,GAAA,GAIA,MAAAnQ,IAoDAyQ,EAAAhK,UAAAmL,GAAA,SAAAnK,EAAAX,GACA,UAkBA2J,EAAAhK,UAAAiL,OAAA,SAAAjK,EAAAX,GACA,MAAAW,IAgBAgJ,EAAAhK,UAAAkL,OAAA,SAAAlK,EAAAX,GACA,MAAAW,IAeAgJ,EAAAhK,UAAAgM,OAAA,SAAA5J,EAAAC,GACA,MAAAD,IAAAC,GAGA2H,EAAAhK,UAAAmjB,YAAA,WACA,GAAAC,GAAA3pB,KAAAiO,QAAApO,UACA,OAAA8pB,GAAAC,OAAA,EAAAD,EAAA1pB,OAAA,IAGAsQ,EAAAhK,UAAA0H,QAAA,KAEAsC,EAAAhK,UAAA1G,SAAA,WAAsC,eAAUG,KAAAN,KAAA,KAGhD6Q,EAAAhK,UAAAiO,WAAA,SAAAjN,GACA,MAAAvH,MAAA0R,GAAAnK,KAAAvH,KAAAyR,OAAAlK,IAaAgJ,EAAAhK,UAAAkO,SAAA,SAAAoV,EAAA9a,GAIA,QAAA+a,GAAAlnB,EAAAinB,GACA,QAAAE,GAAAnnB,EAAAonB,GACA,kBACA,MAAApnB,GAAAonB,GAAA9kB,MAAAtC,EAAAuC,YAKA,QAAA8kB,GAAA1iB,GAA6B,MAAAiC,GAAAjC,KAAA+E,EAAA/E,UAE7B,QAAA2iB,GAAA3iB,GACA,OAAAA,EAAAtH,QACA,aAAAiG,EACA,uBAAA2jB,EAAAtiB,EAAA,GAAAA,CACA,eAAAA,IAGA,QAAA4iB,GAAA5iB,GAA0B,OAAAA,EAG1B,QAAA6iB,GAAA7gB,EAAA8gB,GACA,gBAAA9iB,GACA,GAAAiC,EAAAjC,IAAA,IAAAA,EAAAtH,OAAA,MAAAsH,EACAA,GAAA0iB,EAAA1iB,EACA,IAAAzH,GAAA2J,EAAAlC,EAAAgC,EACA,OAAA8gB,MAAA,EACA,IAAAtkB,EAAAjG,EAAAqqB,GAAAlqB,OACAiqB,EAAApqB,IAKA,QAAAwqB,GAAA/gB,GACA,gBAAAghB,EAAAC,GACA,GAAAlV,GAAA2U,EAAAM,GAAAhV,EAAA0U,EAAAO,EACA,IAAAlV,EAAArV,SAAAsV,EAAAtV,OAAA,QACA,QAAAF,GAAA,EAAuBA,EAAAuV,EAAArV,OAAiBF,IACxC,IAAAwJ,EAAA+L,EAAAvV,GAAAwV,EAAAxV,IAAA,QAEA,WAIAC,KAAAwR,OAAA4Y,EAAAL,EAAAnnB,EAAA,WACA5C,KAAAyR,OAAA2Y,EAAAL,EAAAnnB,EAAA,WACA5C,KAAA0R,GAAA0Y,EAAAL,EAAAnnB,EAAA,UACA5C,KAAAuS,OAAA+X,EAAAP,EAAAnnB,EAAA,WACA5C,KAAAiO,QAAArL,EAAAqL,QACAjO,KAAAwU,WAAA4V,EAAAL,EAAAnnB,EAAA,eACA5C,KAAAN,KAAAkD,EAAAlD,KACAM,KAAAyqB,WAAAZ,EArDA,IAAAA,EAAA,MAAA7pB,KACA,aAAA6pB,IAAA9a,EAAA,SAAA7M,OAAA,iDAuDA,WAAA4nB,GAAA9pB,KAAA6pB,IAwfAvqB,EAAAhC,OAAA,kBAAAyQ,SAAA,qBAAAyC,GACAlR,EAAAhC,OAAA,kBAAAotB,KAAA,8BAAA5U,OAkBAF,EAAAoD,SAAA,kDA8ZA1Z,EAAAhC,OAAA,oBAAAyQ,SAAA,aAAA6H,GAuBAqD,EAAAD,SAAA,mDAs6CA1Z,EAAAhC,OAAA,mBACAqtB,QAAA,0BAAwC,WACxC5c,SAAA,SAAAkL,GAGAyG,EAAA1G,WA2CA1Z,EAAAhC,OAAA,mBAAAyQ,SAAA,QAAA2R,GAqDApgB,EAAAhC,OAAA,mBAAAyQ,SAAA,gBAAA+R,EAEA,IAAAiB,GAAAzhB,EAAAoiB,QAAAkJ,MACA5J,EAAA1hB,EAAAoiB,QAAAC,KAqHAvB,GAAApH,SAAA,qDAuLA6K,EAAA7K,SAAA,kDAgDA1Z,EAAAhC,OAAA,mBAAAukB,UAAA,SAAAzB,GACA9gB,EAAAhC,OAAA,mBAAAukB,UAAA,SAAAgC,GAqHAsC,EAAAnN,SAAA,qBAiDA4N,EAAA5N,SAAA,qBA0HAmO,EAAAnO,SAAA,wCAoGA1Z,EAAAhC,OAAA,mBACAukB,UAAA,SAAAsE,GACAtE,UAAA,eAAAsF,GACAtF,UAAA,iBAAAsF,GACAtF,UAAA,UAAA+E;AAWAuB,EAAAnP,SAAA,UAkBAsP,EAAAtP,SAAA,UASA1Z,EAAAhC,OAAA,mBACAyI,OAAA,UAAAoiB,GACApiB,OAAA,kBAAAuiB,IACChjB,cAAAhG,ULiaKurB,IACA,SAASvtB,EAAQD,GM51JvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MNk2J3hBY,EAA4B,WM71J/B,QAAAA,GAAYpR,EAAcqR,EAASC,GAClC,UAD0D,IAAAC,GAAA/rB,IAAA8qB,GAAA9qB,KAAA4rB,GAGzD5rB,KAAK6rB,QAAUA,EAChB7rB,KAAKxC,QAAS,EAEbwC,KAAK6rB,QAAQG,KAAK,mBAElBF,EAAuBG,oBACrBC,QAAS1R,EAAa0R,UACrB/gB,KAAK,SAAC2C,GAEPqe,QAAQC,IAAI,oCAAqCte,GAEjDie,EAAKje,KAAOA,EACZie,EAAKvuB,QAAS,EAEduuB,EAAKM,eACJ,WAEDN,EAAKje,MACHwe,oBAEFH,QAAQC,IAAI,iCACZL,EAAKvuB,QAAS,EAEduuB,EAAKM,gBAqBT,MN+yJCT,GAA0B5S,SAAW,eAAgB,UAAW,0BM91JjEmS,EAAaS,IACXhlB,IAAK,cACLD,MAAO,WANP3G,KAAK6rB,QAAQU,KAAK,wBAWlB3lB,IAAK,MACLiE,IAAK,WAjBL,MAAO,gCAwDF+gB,IAGTvuB,cA7DqBuuB,GNg6JfY,IACA,SAASlvB,EAAQD,GOj6JvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MPu6J3hByB,EAAgC,WOtxJnC,QAAAA,GAAY9iB,EAAIsW,EAAU4L,EAASa,EAAOC,EAAgBC,EAAYC,EAAeC,EAAcC,EAAcC,EAAgBC,GAChI,UAD8InC,GAAA9qB,KAAAysB,GAG7IzsB,KAAK2J,GAAKA,EACX3J,KAAKigB,SAAWA,EAChBjgB,KAAK6rB,QAAUA,EACf7rB,KAAK0sB,MAAQA,EACb1sB,KAAK2sB,eAAiBA,EACtB3sB,KAAK4sB,WAAaA,EAClB5sB,KAAK6sB,cAAgBA,EACpB7sB,KAAK8sB,aAAeA,EACrB9sB,KAAK+sB,aAAeA,EACnB/sB,KAAKgtB,eAAiBA,EACvBhtB,KAAKitB,aAAeA,EAEpBjtB,KAAK4C,KAAO,iBAEP5C,KAAKktB,iBAAmBltB,KAAKktB,eAAe3vB,IAC5CyC,KAAK4sB,WAAWO,SAASntB,KAAK4C,KAAM5C,KAAKktB,eAAgBltB,KAAKotB,sBAAsB7pB,KAAKvD,MAAOA,KAAKqtB,qBAAqB9pB,KAAKvD,OA2BrI,MP0uJCysB,GAA8BzT,SAAW,KAAM,WAAY,UAAW,QAAS,iBAAkB,aAAc,gBAAiB,eAAgB,eAAgB,iBAAkB,gBOn6JnLmS,EAAasB,IACX7lB,IAAK,wBACLD,MAAO,WANH3G,KAAKstB,yBACPhuB,QAAQgH,OAAOtG,KAAKktB,eAAgBltB,KAAKstB,wBACzCttB,KAAKstB,wBAAyB,MAYhC1mB,IAAK,uBACLD,MAAO,WAPP3G,KAAKutB,wBACLvtB,KAAKktB,eAAeM,WAAY,EAE5BxtB,KAAKktB,iBAAmBltB,KAAKktB,eAAe3vB,IAC9CyC,KAAKytB,aAAaC,WAAW1tB,KAAKktB,mBAapCtmB,IAAK,gBACLD,MAAO,SAVMgnB,GAEb,MAAOA,IAAUA,EAAOjuB,QAaxBkH,IAAK,8BACLD,MAAO,SAXoBgnB,GAE3B3tB,KAAKktB,eAAiBS,EACtB3tB,KAAKktB,eAAeU,MAAQD,EAAOE,OAASF,EAAOG,aACnD9tB,KAAKktB,eAAea,IAAMJ,EAAOK,KAAOL,EAAOM,WAE1CjuB,KAAKktB,eAAegB,YACvBluB,KAAKktB,eAAeiB,KAAO,SAe7BvnB,IAAK,wBACLD,MAAO,SAZagnB,GAAO,GAAA5B,GAAA/rB,IACvBA,MAAKktB,gBAAkBltB,KAAKouB,cAAcT,KAC5C3tB,KAAKquB,4BAA4BV,GAE5B3tB,KAAKktB,eAAe3vB,GAgBvByC,KAAKsuB,uBAAuBnjB,KAAK,WAC/B4gB,EAAKY,eAAeJ,OACpBR,EAAKmB,eAAeM,WAAY,KAjBlCxtB,KAAK6rB,QAAQG,KAAK,0BAClBhsB,KAAKuuB,wBAAwBC,qBAAqBxuB,KAAKktB,gBACpD/hB,KAAK,SAACsjB,GAEL1C,EAAK0B,aAAaiB,aAAa3C,EAAKmB,eAAgBuB,GACpD1C,EAAKY,eAAeJ,OACpBR,EAAKF,QAAQU,KAAK,0BAClBR,EAAKW,MAAMV,KAAKD,EAAKiB,eAAe2B,UAAU,6BAC7C,SAACC,GACFzC,QAAQC,IAAI,gCAAiCwC,GAC7C7C,EAAKF,QAAQU,KAAK,0BAClBR,EAAKW,MAAMmC,UAAU9C,EAAKiB,eAAe2B,UAAU,wCAwB3D/nB,IAAK,uBACLD,MAAO,WAba,GAAAmoB,GAAA9uB,IAGpB,OADAA,MAAK6rB,QAAQG,KAAK,0BACXhsB,KAAK2J,GAAG,SAACiC,EAASI,GACvB8iB,EAAK5B,eAAelqB,SACjBmI,KAAK,SAACsjB,GACLK,EAAKpC,MAAMV,KAAK8C,EAAK9B,eAAe2B,UAAU,4BAC9C/iB,EAAQ6iB,IACV,WACAziB,IACA8iB,EAAKpC,MAAMmC,UAAUC,EAAK9B,eAAe2B,UAAU,qCAClDxjB,KAAK,WACN2jB,EAAKjD,QAAQU,KAAK,iCAkBtB3lB,IAAK,SACLD,MAAO,SAdDooB,GAEN/uB,KAAKstB,uBAA0BhuB,QAAQ4J,KAAKlJ,KAAKktB,gBACjDltB,KAAKytB,aAAauB,WAAWhvB,KAAKktB,gBAClCltB,KAAK4sB,WAAWO,SAASntB,KAAK4C,KAAM5C,KAAKktB,eAAgBltB,KAAKotB,sBAAsB7pB,KAAKvD,MAAOA,KAAKqtB,qBAAqB9pB,KAAKvD,OAC/H+uB,EAAOE,qBAiBProB,IAAK,qBACLD,MAAO,WAfa,GAAAuoB,GAAAlvB,IAEpBA,MAAK6sB,cAAL7sB,UAA0BA,KAAK+sB,aAAaoC,yBAAyBC,MAAOpvB,KAAK+sB,aAAaoC,yBAAyBE,SACpHlkB,KAAK,WAEJ+jB,mBAmBJtoB,IAAK,SACLD,MAAO,WAhBC,GAAA2oB,GAAAtvB,IAEHA,MAAK6rB,QAAQ0D,cAAc,2BAC9BvvB,KAAK6rB,QAAQG,KAAK,yBAGpB,IAAIzf,GAAUvM,KAAKktB,eAAejqB,QAClCsJ,GAAQpB,KAAK,WAEXmkB,EAAKrC,aAAauC,kCAAkCF,EAAKpC,eAAe3vB,IAExE+xB,EAAK7B,aAAagC,cAAcH,EAAKpC,gBACjCoC,EAAKG,eACPH,EAAKG,eAAevvB,KAAMovB,EAAKpC,iBAEjCoC,EAAK5C,MAAMV,KAAK,2BAChBsD,EAAKzD,QAAQU,KAAK,4BATpBhgB,SAWO,SAACqiB,GACNzC,QAAQC,IAAI,mBAAoBwC,GAChCU,EAAKzD,QAAQU,KAAK,0BAElB+C,EAAK5C,MAAMmC,UAAU,oCAoBvBjoB,IAAK,WACLD,MAAO,WAjBC,GAAA+oB,GAAA1vB,IAERA,MAAK6sB,cAAL7sB,UAA0BA,KAAK8sB,aAAa6C,6BAA8B3vB,KAAK8sB,aAAa8C,gCACzFzkB,KAAK,WACFukB,EAAK7D,QAAQG,KAAK,0BAElB0D,EAAKxC,eAAe2C,eACjB1kB,KAAK,SAAC2kB,GAEDA,EAAU7vB,OAAS,GACrByvB,EAAK7D,QAAQU,KAAK,0BAClBmD,EAAKK,sBAELL,eAED,WAEDA,EAAK7D,QAAQU,KAAK,0BAClBmD,EAAKhD,MAAMmC,UAAU,wCAqB/BjoB,IAAK,MACLiE,IAAK,WArKL,MAAO,oCAkMF4hB,IAGTpvB,cAvMqBovB,GP+mKfuD,IACA,SAAS1yB,EAAQD,GQhnKvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MRsnK3hBiF,EAAgC,WQhlKnC,QAAAA,GAAYtmB,EAAIumB,EAAcpE,GAC7B,UADqDhB,GAAA9qB,KAAAiwB,GAGrDjwB,KAAK2J,GAAKA,EACT3J,KAAKkwB,aAAeA,EACpBlwB,KAAK8rB,uBAAyBA,EAqBhC,MRujKCmE,GAA8BjX,SAAW,KAAM,eAAgB,0BQlnKhEmS,EAAa8E,IACXrpB,IAAK,2BACLD,MAAO,WANP,GAAIwpB,GAAanwB,KAAKssB,gBAAgBvmB,OAAO,SAAU7F,GAErD,MAAmBgG,UAAZhG,EAAK3C,KACX0C,MAEH,IAAIkwB,EAEF,WADAhE,SAAQC,IAAI,mDAId,IAAIgE,GAAO,GAAIC,SAAQC,YACrBpE,QAASlsB,KAAKkwB,aAAaK,aAAahzB,GACxCiwB,WAAW,GAGbxtB,MAAKssB,gBAAgBnsB,KAAKiwB,MAW1BxpB,IAAK,uBACLD,MAAO,SATa6pB,GAEpB,GAAIC,GAAWzwB,KAAK2J,GAAG8C,OAavB,OAXA+jB,GAAQE,SAAW,EAEnB1wB,KAAK8rB,uBAAuB6E,KAAKH,GAC5BrlB,KAAK,SAACilB,GAEPK,EAAS7kB,QAAQwkB,IAChB,SAACxB,GACFzC,QAAQC,IAAI,6BAA8BwC,GAC1C6B,EAASzkB,OAAO4iB,KAGb6B,EAASlkB,aAchB3F,IAAK,MACLiE,IAAK,WArDL,MAAO,oCAoEFolB,IAGT5yB,cAzEqB4yB,GRgsKfW,IACA,SAAStzB,EAAQD,GSjsKvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MTusK3hB6F,EAAkB,WSr8JrB,QAAAA,GAAYlnB,EAAIsW,EAAU4L,EAASa,EAAOC,EAAgBC,EAAYC,EAAeC,EAAcC,EAAcE,EAAc6D,EAAsB9D,EAAgB+D,GACpK,UAD2LjG,GAAA9qB,KAAA6wB,GAG1L7wB,KAAK2J,GAAKA,EACX3J,KAAKigB,SAAWA,EAChBjgB,KAAK6rB,QAAUA,EACf7rB,KAAK0sB,MAAQA,EACb1sB,KAAK2sB,eAAiBA,EACtB3sB,KAAK4sB,WAAaA,EAClB5sB,KAAK6sB,cAAgBA,EACpB7sB,KAAK8sB,aAAeA,EACrB9sB,KAAK+sB,aAAeA,EACnB/sB,KAAKitB,aAAeA,EACpBjtB,KAAK8wB,qBAAuBA,EAC5B9wB,KAAKgtB,eAAiBA,EACvBhtB,KAAK+wB,sBAAwBA,EAE7B/wB,KAAK4C,KAAO,QAEX5C,KAAKgxB,sBAEDhxB,KAAKixB,QAAUjxB,KAAKixB,MAAM1zB,IAC5ByC,KAAKkxB,iBAoCT,MT44JCL,GAAgB7X,SAAW,KAAM,WAAY,UAAW,QAAS,iBAAkB,aAAc,gBAAiB,eAAgB,eAAgB,eAAgB,uBAAwB,iBAAkB,yBSnsK7MmS,EAAa0F,IACXjqB,IAAK,wBACLD,MAAO,WANH3G,KAAKmxB,sBACAnxB,MAAKmxB,cAAcrB,UAC1BxwB,QAAQgH,OAAOtG,KAAKixB,MAAOjxB,KAAKmxB,eAChCnxB,KAAKmxB,eAAgB,MAYvBvqB,IAAK,iBACLD,MAAO,SATMooB,GACb,IAAI/uB,KAAKixB,MAAMG,WAAf,CAGA,GAAIrC,EAEF,IADA,GAAIjK,GAAKxlB,QAAQwhB,QAAQiO,EAAO1N,QACzByD,EAAG,IAAI,CAEZ,GADAA,EAAKxlB,QAAQwhB,QAAQgE,GACjBA,EAAGuM,SAAS,oBACd,MAEFvM,GAAKA,EAAG1e,SAGZpG,KAAKytB,aAAa6D,WAAWtxB,KAAKixB,OAClCjxB,KAAK2sB,eAAe4E,YAYpB3qB,IAAK,uBACLD,MAAO,WARP3G,KAAKutB,wBACLvtB,KAAKixB,MAAMzD,WAAY,EAEnBxtB,KAAKixB,QAAUjxB,KAAKixB,MAAM1zB,IAC5ByC,KAAKytB,aAAaC,WAAW1tB,KAAKixB,UAcpCrqB,IAAK,wBACLD,MAAO,SAXagnB,GAAO,GAAA5B,GAAA/rB,IAC3B,IAAIA,KAAKixB,OAAStD,GAAUA,EAAOjuB,KAAK,CAGtC,GAFAM,KAAKixB,MAAQtD,GAER3tB,KAAKixB,MAAMnB,UAAU7vB,OAGxB,MAFAD,MAAKixB,MAAMzD,WAAY,EACvBxtB,KAAK2sB,eAAeJ,OACbvsB,KAAKwxB,kBAGTxxB,MAAKixB,MAAM1zB,GAGdyC,KAAKyxB,cAActmB,KAAK,WACtB4gB,EAAKY,eAAeJ,OACpBR,EAAKkF,MAAMzD,WAAY,IAJzBxtB,KAAK0xB,kBAuBT9qB,IAAK,cACLD,MAAO,WAdM,GAAAmoB,GAAA9uB,KAETywB,EAAWzwB,KAAK2J,GAAG8C,OA2BvB,OAzBAzM,MAAK6rB,QAAQG,KAAK,gBAClBhsB,KAAK2xB,cAAcD,YAAY1xB,KAAKixB,OACjC9lB,KAAK,SAACvM,GAELkwB,EAAKmC,MAAMW,UAAW,EACtB9C,EAAKmC,MAAMzD,WAAY,EAEvBsB,EAAK7O,SAAS,WAEZ3gB,QAAQgH,OAAOwoB,EAAKmC,MAAOryB,GAE3BkwB,EAAKnC,eAAeJ,OACpBuC,EAAKjD,QAAQU,KAAK,gBAClBuC,EAAKpC,MAAMV,KAAK8C,EAAK9B,eAAe2B,UAAU,kBAE9C8B,EAAS7kB,QAAQkjB,EAAKmC,UAEvB,SAACrC,GACFzC,QAAQC,IAAI,sBAAuBwC,GACnCE,EAAKjD,QAAQU,KAAK,gBAClBuC,EAAKpC,MAAMmC,UAAUC,EAAK9B,eAAe2B,UAAU,uBAEnD8B,EAASzkB,OAAO4iB,KAGb6B,EAASlkB,WAiBhB3F,IAAK,cACLD,MAAO,WAfI,GAAAuoB,GAAAlvB,IAGX,OADAA,MAAK6rB,QAAQG,KAAK,gBACXhsB,KAAK2J,GAAG,SAACiC,EAASI,GACvBkjB,EAAKjC,aAAajqB,OAAOksB,EAAK+B,OAC3B9lB,KAAK,SAACvM,GACLswB,EAAKxC,MAAMV,KAAKkD,EAAKlC,eAAe2B,UAAU,kBAC9C/iB,EAAQhN,IACV,SAACgwB,GACD5iB,IACAkjB,EAAKxC,MAAMmC,UAAUK,EAAKlC,eAAe2B,UAAU,2BAClDxjB,KAAK,WACN+jB,EAAKrD,QAAQU,KAAK,uBAoBtB3lB,IAAK,mBACLD,MAAO,WAdF3G,KAAKixB,MAAMnB,UAAU7vB,SACnBD,KAAKixB,MAAMY,WACd7xB,KAAKytB,aAAa6D,WAAWtxB,KAAKixB,OAGpCjxB,KAAKixB,MAAMnB,UAAU3vB,KAAKH,KAAK8wB,qBAAqBgB,oBAAoB9xB,KAAKixB,MAAM1zB,SAoBrFqJ,IAAK,SACLD,MAAO,SAjBDooB,GAEN/uB,KAAKixB,MAAMc,WAEP/xB,KAAKixB,MAAMe,OACbhyB,KAAKixB,MAAMc,QAAQ5xB,MACjB6xB,MAAOhyB,KAAKixB,MAAMe,QAItBhyB,KAAKixB,MAAMY,WAAY,EACvB7xB,KAAKmxB,cAAiB7xB,QAAQ4J,KAAKlJ,KAAKixB,OACxCjxB,KAAKytB,aAAauB,WAAWhvB,KAAKixB,OAClCjxB,KAAKkxB,iBACLnC,EAAOE,qBAoBProB,IAAK,sCACLD,MAAO,WAhBP3G,KAAK6sB,cAAcb,KAAKhsB,KAAK+sB,aAAakF,sBAAsB7C,MAAOpvB,KAAK+sB,aAAakF,sBAAsB5C,UAC3G3vB,KAAMM,KAAKgtB,eAAe2B,UAAU,gBAsBxC/nB,IAAK,oCACLD,MAAO,WAjBP3G,KAAK6sB,cAAcb,KAAKhsB,KAAK+sB,aAAamF,kCAAkC9C,MAAOpvB,KAAK+sB,aAAamF,kCAAkC7C,UACnI3vB,KAAMM,KAAKgtB,eAAe2B,UAAU,gBAuBxC/nB,IAAK,sBACLD,MAAO,WApBc,GAAA2oB,GAAAtvB,IAEhBA,MAAK+wB,sBAAsBoB,uBAIhCnyB,KAAKytB,aAAauB,WAAWhvB,KAAKixB,OAElCjxB,KAAK4sB,WAAWwF,WAAW,wBACxBjnB,KAAK,SAACknB,GAIL,MAFA/C,GAAK2B,MAAMzD,WAAY,EAEnB6E,EAAeC,SACVhD,EAAKiD,sCAGTF,EAAeG,eAIhBlD,EAAK2B,MAAMwB,mBAAqBJ,EAAe90B,KACjD+xB,EAAK2B,MAAMwB,iBAAmBJ,EAAe90B,GAC7C+xB,EAAKmC,cACFtmB,KAAKmkB,EAAK0B,oBAAoBztB,KAAzB+rB,SAEVnD,SAAQC,IAAI,0BAA2BiG,IAR9B/C,EAAKoD,qCASb,WAEDpD,EAAK2B,MAAMzD,WAAY,EACvBrB,QAAQC,IAAI,kCAuBhBxlB,IAAK,uBACLD,MAAO,WAlBP3G,KAAKixB,MAAMwB,iBAAmB,KAC9BzyB,KAAKyxB,cACFtmB,KAAKnL,KAAKgxB,oBAAoBztB,KAAKvD,UAsBtC4G,IAAK,WACLD,MAAO,WApBC,GAAA+oB,GAAA1vB,IAERA,MAAK6sB,cAAL7sB,UAA0BA,KAAK8sB,aAAa6F,mBAAoB3yB,KAAK8sB,aAAa8F,sBAC/EznB,KAAK,WACFukB,EAAK7D,QAAQG,KAAK,gBAElB0D,EAAKuB,MAAM4B,QAAU,CAErB,IAAItmB,GAAUmjB,EAAKuB,MAAMjuB,QAEzBuJ,GAAQpB,KAAK,WAETukB,EAAKoD,kBACLpD,EAAKhD,MAAMV,KAAK,iBAChB0D,EAAK7D,QAAQU,KAAK,kBAJtBhgB,SAMO,SAACqiB,GACNc,EAAK7D,QAAQU,KAAK,gBAElBmD,EAAKhD,MAAMmC,UAAU,4BAwB7BjoB,IAAK,kBACLD,MAAO,WAlBP3G,KAAKytB,aAAagC,cAAczvB,KAAKixB,OACjCjxB,KAAKyvB,eACPzvB,KAAKyvB,eAAevvB,KAAKF,KAAKixB,WAwBhCrqB,IAAK,sBACLD,MAAO,WAjBP,GAFA3G,KAAK+yB,mBAED/yB,KAAKixB,OAASjxB,KAAKixB,MAAMwB,iBAAkB,CAE7C,GAAIJ,GAAiBryB,KAAK+wB,sBAAsBiC,SAAShzB,KAAKixB,MAAMwB,iBAEhEJ,IACFryB,KAAK+yB,gBAAgB5yB,KAAKkyB,OA0B9BzrB,IAAK,8BACLD,MAAO,WApBP,MAAI3G,MAAK+wB,sBAAsBoB,qBACtBnyB,KAAKgtB,eAAe2B,UAAU,4BAGhC3uB,KAAKgtB,eAAe2B,UAAU,0CAyBrC/nB,IAAK,iBACLD,MAAO,WArBP3G,KAAK4sB,WAAWO,SAASntB,KAAK4C,KAAM5C,KAAKixB,MAAOjxB,KAAKotB,sBAAsB7pB,KAAKvD,MAAOA,KAAKqtB,qBAAqB9pB,KAAKvD,OAClHizB,eAAgBjzB,KAAKixB,MAAMnB,UAAU7vB,OAAS,EAAID,KAAKgtB,eAAe2B,UAAU,gBAAkB,UA2BtG/nB,IAAK,6BACLD,MAAO,WAtBP,MAAO3G,MAAKixB,MAAMnB,UAAU/pB,OAAO,SAACmtB,GAClC,MAAOA,GAAS31B,KAAO21B,EAASC,aAC/BlzB,OAAS,OA2BZ2G,IAAK,MACLiE,IAAK,WA/RL,MAAO,sBAgUFgmB,IAGTxzB,cArUqBwzB,GT6gLfuC,IACA,SAAS91B,EAAQD,GU9gLvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MVohL3hBqI,EAAsB,WU3+KzB,QAAAA,GAAYnD,EAAcjD,EAActjB,GACvC,UAD2CmhB,GAAA9qB,KAAAqzB,GAG1CrzB,KAAKkwB,aAAeA,EACpBlwB,KAAKitB,aAAeA,EACpBjtB,KAAK2J,GAAKA,EAqBZ,MVk9KC0pB,GAAoBra,SAAW,eAAgB,eAAgB,MUhhLhEmS,EAAakI,IACXzsB,IAAK,kBACLD,MAAO,WANP,GAAIwpB,GAAanwB,KAAKszB,OAAOvtB,OAAO,SAAU7F,GAE5C,MAAmBgG,UAAZhG,EAAK3C,KACX0C,MAEH,IAAIkwB,EAEF,WADAhE,SAAQC,IAAI,yCAId,IAAI6E,GAAQ,GAAIZ,SAAQkD,OACtBrH,QAASlsB,KAAKkwB,aAAaK,aAAahzB,GACxCs1B,QAAS,EACTd,WACAjC,aACAtC,WAAW,GAGbxtB,MAAKszB,OAAOnzB,KAAK8wB,MAWjBrqB,IAAK,cACLD,MAAO,SATI6pB,GAEX,GAAIC,GAAWzwB,KAAK2J,GAAG8C,OAavB,OATAzM,MAAKitB,aAAa0D,KAAKH,GAClBrlB,KAAK,SAAC8lB,GAEPR,EAAS7kB,QAAQqlB,IAChB,SAACrC,GAEF6B,EAASzkB,OAAO4iB,KAGb6B,EAASlkB,aAchB3F,IAAK,MACLiE,IAAK,WAxDL,MAAO,0BAuEFwoB,IAGTh2B,cA5EqBg2B,GVimLfG,IACA,SAASl2B,EAAQD,EAASH,GWlmLhC,YAgBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAMA,IAAAoB,GAAApB,EAAA,KAGIqB,EAAcT,EAAuBQ,GAFzCI,EAAAxB,EAAA,KAMIyB,EAAcb,EAAuBY,EAKzCrB,cAPeiC,QAAQhC,OAAO,gBAG3BkC,WAAWjB,aAAWkB,IAHVlB,cAIZsjB,UAAU,YAJEljB,cAKZe,MX0mLG+zB,IACA,SAASn2B,EAAQD,GY5nLvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MZkoL3hB0I,EAA0B,WY78K7B,QAAAA,GAAY/pB,EAAIsW,EAAU4L,EAASa,EAAOC,EAAgBC,EAAY+G,EAAa9G,EAAeC,EAAcE,EAAgB4G,EAAwB7G,GACvJ,UADqKjC,GAAA9qB,KAAA0zB,GAGpK1zB,KAAK2J,GAAKA,EACX3J,KAAKigB,SAAWA,EAChBjgB,KAAK6rB,QAAUA,EACf7rB,KAAK0sB,MAAQA,EACb1sB,KAAK2sB,eAAiBA,EACtB3sB,KAAK4sB,WAAaA,EAClB5sB,KAAK6sB,cAAgBA,EACrB7sB,KAAK8sB,aAAeA,EACnB9sB,KAAKgtB,eAAiBA,EACtBhtB,KAAK4zB,uBAAyBA,EAC/B5zB,KAAK+sB,aAAeA,EAEpB/sB,KAAK4C,KAAO,gBAEP5C,KAAKkzB,WAAalzB,KAAKkzB,SAAS31B,IAClCyC,KAAK4sB,WAAWO,SAASntB,KAAK4C,KAAM5C,KAAKkzB,SAAUlzB,KAAKotB,sBAAsB7pB,KAAKvD,MAAOA,KAAKqtB,qBAAqB9pB,KAAKvD,OA4B7H,MZg6KC0zB,GAAwB1a,SAAW,KAAM,WAAY,UAAW,QAAS,iBAAkB,aAAc,cAAe,gBAAiB,eAAgB,iBAAkB,yBAA0B,gBY9nLtMmS,EAAauI,IACX9sB,IAAK,wBACLD,MAAO,WAPH3G,KAAK6zB,mBACPv0B,QAAQgH,OAAOtG,KAAKkzB,SAAUlzB,KAAK6zB,kBACnC7zB,KAAKkzB,SAASY,WAAa,KAC3B9zB,KAAKkzB,SAASa,SAAW,KACzB/zB,KAAK6zB,kBAAmB,MAY1BjtB,IAAK,uBACLD,MAAO,WARP3G,KAAKutB,wBACLvtB,KAAKkzB,SAAS1F,WAAY,EAEtBxtB,KAAKkzB,WAAalzB,KAAKkzB,SAAS31B,KAClCyC,KAAKytB,aAAaC,WAAW1tB,KAAKkzB,UAClClzB,KAAKg0B,sBAAsBC,qBAa7BrtB,IAAK,aACLD,MAAO,SAVGmL,GAEV,GAAIA,GAAOoiB,OAAOpiB,EAAKqiB,UAEvB,OAAOriB,GAAK+F,OAAO,8BAanBjR,IAAK,0BACLD,MAAO,SAXgBgnB,GAEvB,GAAI7b,GAAOoiB,OAAOvG,EAAOmG,WAAWK,WAChCC,EAAYF,OAAOvG,EAAO0G,WAAWF,UAOzC,OALAriB,GAAKwiB,MAAMF,EAAUE,SACrBxiB,EAAKyiB,QAAQH,EAAUG,WAEvB5G,EAAOmG,WAAahiB,EAAK0iB,SAElBx0B,KAAKy0B,WAAW9G,EAAOmG,eAc9BltB,IAAK,wBACLD,MAAO,SAZcgnB,GAErB3tB,KAAKkzB,SAAWvF,EAEhB3tB,KAAKkzB,SAASwB,UAAY10B,KAAK20B,wBAAwBhH,GAEnD3tB,KAAKkzB,SAAS0B,kBAChB50B,KAAKkzB,SAAS2B,QAAU70B,KAAKkzB,SAASwB,UAEtC10B,KAAKkzB,SAAS2B,QAAU70B,KAAKy0B,WAAW9G,EAAOoG,aAgBjDntB,IAAK,wBACLD,MAAO,SAbagnB,GAAO,GAAA5B,GAAA/rB,IACvBA,MAAKkzB,UAAYvF,GAAUA,EAAOmH,aAAenH,EAAOmH,YAAY70B,SACtED,KAAK+0B,sBAAsBpH,GAEtB3tB,KAAKkzB,SAAS31B,GAcjByC,KAAKg1B,iBAAiB7pB,KAAK,WACzB4gB,EAAKY,eAAeJ,OACpBR,EAAKmH,SAAS1F,WAAY,IAf5BxtB,KAAKg0B,sBAAsBiB,eAAej1B,KAAKkzB,UAC5C/nB,KAAK,SAAC+pB,GAELnJ,EAAK0B,aAAaiB,aAAa3C,EAAKmH,SAAUgC,GAC9CnJ,EAAKY,eAAeJ,OACpBR,EAAKF,QAAQU,KAAK,0BACjB,SAACqC,GACFzC,QAAQC,IAAI,yBAA0BwC,GACtC7C,EAAKF,QAAQU,KAAK,yBAClBR,EAAKW,MAAMmC,UAAU9C,EAAKiB,eAAe2B,UAAU,gCAyB3D/nB,IAAK,iBACLD,MAAO,WAdO,GAAAmoB,GAAA9uB,IAGd,OADAA,MAAK6rB,QAAQG,KAAK,yBACXhsB,KAAK2J,GAAG,SAACiC,EAASI,GACvB8iB,EAAKoE,SAASlwB,SACXmI,KAAK,SAAC+pB,GACLpG,EAAKpC,MAAMV,KAAK8C,EAAK9B,eAAe2B,UAAU,qBAE9CG,EAAKkF,sBAAsBmB,uBAAuBrG,EAAKoE,UACvDtnB,EAAQspB,IACR,SAACtG,GACD5iB,IACA8iB,EAAKpC,MAAMmC,UAAUC,EAAK9B,eAAe2B,UAAU,8BAClDxjB,KAAK,WACN2jB,EAAKjD,QAAQU,KAAK,gCAmBxB3lB,IAAK,SACLD,MAAO,SAfDooB,GAEN/uB,KAAK6zB,iBAAoBv0B,QAAQ4J,KAAKlJ,KAAKkzB,UAC3ClzB,KAAKytB,aAAauB,WAAWhvB,KAAKkzB,UAClClzB,KAAK4sB,WAAWO,SAASntB,KAAK4C,KAAM5C,KAAKkzB,SAAUlzB,KAAKotB,sBAAsB7pB,KAAKvD,MAAOA,KAAKqtB,qBAAqB9pB,KAAKvD,OACzH+uB,EAAOE,qBAkBProB,IAAK,WACLD,MAAO,WAhBC,GAAAuoB,GAAAlvB,IAER,OAAuD,KAAnDA,KAAKg0B,sBAAsBoB,oBACtBp1B,KAAKq1B,qCAGdr1B,MAAK6sB,cAAL7sB,UAA0BA,KAAK8sB,aAAawI,sBAAuBt1B,KAAK8sB,aAAayI,yBAClFpqB,KAAK,WAEJ+jB,EAAKrD,QAAQG,KAAK,yBAElBkD,EAAKgE,SAASL,QAAU,CAExB,IAAItmB,GAAU2iB,EAAKgE,SAASlwB,QAC5BuJ,GAAQpB,KAAK,WACT+jB,EAAKzB,aAAagC,cAAcP,EAAKgE,UACjChE,EAAKO,eACPP,EAAKO,eAAevvB,KAAKgvB,EAAKgE,WAEhChE,EAAKxC,MAAMV,KAAK,oBAChBkD,EAAKrD,QAAQU,KAAK,2BANtBhgB,SAQO,SAACqiB,GACNzC,QAAQC,IAAI,aAAcwC,GAC1BM,EAAKrD,QAAQU,KAAK,yBAEdqC,GAAOA,YAAevnB,SAAUunB,EAAIS,SAAWT,EAAIS,QAAQ9sB,QAAQ,cACrE2sB,EAAKmG,+BAA+BzG,GAEpCM,EAAKxC,MAAMmC,UAAUK,EAAKlC,eAAe2B,UAAU,gCAqB3D/nB,IAAK,iCACLD,MAAO,WAdP3G,KAAK6sB,cAAcb,KAAKhsB,KAAK+sB,aAAayI,eAAepG,MAAOpvB,KAAK+sB,aAAayI,eAAenG,UAC7F3vB,KAAMM,KAAKgtB,eAAe2B,UAAU,gBAoBxC/nB,IAAK,mBACLD,MAAO,WAfP,KAAK3G,KAAKkzB,SAASY,YAAe9zB,KAAKkzB,SAASwB,WAAc10B,KAAKkzB,SAASa,UAAa/zB,KAAKkzB,SAAS2B,SACrG,MAAO,QAGT,IAAIY,GAAez1B,KAAKkzB,SAASY,YAAc9zB,KAAKkzB,SAASwB,UACzDgB,EAAa11B,KAAKkzB,SAASa,UAAY/zB,KAAKkzB,SAAS2B,OAEzD,QAAQ70B,KAAKkzB,SAASyC,MACpB,IAAK31B,MAAK4zB,uBAAuBgC,KAC/B,MAAO1B,QAAOl0B,KAAKkzB,SAASY,YAAc9zB,KAAKkzB,SAASwB,WAAW7c,OAAO,aAE5E,SACE,OACI4d,EAAevB,OAAOl0B,KAAKkzB,SAASY,YAAc9zB,KAAKkzB,SAASwB,WAAW7c,OAAO,cAAgB,GAClG6d,EAAaxB,OAAOl0B,KAAKkzB,SAASa,UAAY/zB,KAAKkzB,SAAS2B,SAAShd,OAAO,cAAgB,IAC9FzX,KAAK,WAkBXwG,IAAK,kBACLD,MAAO,WAbP,MAAK3G,MAAKkzB,SAASmB,YAAer0B,KAAKkzB,SAASwB,UAIzCR,OAAOl0B,KAAKkzB,SAASmB,YAAcr0B,KAAKkzB,SAASwB,WAAW7c,OAAO,SAHjE,YAqBTjR,IAAK,yBACLD,MAAO,WAdP,MAAO3G,MAAKkzB,SAAS31B,KAAOyC,KAAKkzB,SAASC,gBAmB1CvsB,IAAK,MACLiE,IAAK,WA1ML,MAAO,8BAuOF6oB,IAGTr2B,cA5OqBq2B,GZ+2LfmC,IACA,SAASv4B,EAAQD,Gah3LvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,Mbs3L3hB8K,EAA8B,Wa3xLjC,QAAAA,GAAY1R,EAAQnE,EAAUtW,EAAIkiB,EAASa,EAAOM,EAAgB8D,GAChE,UADsF,IAAA5B,GAAAlvB,IAAA8qB,GAAA9qB,KAAA81B,GAGtF91B,KAAK6rB,QAAUA,EACf7rB,KAAK0sB,MAAQA,EACb1sB,KAAK2J,GAAKA,EACV3J,KAAKigB,SAAWA,EAChBjgB,KAAKgtB,eAAiBA,EACtBhtB,KAAK8wB,qBAAuBA,EAE5B9wB,KAAKixB,MAAMG,YAAa,EAExBpxB,KAAK+1B,iBAGL3R,EAAOuC,OAAO,WAEZ,MAAOuI,GAAK+B,MAAMY,WAClB,SAACmE,EAAQC,GAEND,GACD9G,EAAKY,UAAUppB,QAAQ,SAAC3G,GAAD,MAAKA,GAAEm2B,OAAQ,IACR,IAA1BhH,EAAKY,UAAU7vB,QACjBivB,EAAKiH,qBAEEF,IACT/G,EAAKpK,GAAG,GAAGsR,MAAMC,UAAY,EAC7BnH,EAAK+B,MAAMG,YAAa,EACxBnR,EAAS,WACPiP,EAAKY,UAAUppB,QAAQ,SAAC3G,GAAD,MAAKA,GAAEm2B,OAAQ,IACtChH,EAAK+B,MAAMG,YAAa,GACvB,QAGJ,GAkCL,MbwtLC0E,GAA4B9c,SAAW,SAAU,WAAY,KAAM,UAAW,QAAS,iBAAkB,wBal3L1GmS,EAAa2K,IACXlvB,IAAK,qBACLD,MAAO,WANP,GAAIwpB,GAAanwB,KAAK8vB,UAAU/pB,OAAO,SAAU7F,GAE/C,MAAmBgG,UAAZhG,EAAK3C,KACX0C,MAEH,OAAIkwB,OACFhE,SAAQC,IAAI,iDAIdpsB,MAAK8vB,UAAU3vB,KAAKH,KAAK8wB,qBAAqBgB,oBAAoB9xB,KAAKixB,MAAM1zB,QAW7EqJ,IAAK,iBACLD,MAAO,SATO6pB,GAAS,GAAAzE,GAAA/rB,KAEnBywB,EAAWzwB,KAAK2J,GAAG8C,OA2BvB,OAvBKzM,MAAKixB,MAAM1zB,IAQdyC,KAAK6rB,QAAQG,KAAK,yBAClBhsB,KAAK8wB,qBAAqBH,KAAKH,GAC1BrlB,KAAK,SAAC+nB,GAEPnH,EAAKoJ,uBAAuBjC,GAE5BnH,EAAKW,MAAMV,KAAKD,EAAKiB,eAAe2B,UAAU,qBAE9C8B,EAAS7kB,QAAQsnB,IAChB,SAACtE,GAEF6B,EAASzkB,OAAO4iB,MAlBpB5uB,KAAKs2B,UAAU5E,cACZvmB,KAAK,SAAC8lB,GAELlF,EAAKgK,gBAAe,GACpBtF,EAAS7kB,QAAQqlB,EAAMnB,UAAU,KAChCW,EAASzkB,QAiBTykB,EAASlkB,WAWhB3F,IAAK,iBACLD,MAAO,WAPF3G,KAAKixB,MAAM1zB,IACdyC,KAAKs2B,UAAUxD,qBAajBlsB,IAAK,oBACLD,MAAO,WARP,MAAO3G,MAAK8vB,UAAU7vB,UAatB2G,IAAK,oBACLD,MAAO,WATP3G,KAAKixB,MAAMG,YAAa,CACxB,IAAIiF,GAAY,CAChBr2B,MAAK8vB,UAAUppB,QAAQ,SAAC3G,GACtBs2B,GAAa,KAIfA,EAAYA,EAAA,GAA4B,KACpCr2B,KAAK8kB,GAAG,GAAGsR,MAAMC,YAAcA,EACjCr2B,KAAK8kB,GAAG,GAAGsR,MAAMC,UAAYA,EAE7Br2B,KAAKixB,MAAMG,YAAa,KAe1BxqB,IAAK,yBACLD,MAAO,SAZcusB,GAErBA,EAASqD,gBAAkBrC,OAAOhB,EAASwB,WAAWpiB,UACtD4gB,EAASsD,cAAgBtC,OAAOhB,EAAS2B,SAASviB,aAelD1L,IAAK,iBACLD,MAAO,SAbO8vB,GAAY,GAAA3H,GAAA9uB,IAE1BA,MAAK8vB,UAAUppB,QAAQ,SAACwsB,GAEtBA,EAASgD,QAAUO,EACnB3H,EAAKqG,uBAAuBjC,UAqB9BtsB,IAAK,MACLiE,IAAK,WAhHL,MAAO,kCAmKFirB,IAGTz4B,cAxKqBy4B,Gb+hMfY,IACA,SAASp5B,EAAQD,EAASH,GchiMhC,YAgBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAIA,IAAA4B,GAAA5B,EAAA,KAKI6B,EAAsBjB,EAAuBgB,GAJjD63B,EAAAz5B,EAAA,KAQI05B,EAAsB94B,EAAuB64B,EAKjDt5B,cAXeiC,QAAQhC,OAAO,qBAAuB,iBAGlDkC,WAAWT,aAAWU,IAHVV,cAIZ8iB,UAAU,oBAJE+U,cAKZl3B,Md4iMGm3B,IACA,SAASv5B,EAAQD,Ge1jMvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MfgkM3hB8L,EAA0B,Wej9L7B,QAAAA,GAAY1S,EAAQza,EAAIotB,EAAM9W,EAAU6D,EAAU+H,EAASoB,EAAciD,EAAca,EAAuB/D,EAAgBgK,EAAsBlG,GACnJ,UADyK,IAAAhC,GAAA9uB,IAAA8qB,GAAA9qB,KAAA82B,GAGxK92B,KAAKokB,OAASA,EACdpkB,KAAK+2B,KAAOA,EACZ/2B,KAAKigB,SAAWA,EAChBjgB,KAAK8jB,SAAWA,EAChB9jB,KAAK6rB,QAAUA,EACf7rB,KAAKgtB,eAAiBA,EACtBhtB,KAAKg3B,qBAAuBA,EAC5Bh3B,KAAK8wB,qBAAuBA,EAE7B9wB,KAAKxC,QAAS,EACbwC,KAAKi3B,cAAe,EACpBj3B,KAAKk3B,qBAELl3B,KAAK6rB,QAAQG,KAAK,UAElBhsB,KAAKm3B,UACHC,aAAc,KACdC,eAAgB,EAChBC,UAAW,IACXC,UAAU,GAGZP,EAAqBQ,cAAgBx3B,KAAKw3B,cAAcj0B,KAAKvD,KAE7D,IAAI+F,IACFwb,MAAU2S,SAASuD,SAAS,EAAG,QAAQ5f,OAAO,YAGhDlO,GAAGyT,KACC6P,EAAayK,UAAUxH,EAAaK,aAAahzB,GAAIwI,GACrDgrB,EAAsB4G,uBACrBxsB,KAAK,SAACysB,GAEP9I,EAAKhhB,KAAO8pB,EAAQ,GAEpB9I,EAAKtxB,QAAS,EACdsxB,EAAKzC,eACJ,SAACuC,GAEFE,EAAKhhB,MACHwlB,WAEFnH,QAAQC,IAAI,uBAAwBwC,GACpCE,EAAKtxB,QAAS,EAEdsxB,EAAKzC,gBAwBX,Mf04LCyK,GAAwB9d,SAAW,SAAU,KAAM,OAAQ,WAAY,WAAY,UAAW,eAAgB,eAAgB,wBAAyB,iBAAkB,uBAAwB,wBe5jMlMmS,EAAa2L,IACXlwB,IAAK,cACLD,MAAO,WALP3G,KAAK6rB,QAAQU,KAAK,aAUlB3lB,IAAK,iBACLD,MAAO,SAROmL,GAEd,GAAI+lB,GAAa3D,OAAOpiB,GAAM+F,OAAO,cAEjCyb,EAAStzB,KAAKk3B,kBAAkBW,MAEpC,OAAOvE,MAWP1sB,IAAK,mBACLD,MAAO,SATSmL,GAEhB,GAAIwhB,GAAStzB,KAAK83B,eAAehmB,GAE7BimB,EAAazE,EAAO7pB,IAAI,SAACwnB,GAE3B,MAAO,SAAWA,EAAMvxB,KAAO,kBAC9BU,KAAK,IAEJ6jB,EAAO8T,CAgBX,OAdIzE,GAAOrzB,OAAS,IAClB83B,EAAazE,EAAO7pB,IAAI,SAACwnB,GAEvB,MAAOA,GAAMvxB,KAAO,OACnBU,KAAK,IAER6jB,GACU,QACA,qBAAuB8T,EAAa,KAAOzE,EAAOrzB,OAAS,IAAMD,KAAKgtB,eAAe2B,UAAU,UAAY,OAE3G,UACAvuB,KAAK,KAGV6jB,KASPrd,IAAK,gBACLD,MAAO,SAPMmL,GAEb,GAAIimB,GAAa/3B,KAAKg4B,iBAAiBlmB,EAEnCimB,KACFA,EAAa/3B,KAAK8jB,SAASiU,GAAY/3B,KAAKokB,QAE5C2T,EAAa/3B,KAAK+2B,KAAKkB,YAAYF,EAAW,GAAGG,YAInDl4B,KAAKg3B,qBAAqBlpB,KAAK9N,KAAKg3B,qBAAqBmB,UAAUrmB,IAASimB,GAAc,MAU1FnxB,IAAK,aACLD,MAAO,WARK,GAAAolB,GAAA/rB,IAEZA,MAAK6rB,QAAQG,KAAK,UAEbhsB,KAAKo4B,iBAGRp4B,KAAKk3B,qBAFLl3B,KAAKq4B,kBAMPr4B,KAAKigB,SAAS,WAEZ8L,EAAKkL,cAAgBlL,EAAKkL,aAE1BlL,EAAKF,QAAQU,KAAK,WACjB,QAWH3lB,IAAK,iBACLD,MAAO,WAPP,MAAO3G,MAAKi3B,gBAYZrwB,IAAK,0BACLD,MAAO,SAVe2xB,EAAOrH,GAE7B,IAAK,GAAIlxB,GAAIu4B,EAAMr4B,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC1C,GAAI+R,GAAOwmB,EAAMv4B,GAEb83B,EAAa3D,OAAOpiB,GAAM+F,OAAO,aAChC7X,MAAKk3B,kBAAkBW,KAC1B73B,KAAKk3B,kBAAkBW,OAGrB73B,KAAKk3B,kBAAkBW,GAAYt1B,QAAQ0uB,SAC7CjxB,KAAKk3B,kBAAkBW,GAAY13B,KAAK8wB,OAe5CrqB,IAAK,kBACLD,MAAO,WATP,IAAK,GAAI5G,GAAI,EAAG4H,EAAM3H,KAAK8N,KAAKwlB,OAAOrzB,OAAQF,EAAI4H,EAAK5H,IAGtD,IAAK,GAFDkxB,GAASjxB,KAAK8N,KAAKwlB,OAAOvzB,GAErB8I,EAAI,EAAG0vB,EAAOtH,EAAMnB,UAAU7vB,OAAQ4I,EAAI0vB,EAAM1vB,IAAK,CAC5D,GAAIqqB,GAAWjC,EAAMnB,UAAUjnB,GAE3ByvB,EAAQt4B,KAAK8wB,qBAAqB0H,eAAetF,EACrDlzB,MAAKy4B,wBAAwBH,EAAOrH,SAmBxCrqB,IAAK,MACLiE,IAAK,WAhIL,MAAO,8BA0LFisB,IAGTz5B,cA/LqBy5B,GfgwMf4B,IACA,SAASp7B,EAAQD,GgBlwMvB,YAQA,SAASytB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH5jB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,GAGT,IAAIwkB,GAAe,WAAc,QAASC,GAAiB/J,EAAQgK,GAAS,IAAK,GAAItrB,GAAI,EAAGA,EAAIsrB,EAAMprB,OAAQF,IAAK,CAAE,GAAIurB,GAAaD,EAAMtrB,EAAIurB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpkB,OAAO6jB,eAAe7J,EAAQiK,EAAW1kB,IAAK0kB,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBJ,EAAYzkB,UAAWmlB,GAAiBC,GAAaP,EAAiBJ,EAAaW,GAAqBX,MAL3gB2N,EASE,WAHrB,QAAAA,KACE,UADY7N,GAAA9qB,KAAA24B,GAiBd,MAbAxN,GAAawN,EAAkB,OAC7B/xB,IAAK,MACLiE,IAAK,WAVL,MAAO,uBAqBF8tB,IAGTt7B,cA1BqBs7B,GhBkyMfC,IACA,SAASt7B,EAAQD,EAASH,GiBpyMhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,uHAA8I,MjB6yMxIs7B,IACA,SAASv7B,EAAQD,EAASH,GkBnzMhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,8cAAqe,MlB4zM/du7B,IACA,SAASx7B,EAAQD,EAASH,GmBl0MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,oJAA2K,MnB20MrKw7B,IACA,SAASz7B,EAAQD,EAASH,GoBj1MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,uqBAA8rB,MpB01MxrBy7B,IACA,SAAS17B,EAAQD,EAASH,GqBh2MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,gIAAuJ,MrBy2MjJ07B,IACA,SAAS37B,EAAQD,EAASH,GsB/2MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,+wBAAsyB,MtBw3MhyB27B,IACA,SAAS57B,EAAQD,EAASH,GuB93MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,+VAAsX,MvBu4MhX47B,IACA,SAAS77B,EAAQD,EAASH,GwB74MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,mlDAA4mD,MxBs5MtmD67B,IACA,SAAS97B,EAAQD,EAASH,GyB55MhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA8C,MAAA7C,EAAAC,GAAA,uBAA8C,MzBq6MxC87B,IACA,SAAS/7B,EAAQD,EAASH,G0B36MhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAHxE,QAASu7B,GAAOC,GAC7BA,EAAe3f,MAAM,yCACnBnM,IAAK,mBACL8O,OACCid,cACCtsB,SAAUhQ,EAAQ,MAClBsC,WAAYf,aAAWgB,IACvB0d,aAAc,8B1Bg6MnBmc,EAAOtgB,SAAW,kB0B76MnB3R,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAGwBi8B,CAPxB,IAAA96B,GAAAtB,EAAA,KAQIuB,EAAoBX,EAAuBU,I1Bs8MzCi7B,IACA,SAASn8B,EAAQD,EAASH,G2Bh9MhC,YAoBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAlBvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAEA,IAAAw8B,GAAAx8B,EAAA,KAOIy8B,EAAoB77B,EAAuB47B,GAJ/Cl7B,EAAAtB,EAAA,KAQIuB,EAAoBX,EAAuBU,GAP/Co7B,EAAA18B,EAAA,KAWI28B,EAAoB/7B,EAAuB87B,EAM/Cv8B,cAdeiC,QAAQhC,OAAO,mBAAoBq8B,eAC/Cp6B,OADYs6B,cAEZr6B,WAAWf,aAAWgB,IAFVhB,cAGZiB,M3Bi+MGo6B,IACA,SAASx8B,EAAQD,EAASH,G4B/+MhC;AAWA,QAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GATxE,QAASg8B,KACtB,OACEjY,SAAU,IACVjT,SAAS,EACT+R,OACIsM,eAAgB,IAChB8M,WAAY,MAEhB9sB,SAAUhQ,EAAQ,MAClBsC,WAAYH,aAAWI,IACvB0d,aAAc,0BACd8c,kBAAkB,EAClB7T,SAAS,gBAAiB,uBAAwB,uBAClDlC,KAAM,SAACtD,EAAOkE,EAAIO,EAAM6U,GAEtBA,EAAM,GAAGzM,aAAeyM,EAAM,GAC9BA,EAAM,GAAG3L,wBAA0B2L,EAAM,KAhB/C7yB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAHwB08B,CAFxB,IAAA36B,GAAAlC,EAAA,KASImC,EAAwBvB,EAAuBsB,I5B4gN7C+6B,IACA,SAAS78B,EAAQD,EAASH,G6BthNhC,YAgBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAMA,IAAAkC,GAAAlC,EAAA,KAGImC,EAAwBvB,EAAuBsB,GAFnDg7B,EAAAl9B,EAAA,KAMIm9B,EAAwBv8B,EAAuBs8B,EAKnD/8B,cAPeiC,QAAQhC,OAAO,0BAG3BkC,WAAWH,aAAWI,IAHVJ,cAIZwiB,UAAU,sBAJEwY,cAKZ36B,M7B8hNG46B,IACA,SAASh9B,EAAQD,EAASH,G8BhjNhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GATxE,QAASw8B,KACtB,OACEzY,SAAU,IACVjT,SAAS,EACT+R,OACI0L,gBAAiB,IACjB0N,WAAY,KACZQ,OAAO,IACPC,UAAU,MAEdvtB,SAAUhQ,EAAQ,MAClBsC,WAAYL,aAAWM,IACvB0d,aAAc,sBACd8c,kBAAkB,EAClB/V,KAAM,SAACtD,EAAOkE,EAAIO,EAAMqV,MAd5BrzB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAHwBk9B,CAFxB,IAAAr7B,GAAAhC,EAAA,KASIiC,EAAwBrB,EAAuBoB,I9B0kN7Cy7B,IACA,SAASr9B,EAAQD,EAASH,G+BplNhC,YAgBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAIA,IAAAgC,GAAAhC,EAAA,KAKIiC,EAAwBrB,EAAuBoB,GAJnD07B,EAAA19B,EAAA,KAQI29B,EAAwB/8B,EAAuB88B,EAKnDv9B,cATeiC,QAAQhC,OAAO,0BAG3BkC,WAAWL,aAAWM,IAHVN,cAIZ0iB,UAAU,sBAJEgZ,cAKZn7B,M/B8lNGo7B,IACA,SAASx9B,EAAQD,EAASH,GgC9mNhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GATxE,QAASkzB,KACtB,OACEnP,SAAU,IACVjT,SAAS,EACT+R,OACIqQ,MAAO,IACP+I,WAAY,MAEhB9sB,SAAUhQ,EAAQ,MAClBsC,WAAYX,aAAWY,IACvB0d,aAAc,YACd8c,kBAAkB,EAClB7T,SAAS,gBAAiB,aAAc,SACxClC,KAAM,SAACtD,EAAOkE,EAAIO,EAAM6U,GAEpBA,EAAM,GAAGzM,aAAeyM,EAAM,GAC9BA,EAAM,GAAGvI,cAAgBuI,EAAM,KAhBvC7yB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAHwB4zB,CAFxB,IAAAryB,GAAA1B,EAAA,KASI2B,EAAUf,EAAuBc,IhC2oN/Bm8B,IACA,SAASz9B,EAAQD,EAASH,GiCrpNhC,YAoBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAlBvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAMA,IAAA0B,GAAA1B,EAAA,KAGI2B,EAAUf,EAAuBc,GAFrCo8B,EAAA99B,EAAA,KAMI+9B,EAAUn9B,EAAuBk9B,GAJrCE,EAAAh+B,EAAA,KAQIi+B,EAAKr9B,EAAuBo9B,EAKhC79B,cAVeiC,QAAQhC,OAAO,SAAU69B,eAGrC37B,WAAWX,aAAWY,IAHVZ,cAIZgjB,UAAU,QAJEoZ,cAKZv7B,MjCkqNG07B,IACA,SAAS99B,EAAQD,EAASH,GkCrrNhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GATxE,QAASs9B,KACtB,OACEvZ,SAAU,IACVjT,SAAS,EACT+R,OACI0S,OAAQ,IACR0G,WAAY,KACZQ,OAAO,IACPC,UAAU,MAEdvtB,SAAUhQ,EAAQ,MAClBsC,WAAYjB,aAAWkB,IACvB0d,aAAc,gBACd8c,kBAAkB,EAClB/V,KAAM,SAACtD,EAAOkE,EAAIO,EAAMqV,MAd5BrzB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAHwBg+B,CAFxB,IAAA/8B,GAAApB,EAAA,KASIqB,EAAcT,EAAuBQ,IlC+sNnCg9B,IACA,SAASh+B,EAAQD,EAASH,GmCztNhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GATxE,QAASw9B,KACtB,OACEzZ,SAAU,IACVlB,OACIsS,SAAU,IACV8G,WAAY,MAEhB9sB,SAAUhQ,EAAQ,MAClBsC,WAAYP,aAAWQ,IACvB0d,aAAc,eACdtO,SAAS,EACTorB,kBAAkB,EAClB7T,SAAS,gBAAiB,qBAAsB,iBAChDlC,KAAM,SAACtD,EAAOkE,EAAIO,EAAM6U,GAEtBA,EAAM,GAAGzM,aAAeyM,EAAM,GAC9BA,EAAM,GAAGlG,sBAAwBkG,EAAM,KAhB7C7yB,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAHwBk+B,CAFxB,IAAAv8B,GAAA9B,EAAA,KASI+B,EAAkBnB,EAAuBkB,InCsvNvCw8B,IACA,SAASl+B,EAAQD,EAASH,GoChwNhC,YAoBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAlBvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAIA,IAAA8B,GAAA9B,EAAA,KAKI+B,EAAkBnB,EAAuBkB,GAJ7Cy8B,EAAAv+B,EAAA,KAQIw+B,EAAkB59B,EAAuB29B,GAN7CP,EAAAh+B,EAAA,KAUIi+B,EAAKr9B,EAAuBo9B,EAKhC79B,cAbeiC,QAAQhC,OAAO,iBAAkB69B,eAG7C37B,WAAWP,aAAWQ,IAHVR,cAIZ4iB,UAAU,gBAJE6Z,cAKZh8B,MpCgxNGi8B,IACA,SAASr+B,EAAQD,EAASH,GqChyNhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GATxE,QAAS69B,GAAkB3b,GACxC,UACA,QACE6B,SAAU,IACVlB,OACEkP,UAAW,IACXmB,MAAO,IACPuJ,OAAO,KAETttB,SAAUhQ,EAAQ,MAClBsC,WAAYT,aAAWU,IACvB0d,aAAc,wBACd8c,kBAAkB,EAClBprB,SAAS,EACTuX,SAAU,SAAU,sBACpBlC,KAAM,SAACtD,EAAOkE,EAAIO,EAAM6U,GAEtB,GAAI5D,GAAY4D,EAAM,GAClBlG,EAAwBkG,EAAM,EAElClG,GAAsBsC,UAAYA,EAElCtC,EAAsBlP,GAAKA,EAC3BA,EAAG,GAAGsR,MAAMC,UAAY,EACxBvR,EAAG+W,GAAG,uEAAuE,SAACrvB,IACrD,eAAnBA,EAAEsvB,cAAkCtvB,EAAE2kB,eAAkD,eAAjC3kB,EAAE2kB,cAAc2K,eACzE7b,EAAS,WACP+T,EAAsB/C,MAAMG,YAAa,QrCuwNpDwK,EAAkB5iB,SAAW,YqClyN9B3R,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAHwBu+B,CAFxB,IAAA98B,GAAA5B,EAAA,KASI6B,EAAsBjB,EAAuBgB,IrC60N3Ci9B,IACA,SAASz+B,EAAQD,EAASH,GsCv1NhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAHxE,QAASu7B,GAAOC,GAC7BA,EAAe3f,MAAM,mCACnBnM,IAAK,QACL8O,OACCid,cACCtsB,SAAUhQ,EAAQ,MAClBsC,WAAYjB,aAAWkB,IACvB0d,aAAc,wBtC40NnBmc,EAAOtgB,SAAW,kBsCz1NnB3R,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAGwBi8B,CAPxB,IAAAh7B,GAAApB,EAAA,KAQIqB,EAAcT,EAAuBQ,ItCk3NnC09B,IACA,SAAS1+B,EAAQD,EAASH,GuC53NhC,YAoBA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAlBvFsJ,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAFTzJ,EAAA,KAIA,IAAAw8B,GAAAx8B,EAAA,KAKIy8B,EAAoB77B,EAAuB47B,GAF/Cp7B,EAAApB,EAAA,KAMIqB,EAAcT,EAAuBQ,GALzCI,EAAAxB,EAAA,KASIyB,EAAcb,EAAuBY,EAMzCrB,cAZeiC,QAAQhC,OAAO,iBAAkBq8B,eAC7Cp6B,OADYZ,cAEZa,WAAWjB,aAAWkB,IAFVlB,cAGZmB,MvC24NGu8B,IACA,SAAS3+B,EAAQD,EAASH,GwC35NhC,YAWA,SAASY,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAHxE,QAASu7B,GAAOC,GAC7B,UACAA,GAAe3f,MAAM,yBACnBnM,IAAK,UACLP,SAAUhQ,EAAQ,MAClBsC,WAAYrB,aAAWsB,IACvB0d,aAAc,iBACdvR,SAGCswB,SAAA,uEAAS,SAAUvyB,EAAI8Q,EAAQD,EAAcyF,EAAUkc,EAAejM,GAErE,MAAIA,GAAakM,eAAiBlM,EAAaK,aAAa2L,UAEpDvyB,EAAGQ,QAGV8V,EAAS,WAERxF,EAAO+C,GAAG,oBAGJ7T,EAAGqC,exCi4NhBstB,EAAOtgB,SAAW,kBwC75NnB3R,OAAO6jB,eAAe7tB,EAAS,cAC7BsJ,OAAO,IAETtJ,aAGwBi8B,CAPxB,IAAAp7B,GAAAhB,EAAA,KAQIiB,EAAWL,EAAuBI,IxCu8NhCm+B,KACA,SAAS/+B,EAAQD,GyCj9NvBC,EAAAD,QAAA,4pBzCu9NMi/B,KACA,SAASh/B,EAAQD,G0Cx9NvBC,EAAAD,QAAA,+6C1C89NMk/B,KACA,SAASj/B,EAAQD,G2C/9NvBC,EAAAD,QAAA,ivB3Cq+NMm/B,KACA,SAASl/B,EAAQD,G4Ct+NvBC,EAAAD,QAAA,q3D5C4+NMo/B,KACA,SAASn/B,EAAQD,G6C7+NvBC,EAAAD,QAAA,wkB7Cm/NMq/B,KACA,SAASp/B,EAAQD,G8Cp/NvBC,EAAAD,QAAA,+xC9C0/NMs/B,KACA,SAASr/B,EAAQD,G+C3/NvBC,EAAAD,QAAA,uvB/CigOMu/B,KACA,SAASt/B,EAAQD,GgDlgOvBC,EAAAD,QAAA,o7DhDwgOMw/B,KACA,SAASv/B,EAAQD,GiDzgOvBC,EAAAD,QAAA,qLjD+gOMy/B,KACA,SAASx/B,EAAQD,EAASH,GkD7gOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SlDmiOM2xB,KACA,SAAS1/B,EAAQD,EAASH,GmDxiOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SnD8jOM4xB,KACA,SAAS3/B,EAAQD,EAASH,GoDnkOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SpDylOM6xB,KACA,SAAS5/B,EAAQD,EAASH,GqD9lOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SrDonOM8xB,KACA,SAAS7/B,EAAQD,EAASH,GsDznOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,StD+oOM+xB,KACA,SAAS9/B,EAAQD,EAASH,GuDppOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SvD0qOMgyB,KACA,SAAS//B,EAAQD,EAASH,GwD/qOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SxDqsOMiyB,KACA,SAAShgC,EAAQD,EAASH,GyD1sOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB,SzDguOMkyB,KACA,SAASjgC,EAAQD,EAASH,G0DruOhC,GAAA6/B,GAAA7/B,EAAA,IACA,iBAAA6/B,SAAAz/B,EAAAC,GAAAw/B,EAAA,KAEA7/B,GAAA,GAAA6/B,KACAA,GAAA1xB,SAAA/N,EAAAD,QAAA0/B,EAAA1xB","file":"events.bundle.427d4df267b1f1b9acad.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(1159);\n\t\n\tvar _events = __webpack_require__(483);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _events3 = __webpack_require__(929);\n\t\n\tvar _events4 = _interopRequireDefault(_events3);\n\t\n\tvar _eventList = __webpack_require__(928);\n\t\n\tvar _eventList2 = _interopRequireDefault(_eventList);\n\t\n\tvar _collectionSlots = __webpack_require__(916);\n\t\n\tvar _collectionSlots2 = _interopRequireDefault(_collectionSlots);\n\t\n\tvar _eventList3 = __webpack_require__(478);\n\t\n\tvar _eventList4 = _interopRequireDefault(_eventList3);\n\t\n\tvar _event = __webpack_require__(922);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _eventScheduleList = __webpack_require__(481);\n\t\n\tvar _eventScheduleList2 = _interopRequireDefault(_eventScheduleList);\n\t\n\tvar _eventSchedule = __webpack_require__(925);\n\t\n\tvar _eventSchedule2 = _interopRequireDefault(_eventSchedule);\n\t\n\tvar _collectionSlotsList = __webpack_require__(920);\n\t\n\tvar _collectionSlotsList2 = _interopRequireDefault(_collectionSlotsList);\n\t\n\tvar _collectionSlotsItem = __webpack_require__(918);\n\t\n\tvar _collectionSlotsItem2 = _interopRequireDefault(_collectionSlotsItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\t\n\t\n\tangular.module(\"webapp.events\", ['ui.router', _eventList2.default, _collectionSlots2.default, _eventList4.default, _event2.default, _eventScheduleList2.default, _eventSchedule2.default, _collectionSlotsList2.default, _collectionSlotsItem2.default]).config(_events4.default).controller(_events2.default.UID, _events2.default).name; // Import Style\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n\n/***/ 111:\n/***/ function(module, exports) {\n\n\t/**\n\t * State-based routing for AngularJS\n\t * @version v0.2.18\n\t * @link http://angular-ui.github.com/\n\t * @license MIT License, http://www.opensource.org/licenses/MIT\n\t */\n\t\n\t/* commonjs package manager support (eg componentjs) */\n\tif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n\t  module.exports = 'ui.router';\n\t}\n\t\n\t(function (window, angular, undefined) {\n\t/*jshint globalstrict:true*/\n\t/*global angular:false*/\n\t'use strict';\n\t\n\tvar isDefined = angular.isDefined,\n\t    isFunction = angular.isFunction,\n\t    isString = angular.isString,\n\t    isObject = angular.isObject,\n\t    isArray = angular.isArray,\n\t    forEach = angular.forEach,\n\t    extend = angular.extend,\n\t    copy = angular.copy,\n\t    toJson = angular.toJson;\n\t\n\tfunction inherit(parent, extra) {\n\t  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n\t}\n\t\n\tfunction merge(dst) {\n\t  forEach(arguments, function(obj) {\n\t    if (obj !== dst) {\n\t      forEach(obj, function(value, key) {\n\t        if (!dst.hasOwnProperty(key)) dst[key] = value;\n\t      });\n\t    }\n\t  });\n\t  return dst;\n\t}\n\t\n\t/**\n\t * Finds the common ancestor path between two states.\n\t *\n\t * @param {Object} first The first state.\n\t * @param {Object} second The second state.\n\t * @return {Array} Returns an array of state names in descending order, not including the root.\n\t */\n\tfunction ancestors(first, second) {\n\t  var path = [];\n\t\n\t  for (var n in first.path) {\n\t    if (first.path[n] !== second.path[n]) break;\n\t    path.push(first.path[n]);\n\t  }\n\t  return path;\n\t}\n\t\n\t/**\n\t * IE8-safe wrapper for `Object.keys()`.\n\t *\n\t * @param {Object} object A JavaScript object.\n\t * @return {Array} Returns the keys of the object as an array.\n\t */\n\tfunction objectKeys(object) {\n\t  if (Object.keys) {\n\t    return Object.keys(object);\n\t  }\n\t  var result = [];\n\t\n\t  forEach(object, function(val, key) {\n\t    result.push(key);\n\t  });\n\t  return result;\n\t}\n\t\n\t/**\n\t * IE8-safe wrapper for `Array.prototype.indexOf()`.\n\t *\n\t * @param {Array} array A JavaScript array.\n\t * @param {*} value A value to search the array for.\n\t * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n\t */\n\tfunction indexOf(array, value) {\n\t  if (Array.prototype.indexOf) {\n\t    return array.indexOf(value, Number(arguments[2]) || 0);\n\t  }\n\t  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n\t  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\t\n\t  if (from < 0) from += len;\n\t\n\t  for (; from < len; from++) {\n\t    if (from in array && array[from] === value) return from;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Merges a set of parameters with all parameters inherited between the common parents of the\n\t * current state and a given destination state.\n\t *\n\t * @param {Object} currentParams The value of the current state parameters ($stateParams).\n\t * @param {Object} newParams The set of parameters which will be composited with inherited params.\n\t * @param {Object} $current Internal definition of object representing the current state.\n\t * @param {Object} $to Internal definition of object representing state to transition to.\n\t */\n\tfunction inheritParams(currentParams, newParams, $current, $to) {\n\t  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\t\n\t  for (var i in parents) {\n\t    if (!parents[i] || !parents[i].params) continue;\n\t    parentParams = objectKeys(parents[i].params);\n\t    if (!parentParams.length) continue;\n\t\n\t    for (var j in parentParams) {\n\t      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n\t      inheritList.push(parentParams[j]);\n\t      inherited[parentParams[j]] = currentParams[parentParams[j]];\n\t    }\n\t  }\n\t  return extend({}, inherited, newParams);\n\t}\n\t\n\t/**\n\t * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n\t *\n\t * @param {Object} a The first object.\n\t * @param {Object} b The second object.\n\t * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n\t *                     it defaults to the list of keys in `a`.\n\t * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n\t */\n\tfunction equalForKeys(a, b, keys) {\n\t  if (!keys) {\n\t    keys = [];\n\t    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n\t  }\n\t\n\t  for (var i=0; i<keys.length; i++) {\n\t    var k = keys[i];\n\t    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Returns the subset of an object, based on a list of keys.\n\t *\n\t * @param {Array} keys\n\t * @param {Object} values\n\t * @return {Boolean} Returns a subset of `values`.\n\t */\n\tfunction filterByKeys(keys, values) {\n\t  var filtered = {};\n\t\n\t  forEach(keys, function (name) {\n\t    filtered[name] = values[name];\n\t  });\n\t  return filtered;\n\t}\n\t\n\t// like _.indexBy\n\t// when you know that your index values will be unique, or you want last-one-in to win\n\tfunction indexBy(array, propName) {\n\t  var result = {};\n\t  forEach(array, function(item) {\n\t    result[item[propName]] = item;\n\t  });\n\t  return result;\n\t}\n\t\n\t// extracted from underscore.js\n\t// Return a copy of the object only containing the whitelisted properties.\n\tfunction pick(obj) {\n\t  var copy = {};\n\t  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n\t  forEach(keys, function(key) {\n\t    if (key in obj) copy[key] = obj[key];\n\t  });\n\t  return copy;\n\t}\n\t\n\t// extracted from underscore.js\n\t// Return a copy of the object omitting the blacklisted properties.\n\tfunction omit(obj) {\n\t  var copy = {};\n\t  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n\t  for (var key in obj) {\n\t    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n\t  }\n\t  return copy;\n\t}\n\t\n\tfunction pluck(collection, key) {\n\t  var result = isArray(collection) ? [] : {};\n\t\n\t  forEach(collection, function(val, i) {\n\t    result[i] = isFunction(key) ? key(val) : val[key];\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction filter(collection, callback) {\n\t  var array = isArray(collection);\n\t  var result = array ? [] : {};\n\t  forEach(collection, function(val, i) {\n\t    if (callback(val, i)) {\n\t      result[array ? result.length : i] = val;\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction map(collection, callback) {\n\t  var result = isArray(collection) ? [] : {};\n\t\n\t  forEach(collection, function(val, i) {\n\t    result[i] = callback(val, i);\n\t  });\n\t  return result;\n\t}\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.util\n\t *\n\t * @description\n\t * # ui.router.util sub-module\n\t *\n\t * This module is a dependency of other sub-modules. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t *\n\t */\n\tangular.module('ui.router.util', ['ng']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.router\n\t * \n\t * @requires ui.router.util\n\t *\n\t * @description\n\t * # ui.router.router sub-module\n\t *\n\t * This module is a dependency of other sub-modules. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t */\n\tangular.module('ui.router.router', ['ui.router.util']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.state\n\t * \n\t * @requires ui.router.router\n\t * @requires ui.router.util\n\t *\n\t * @description\n\t * # ui.router.state sub-module\n\t *\n\t * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t * \n\t */\n\tangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router\n\t *\n\t * @requires ui.router.state\n\t *\n\t * @description\n\t * # ui.router\n\t * \n\t * ## The main module for ui.router \n\t * There are several sub-modules included with the ui.router module, however only this module is needed\n\t * as a dependency within your angular app. The other modules are for organization purposes. \n\t *\n\t * The modules are:\n\t * * ui.router - the main \"umbrella\" module\n\t * * ui.router.router - \n\t * \n\t * *You'll need to include **only** this module as the dependency within your angular app.*\n\t * \n\t * <pre>\n\t * <!doctype html>\n\t * <html ng-app=\"myApp\">\n\t * <head>\n\t *   <script src=\"js/angular.js\"></script>\n\t *   <!-- Include the ui-router script -->\n\t *   <script src=\"js/angular-ui-router.min.js\"></script>\n\t *   <script>\n\t *     // ...and add 'ui.router' as a dependency\n\t *     var myApp = angular.module('myApp', ['ui.router']);\n\t *   </script>\n\t * </head>\n\t * <body>\n\t * </body>\n\t * </html>\n\t * </pre>\n\t */\n\tangular.module('ui.router', ['ui.router.state']);\n\t\n\tangular.module('ui.router.compat', ['ui.router']);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$resolve\n\t *\n\t * @requires $q\n\t * @requires $injector\n\t *\n\t * @description\n\t * Manages resolution of (acyclic) graphs of promises.\n\t */\n\t$Resolve.$inject = ['$q', '$injector'];\n\tfunction $Resolve(  $q,    $injector) {\n\t  \n\t  var VISIT_IN_PROGRESS = 1,\n\t      VISIT_DONE = 2,\n\t      NOTHING = {},\n\t      NO_DEPENDENCIES = [],\n\t      NO_LOCALS = NOTHING,\n\t      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n\t  \n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$resolve#study\n\t   * @methodOf ui.router.util.$resolve\n\t   *\n\t   * @description\n\t   * Studies a set of invocables that are likely to be used multiple times.\n\t   * <pre>\n\t   * $resolve.study(invocables)(locals, parent, self)\n\t   * </pre>\n\t   * is equivalent to\n\t   * <pre>\n\t   * $resolve.resolve(invocables, locals, parent, self)\n\t   * </pre>\n\t   * but the former is more efficient (in fact `resolve` just calls `study` \n\t   * internally).\n\t   *\n\t   * @param {object} invocables Invocable objects\n\t   * @return {function} a function to pass in locals, parent and self\n\t   */\n\t  this.study = function (invocables) {\n\t    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n\t    var invocableKeys = objectKeys(invocables || {});\n\t    \n\t    // Perform a topological sort of invocables to build an ordered plan\n\t    var plan = [], cycle = [], visited = {};\n\t    function visit(value, key) {\n\t      if (visited[key] === VISIT_DONE) return;\n\t      \n\t      cycle.push(key);\n\t      if (visited[key] === VISIT_IN_PROGRESS) {\n\t        cycle.splice(0, indexOf(cycle, key));\n\t        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n\t      }\n\t      visited[key] = VISIT_IN_PROGRESS;\n\t      \n\t      if (isString(value)) {\n\t        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n\t      } else {\n\t        var params = $injector.annotate(value);\n\t        forEach(params, function (param) {\n\t          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n\t        });\n\t        plan.push(key, value, params);\n\t      }\n\t      \n\t      cycle.pop();\n\t      visited[key] = VISIT_DONE;\n\t    }\n\t    forEach(invocables, visit);\n\t    invocables = cycle = visited = null; // plan is all that's required\n\t    \n\t    function isResolve(value) {\n\t      return isObject(value) && value.then && value.$$promises;\n\t    }\n\t    \n\t    return function (locals, parent, self) {\n\t      if (isResolve(locals) && self === undefined) {\n\t        self = parent; parent = locals; locals = null;\n\t      }\n\t      if (!locals) locals = NO_LOCALS;\n\t      else if (!isObject(locals)) {\n\t        throw new Error(\"'locals' must be an object\");\n\t      }       \n\t      if (!parent) parent = NO_PARENT;\n\t      else if (!isResolve(parent)) {\n\t        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n\t      }\n\t      \n\t      // To complete the overall resolution, we have to wait for the parent\n\t      // promise and for the promise for each invokable in our plan.\n\t      var resolution = $q.defer(),\n\t          result = resolution.promise,\n\t          promises = result.$$promises = {},\n\t          values = extend({}, locals),\n\t          wait = 1 + plan.length/3,\n\t          merged = false;\n\t          \n\t      function done() {\n\t        // Merge parent values we haven't got yet and publish our own $$values\n\t        if (!--wait) {\n\t          if (!merged) merge(values, parent.$$values); \n\t          result.$$values = values;\n\t          result.$$promises = result.$$promises || true; // keep for isResolve()\n\t          delete result.$$inheritedValues;\n\t          resolution.resolve(values);\n\t        }\n\t      }\n\t      \n\t      function fail(reason) {\n\t        result.$$failure = reason;\n\t        resolution.reject(reason);\n\t      }\n\t\n\t      // Short-circuit if parent has already failed\n\t      if (isDefined(parent.$$failure)) {\n\t        fail(parent.$$failure);\n\t        return result;\n\t      }\n\t      \n\t      if (parent.$$inheritedValues) {\n\t        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n\t      }\n\t\n\t      // Merge parent values if the parent has already resolved, or merge\n\t      // parent promises and wait if the parent resolve is still in progress.\n\t      extend(promises, parent.$$promises);\n\t      if (parent.$$values) {\n\t        merged = merge(values, omit(parent.$$values, invocableKeys));\n\t        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n\t        done();\n\t      } else {\n\t        if (parent.$$inheritedValues) {\n\t          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n\t        }        \n\t        parent.then(done, fail);\n\t      }\n\t      \n\t      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n\t      for (var i=0, ii=plan.length; i<ii; i+=3) {\n\t        if (locals.hasOwnProperty(plan[i])) done();\n\t        else invoke(plan[i], plan[i+1], plan[i+2]);\n\t      }\n\t      \n\t      function invoke(key, invocable, params) {\n\t        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n\t        var invocation = $q.defer(), waitParams = 0;\n\t        function onfailure(reason) {\n\t          invocation.reject(reason);\n\t          fail(reason);\n\t        }\n\t        // Wait for any parameter that we have a promise for (either from parent or from this\n\t        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n\t        forEach(params, function (dep) {\n\t          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n\t            waitParams++;\n\t            promises[dep].then(function (result) {\n\t              values[dep] = result;\n\t              if (!(--waitParams)) proceed();\n\t            }, onfailure);\n\t          }\n\t        });\n\t        if (!waitParams) proceed();\n\t        function proceed() {\n\t          if (isDefined(result.$$failure)) return;\n\t          try {\n\t            invocation.resolve($injector.invoke(invocable, self, values));\n\t            invocation.promise.then(function (result) {\n\t              values[key] = result;\n\t              done();\n\t            }, onfailure);\n\t          } catch (e) {\n\t            onfailure(e);\n\t          }\n\t        }\n\t        // Publish promise synchronously; invocations further down in the plan may depend on it.\n\t        promises[key] = invocation.promise;\n\t      }\n\t      \n\t      return result;\n\t    };\n\t  };\n\t  \n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$resolve#resolve\n\t   * @methodOf ui.router.util.$resolve\n\t   *\n\t   * @description\n\t   * Resolves a set of invocables. An invocable is a function to be invoked via \n\t   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n\t   * An invocable can either return a value directly,\n\t   * or a `$q` promise. If a promise is returned it will be resolved and the \n\t   * resulting value will be used instead. Dependencies of invocables are resolved \n\t   * (in this order of precedence)\n\t   *\n\t   * - from the specified `locals`\n\t   * - from another invocable that is part of this `$resolve` call\n\t   * - from an invocable that is inherited from a `parent` call to `$resolve` \n\t   *   (or recursively\n\t   * - from any ancestor `$resolve` of that parent).\n\t   *\n\t   * The return value of `$resolve` is a promise for an object that contains \n\t   * (in this order of precedence)\n\t   *\n\t   * - any `locals` (if specified)\n\t   * - the resolved return values of all injectables\n\t   * - any values inherited from a `parent` call to `$resolve` (if specified)\n\t   *\n\t   * The promise will resolve after the `parent` promise (if any) and all promises \n\t   * returned by injectables have been resolved. If any invocable \n\t   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n\t   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n\t   * same error. A rejection of a `parent` promise (if specified) will likewise be \n\t   * propagated immediately. Once the `$resolve` promise has been rejected, no \n\t   * further invocables will be called.\n\t   * \n\t   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n\t   * to throw an error. As a special case, an injectable can depend on a parameter \n\t   * with the same name as the injectable, which will be fulfilled from the `parent` \n\t   * injectable of the same name. This allows inherited values to be decorated. \n\t   * Note that in this case any other injectable in the same `$resolve` with the same\n\t   * dependency would see the decorated value, not the inherited value.\n\t   *\n\t   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n\t   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n\t   * exception.\n\t   *\n\t   * Invocables are invoked eagerly as soon as all dependencies are available. \n\t   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n\t   *\n\t   * As a special case, an invocable can be a string, in which case it is taken to \n\t   * be a service name to be passed to `$injector.get()`. This is supported primarily \n\t   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n\t   * routes.\n\t   *\n\t   * @param {object} invocables functions to invoke or \n\t   * `$injector` services to fetch.\n\t   * @param {object} locals  values to make available to the injectables\n\t   * @param {object} parent  a promise returned by another call to `$resolve`.\n\t   * @param {object} self  the `this` for the invoked methods\n\t   * @return {object} Promise for an object that contains the resolved return value\n\t   * of all invocables, as well as any inherited and local values.\n\t   */\n\t  this.resolve = function (invocables, locals, parent, self) {\n\t    return this.study(invocables)(locals, parent, self);\n\t  };\n\t}\n\t\n\tangular.module('ui.router.util').service('$resolve', $Resolve);\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$templateFactory\n\t *\n\t * @requires $http\n\t * @requires $templateCache\n\t * @requires $injector\n\t *\n\t * @description\n\t * Service. Manages loading of templates.\n\t */\n\t$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\n\tfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromConfig\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template from a configuration object. \n\t   *\n\t   * @param {object} config Configuration object for which to load a template. \n\t   * The following properties are search in the specified order, and the first one \n\t   * that is defined is used to create the template:\n\t   *\n\t   * @param {string|object} config.template html string template or function to \n\t   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n\t   * @param {string|object} config.templateUrl url to load or a function returning \n\t   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n\t   * @param {Function} config.templateProvider function to invoke via \n\t   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n\t   * @param {object} params  Parameters to pass to the template function.\n\t   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n\t   * via a `templateProvider`. Defaults to `{ params: params }`.\n\t   *\n\t   * @return {string|object}  The template html as a string, or a promise for \n\t   * that string,or `null` if no template is configured.\n\t   */\n\t  this.fromConfig = function (config, params, locals) {\n\t    return (\n\t      isDefined(config.template) ? this.fromString(config.template, params) :\n\t      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n\t      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n\t      null\n\t    );\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromString\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template from a string or a function returning a string.\n\t   *\n\t   * @param {string|object} template html template as a string or function that \n\t   * returns an html template as a string.\n\t   * @param {object} params Parameters to pass to the template function.\n\t   *\n\t   * @return {string|object} The template html as a string, or a promise for that \n\t   * string.\n\t   */\n\t  this.fromString = function (template, params) {\n\t    return isFunction(template) ? template(params) : template;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromUrl\n\t   * @methodOf ui.router.util.$templateFactory\n\t   * \n\t   * @description\n\t   * Loads a template from the a URL via `$http` and `$templateCache`.\n\t   *\n\t   * @param {string|Function} url url of the template to load, or a function \n\t   * that returns a url.\n\t   * @param {Object} params Parameters to pass to the url function.\n\t   * @return {string|Promise.<string>} The template html as a string, or a promise \n\t   * for that string.\n\t   */\n\t  this.fromUrl = function (url, params) {\n\t    if (isFunction(url)) url = url(params);\n\t    if (url == null) return null;\n\t    else return $http\n\t        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n\t        .then(function(response) { return response.data; });\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromProvider\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template by invoking an injectable provider function.\n\t   *\n\t   * @param {Function} provider Function to invoke via `$injector.invoke`\n\t   * @param {Object} params Parameters for the template.\n\t   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n\t   * `{ params: params }`.\n\t   * @return {string|Promise.<string>} The template html as a string, or a promise \n\t   * for that string.\n\t   */\n\t  this.fromProvider = function (provider, params, locals) {\n\t    return $injector.invoke(provider, null, locals || { params: params });\n\t  };\n\t}\n\t\n\tangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\t\n\tvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Matches URLs against patterns and extracts named parameters from the path or the search\n\t * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n\t * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n\t * do not influence whether or not a URL is matched, but their values are passed through into\n\t * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n\t *\n\t * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n\t * syntax, which optionally allows a regular expression for the parameter to be specified:\n\t *\n\t * * `':'` name - colon placeholder\n\t * * `'*'` name - catch-all placeholder\n\t * * `'{' name '}'` - curly placeholder\n\t * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n\t *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n\t *\n\t * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n\t * must be unique within the pattern (across both path and search parameters). For colon\n\t * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n\t * number of characters other than '/'. For catch-all placeholders the path parameter matches\n\t * any number of characters.\n\t *\n\t * Examples:\n\t *\n\t * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n\t *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n\t * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n\t *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n\t * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n\t * * `'/user/{id:[^/]*}'` - Same as the previous example.\n\t * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n\t *   parameter consists of 1 to 8 hex digits.\n\t * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n\t *   path into the parameter 'path'.\n\t * * `'/files/*path'` - ditto.\n\t * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n\t *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n\t *\n\t * @param {string} pattern  The pattern to compile into a matcher.\n\t * @param {Object} config  A configuration object hash:\n\t * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n\t *   an existing UrlMatcher\n\t *\n\t * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n\t * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n\t *\n\t * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n\t *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n\t *   non-null) will start with this prefix.\n\t *\n\t * @property {string} source  The pattern that was passed into the constructor\n\t *\n\t * @property {string} sourcePath  The path portion of the source property\n\t *\n\t * @property {string} sourceSearch  The search portion of the source property\n\t *\n\t * @property {string} regex  The constructed regex that will be used to match against the url when\n\t *   it is time to determine which url will match.\n\t *\n\t * @returns {Object}  New `UrlMatcher` object\n\t */\n\tfunction UrlMatcher(pattern, config, parentMatcher) {\n\t  config = extend({ params: {} }, isObject(config) ? config : {});\n\t\n\t  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n\t  //   '*' name\n\t  //   ':' name\n\t  //   '{' name '}'\n\t  //   '{' name ':' regexp '}'\n\t  // The regular expression is somewhat complicated due to the need to allow curly braces\n\t  // inside the regular expression. The placeholder regexp breaks down as follows:\n\t  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n\t  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n\t  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n\t  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n\t  //    \\\\.                            - a backslash escape\n\t  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n\t  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n\t      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n\t      compiled = '^', last = 0, m,\n\t      segments = this.segments = [],\n\t      parentParams = parentMatcher ? parentMatcher.params : {},\n\t      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n\t      paramNames = [];\n\t\n\t  function addParameter(id, type, config, location) {\n\t    paramNames.push(id);\n\t    if (parentParams[id]) return parentParams[id];\n\t    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t    params[id] = new $$UMFP.Param(id, type, config, location);\n\t    return params[id];\n\t  }\n\t\n\t  function quoteRegExp(string, pattern, squash, optional) {\n\t    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n\t    if (!pattern) return result;\n\t    switch(squash) {\n\t      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n\t      case true:\n\t        result = result.replace(/\\/$/, '');\n\t        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n\t      break;\n\t      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n\t    }\n\t    return result + surroundPattern[0] + pattern + surroundPattern[1];\n\t  }\n\t\n\t  this.source = pattern;\n\t\n\t  // Split into static segments separated by path parameter placeholders.\n\t  // The number of segments is always 1 more than the number of parameters.\n\t  function matchDetails(m, isSearch) {\n\t    var id, regexp, segment, type, cfg, arrayMode;\n\t    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n\t    cfg         = config.params[id];\n\t    segment     = pattern.substring(last, m.index);\n\t    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\t\n\t    if (regexp) {\n\t      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n\t    }\n\t\n\t    return {\n\t      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n\t    };\n\t  }\n\t\n\t  var p, param, segment;\n\t  while ((m = placeholder.exec(pattern))) {\n\t    p = matchDetails(m, false);\n\t    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\t\n\t    param = addParameter(p.id, p.type, p.cfg, \"path\");\n\t    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n\t    segments.push(p.segment);\n\t    last = placeholder.lastIndex;\n\t  }\n\t  segment = pattern.substring(last);\n\t\n\t  // Find any search parameter names and remove them from the last segment\n\t  var i = segment.indexOf('?');\n\t\n\t  if (i >= 0) {\n\t    var search = this.sourceSearch = segment.substring(i);\n\t    segment = segment.substring(0, i);\n\t    this.sourcePath = pattern.substring(0, last + i);\n\t\n\t    if (search.length > 0) {\n\t      last = 0;\n\t      while ((m = searchPlaceholder.exec(search))) {\n\t        p = matchDetails(m, true);\n\t        param = addParameter(p.id, p.type, p.cfg, \"search\");\n\t        last = placeholder.lastIndex;\n\t        // check if ?&\n\t      }\n\t    }\n\t  } else {\n\t    this.sourcePath = pattern;\n\t    this.sourceSearch = '';\n\t  }\n\t\n\t  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n\t  segments.push(segment);\n\t\n\t  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n\t  this.prefix = segments[0];\n\t  this.$$paramNames = paramNames;\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#concat\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Returns a new matcher for a pattern constructed by appending the path part and adding the\n\t * search parameters of the specified pattern to this pattern. The current pattern is not\n\t * modified. This can be understood as creating a pattern for URLs that are relative to (or\n\t * suffixes of) the current pattern.\n\t *\n\t * @example\n\t * The following two matchers are equivalent:\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q').concat('/details?date');\n\t * new UrlMatcher('/user/{id}/details?q&date');\n\t * </pre>\n\t *\n\t * @param {string} pattern  The pattern to append.\n\t * @param {Object} config  An object hash of the configuration for the matcher.\n\t * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n\t */\n\tUrlMatcher.prototype.concat = function (pattern, config) {\n\t  // Because order of search parameters is irrelevant, we can add our own search\n\t  // parameters to the end of the new pattern. Parse the new pattern by itself\n\t  // and then join the bits together, but it's much easier to do this on a string level.\n\t  var defaultConfig = {\n\t    caseInsensitive: $$UMFP.caseInsensitive(),\n\t    strict: $$UMFP.strictMode(),\n\t    squash: $$UMFP.defaultSquashPolicy()\n\t  };\n\t  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n\t};\n\t\n\tUrlMatcher.prototype.toString = function () {\n\t  return this.source;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#exec\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Tests the specified path against this matcher, and returns an object containing the captured\n\t * parameter values, or null if the path does not match. The returned object contains the values\n\t * of any search parameters that are mentioned in the pattern, but their value may be null if\n\t * they are not present in `searchParams`. This means that search parameters are always treated\n\t * as optional.\n\t *\n\t * @example\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n\t *   x: '1', q: 'hello'\n\t * });\n\t * // returns { id: 'bob', q: 'hello', r: null }\n\t * </pre>\n\t *\n\t * @param {string} path  The URL path to match, e.g. `$location.path()`.\n\t * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n\t * @returns {Object}  The captured parameter values.\n\t */\n\tUrlMatcher.prototype.exec = function (path, searchParams) {\n\t  var m = this.regexp.exec(path);\n\t  if (!m) return null;\n\t  searchParams = searchParams || {};\n\t\n\t  var paramNames = this.parameters(), nTotal = paramNames.length,\n\t    nPath = this.segments.length - 1,\n\t    values = {}, i, j, cfg, paramName;\n\t\n\t  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\t\n\t  function decodePathArray(string) {\n\t    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n\t    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\t\n\t    var split = reverseString(string).split(/-(?!\\\\)/);\n\t    var allReversed = map(split, reverseString);\n\t    return map(allReversed, unquoteDashes).reverse();\n\t  }\n\t\n\t  var param, paramVal;\n\t  for (i = 0; i < nPath; i++) {\n\t    paramName = paramNames[i];\n\t    param = this.params[paramName];\n\t    paramVal = m[i+1];\n\t    // if the param value matches a pre-replace pair, replace the value before decoding.\n\t    for (j = 0; j < param.replace.length; j++) {\n\t      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n\t    }\n\t    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n\t    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n\t    values[paramName] = param.value(paramVal);\n\t  }\n\t  for (/**/; i < nTotal; i++) {\n\t    paramName = paramNames[i];\n\t    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n\t    param = this.params[paramName];\n\t    paramVal = searchParams[paramName];\n\t    for (j = 0; j < param.replace.length; j++) {\n\t      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n\t    }\n\t    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n\t    values[paramName] = param.value(paramVal);\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#parameters\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Returns the names of all path and search parameters of this pattern in an unspecified order.\n\t *\n\t * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n\t *    pattern has no parameters, an empty array is returned.\n\t */\n\tUrlMatcher.prototype.parameters = function (param) {\n\t  if (!isDefined(param)) return this.$$paramNames;\n\t  return this.params[param] || null;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#validates\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Checks an object hash of parameters to validate their correctness according to the parameter\n\t * types of this `UrlMatcher`.\n\t *\n\t * @param {Object} params The object hash of parameters to validate.\n\t * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n\t */\n\tUrlMatcher.prototype.validates = function (params) {\n\t  return this.params.$$validates(params);\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#format\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Creates a URL that matches this pattern by substituting the specified values\n\t * for the path and search parameters. Null values for path parameters are\n\t * treated as empty strings.\n\t *\n\t * @example\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n\t * // returns '/user/bob?q=yes'\n\t * </pre>\n\t *\n\t * @param {Object} values  the values to substitute for the parameters in this pattern.\n\t * @returns {string}  the formatted URL (path and optionally search part).\n\t */\n\tUrlMatcher.prototype.format = function (values) {\n\t  values = values || {};\n\t  var segments = this.segments, params = this.parameters(), paramset = this.params;\n\t  if (!this.validates(values)) return null;\n\t\n\t  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\t\n\t  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n\t    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n\t  }\n\t\n\t  for (i = 0; i < nTotal; i++) {\n\t    var isPathParam = i < nPath;\n\t    var name = params[i], param = paramset[name], value = param.value(values[name]);\n\t    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n\t    var squash = isDefaultValue ? param.squash : false;\n\t    var encoded = param.type.encode(value);\n\t\n\t    if (isPathParam) {\n\t      var nextSegment = segments[i + 1];\n\t      var isFinalPathParam = i + 1 === nPath;\n\t\n\t      if (squash === false) {\n\t        if (encoded != null) {\n\t          if (isArray(encoded)) {\n\t            result += map(encoded, encodeDashes).join(\"-\");\n\t          } else {\n\t            result += encodeURIComponent(encoded);\n\t          }\n\t        }\n\t        result += nextSegment;\n\t      } else if (squash === true) {\n\t        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n\t        result += nextSegment.match(capture)[1];\n\t      } else if (isString(squash)) {\n\t        result += squash + nextSegment;\n\t      }\n\t\n\t      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n\t    } else {\n\t      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n\t      if (!isArray(encoded)) encoded = [ encoded ];\n\t      if (encoded.length === 0) continue;\n\t      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n\t      result += (search ? '&' : '?') + (name + '=' + encoded);\n\t      search = true;\n\t    }\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.type:Type\n\t *\n\t * @description\n\t * Implements an interface to define custom parameter types that can be decoded from and encoded to\n\t * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n\t * objects when matching or formatting URLs, or comparing or validating parameter values.\n\t *\n\t * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n\t * information on registering custom types.\n\t *\n\t * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n\t *        properties will override the default methods and/or pattern in `Type`'s public interface.\n\t * @example\n\t * <pre>\n\t * {\n\t *   decode: function(val) { return parseInt(val, 10); },\n\t *   encode: function(val) { return val && val.toString(); },\n\t *   equals: function(a, b) { return this.is(a) && a === b; },\n\t *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n\t *   pattern: /\\d+/\n\t * }\n\t * </pre>\n\t *\n\t * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n\t *           coming from a substring of a URL.\n\t *\n\t * @returns {Object}  Returns a new `Type` object.\n\t */\n\tfunction Type(config) {\n\t  extend(this, config);\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#is\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Detects whether a value is of a particular type. Accepts a native (decoded) value\n\t * and determines whether it matches the current `Type` object.\n\t *\n\t * @param {*} val  The value to check.\n\t * @param {string} key  Optional. If the type check is happening in the context of a specific\n\t *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n\t *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n\t * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n\t */\n\tType.prototype.is = function(val, key) {\n\t  return true;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#encode\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n\t * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n\t * only needs to be a representation of `val` that has been coerced to a string.\n\t *\n\t * @param {*} val  The value to encode.\n\t * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n\t *        meta-programming of `Type` objects.\n\t * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n\t */\n\tType.prototype.encode = function(val, key) {\n\t  return val;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#decode\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Converts a parameter value (from URL string or transition param) to a custom/native value.\n\t *\n\t * @param {string} val  The URL parameter value to decode.\n\t * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n\t *        meta-programming of `Type` objects.\n\t * @returns {*}  Returns a custom representation of the URL parameter value.\n\t */\n\tType.prototype.decode = function(val, key) {\n\t  return val;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#equals\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Determines whether two decoded values are equivalent.\n\t *\n\t * @param {*} a  A value to compare against.\n\t * @param {*} b  A value to compare against.\n\t * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n\t */\n\tType.prototype.equals = function(a, b) {\n\t  return a == b;\n\t};\n\t\n\tType.prototype.$subPattern = function() {\n\t  var sub = this.pattern.toString();\n\t  return sub.substr(1, sub.length - 2);\n\t};\n\t\n\tType.prototype.pattern = /.*/;\n\t\n\tType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\t\n\t/** Given an encoded string, or a decoded object, returns a decoded object */\n\tType.prototype.$normalize = function(val) {\n\t  return this.is(val) ? val : this.decode(val);\n\t};\n\t\n\t/*\n\t * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n\t * e.g.:\n\t * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n\t * - url: \"/path?queryParam=1&queryParam=2\n\t * - $stateParams.queryParam will be [1, 2]\n\t * if `mode` is \"auto\", then\n\t * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n\t * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n\t */\n\tType.prototype.$asArray = function(mode, isSearch) {\n\t  if (!mode) return this;\n\t  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\t\n\t  function ArrayType(type, mode) {\n\t    function bindTo(type, callbackName) {\n\t      return function() {\n\t        return type[callbackName].apply(type, arguments);\n\t      };\n\t    }\n\t\n\t    // Wrap non-array value as array\n\t    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n\t    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n\t    function arrayUnwrap(val) {\n\t      switch(val.length) {\n\t        case 0: return undefined;\n\t        case 1: return mode === \"auto\" ? val[0] : val;\n\t        default: return val;\n\t      }\n\t    }\n\t    function falsey(val) { return !val; }\n\t\n\t    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n\t    function arrayHandler(callback, allTruthyMode) {\n\t      return function handleArray(val) {\n\t        if (isArray(val) && val.length === 0) return val;\n\t        val = arrayWrap(val);\n\t        var result = map(val, callback);\n\t        if (allTruthyMode === true)\n\t          return filter(result, falsey).length === 0;\n\t        return arrayUnwrap(result);\n\t      };\n\t    }\n\t\n\t    // Wraps type (.equals) functions to operate on each value of an array\n\t    function arrayEqualsHandler(callback) {\n\t      return function handleArray(val1, val2) {\n\t        var left = arrayWrap(val1), right = arrayWrap(val2);\n\t        if (left.length !== right.length) return false;\n\t        for (var i = 0; i < left.length; i++) {\n\t          if (!callback(left[i], right[i])) return false;\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    this.encode = arrayHandler(bindTo(type, 'encode'));\n\t    this.decode = arrayHandler(bindTo(type, 'decode'));\n\t    this.is     = arrayHandler(bindTo(type, 'is'), true);\n\t    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n\t    this.pattern = type.pattern;\n\t    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n\t    this.name = type.name;\n\t    this.$arrayMode = mode;\n\t  }\n\t\n\t  return new ArrayType(this, mode);\n\t};\n\t\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$urlMatcherFactory\n\t *\n\t * @description\n\t * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n\t * is also available to providers under the name `$urlMatcherFactoryProvider`.\n\t */\n\tfunction $UrlMatcherFactory() {\n\t  $$UMFP = this;\n\t\n\t  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\t\n\t  // Use tildes to pre-encode slashes.\n\t  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n\t  // and bidirectional encoding/decoding fails.\n\t  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n\t  function valToString(val) { return val != null ? val.toString().replace(/~/g, \"~~\").replace(/\\//g, \"~2F\") : val; }\n\t  function valFromString(val) { return val != null ? val.toString().replace(/~2F/g, \"/\").replace(/~~/g, \"~\") : val; }\n\t\n\t  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n\t    \"string\": {\n\t      encode: valToString,\n\t      decode: valFromString,\n\t      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n\t      // In 0.2.x, string params are optional by default for backwards compat\n\t      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n\t      pattern: /[^/]*/\n\t    },\n\t    \"int\": {\n\t      encode: valToString,\n\t      decode: function(val) { return parseInt(val, 10); },\n\t      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n\t      pattern: /\\d+/\n\t    },\n\t    \"bool\": {\n\t      encode: function(val) { return val ? 1 : 0; },\n\t      decode: function(val) { return parseInt(val, 10) !== 0; },\n\t      is: function(val) { return val === true || val === false; },\n\t      pattern: /0|1/\n\t    },\n\t    \"date\": {\n\t      encode: function (val) {\n\t        if (!this.is(val))\n\t          return undefined;\n\t        return [ val.getFullYear(),\n\t          ('0' + (val.getMonth() + 1)).slice(-2),\n\t          ('0' + val.getDate()).slice(-2)\n\t        ].join(\"-\");\n\t      },\n\t      decode: function (val) {\n\t        if (this.is(val)) return val;\n\t        var match = this.capture.exec(val);\n\t        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n\t      },\n\t      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n\t      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n\t      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n\t      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n\t    },\n\t    \"json\": {\n\t      encode: angular.toJson,\n\t      decode: angular.fromJson,\n\t      is: angular.isObject,\n\t      equals: angular.equals,\n\t      pattern: /[^/]*/\n\t    },\n\t    \"any\": { // does not encode/decode\n\t      encode: angular.identity,\n\t      decode: angular.identity,\n\t      equals: angular.equals,\n\t      pattern: /.*/\n\t    }\n\t  };\n\t\n\t  function getDefaultConfig() {\n\t    return {\n\t      strict: isStrictMode,\n\t      caseInsensitive: isCaseInsensitive\n\t    };\n\t  }\n\t\n\t  function isInjectable(value) {\n\t    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n\t  }\n\t\n\t  /**\n\t   * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t   */\n\t  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n\t    if (!isInjectable(config.value)) return config.value;\n\t    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t    return injector.invoke(config.value);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n\t   *\n\t   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n\t   * @returns {boolean} the current value of caseInsensitive\n\t   */\n\t  this.caseInsensitive = function(value) {\n\t    if (isDefined(value))\n\t      isCaseInsensitive = value;\n\t    return isCaseInsensitive;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#strictMode\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n\t   *\n\t   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n\t   * @returns {boolean} the current value of strictMode\n\t   */\n\t  this.strictMode = function(value) {\n\t    if (isDefined(value))\n\t      isStrictMode = value;\n\t    return isStrictMode;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Sets the default behavior when generating or matching URLs with default parameter values.\n\t   *\n\t   * @param {string} value A string that defines the default parameter URL squashing behavior.\n\t   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n\t   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n\t   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n\t   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n\t   *             the parameter value from the URL and replace it with this string.\n\t   */\n\t  this.defaultSquashPolicy = function(value) {\n\t    if (!isDefined(value)) return defaultSquashPolicy;\n\t    if (value !== true && value !== false && !isString(value))\n\t      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n\t    defaultSquashPolicy = value;\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#compile\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n\t   *\n\t   * @param {string} pattern  The URL pattern.\n\t   * @param {Object} config  The config object hash.\n\t   * @returns {UrlMatcher}  The UrlMatcher.\n\t   */\n\t  this.compile = function (pattern, config) {\n\t    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#isMatcher\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n\t   *\n\t   * @param {Object} object  The object to perform the type check against.\n\t   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n\t   *          implementing all the same methods.\n\t   */\n\t  this.isMatcher = function (o) {\n\t    if (!isObject(o)) return false;\n\t    var result = true;\n\t\n\t    forEach(UrlMatcher.prototype, function(val, name) {\n\t      if (isFunction(val)) {\n\t        result = result && (isDefined(o[name]) && isFunction(o[name]));\n\t      }\n\t    });\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#type\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n\t   * generate URLs with typed parameters.\n\t   *\n\t   * @param {string} name  The type name.\n\t   * @param {Object|Function} definition   The type definition. See\n\t   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n\t   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n\t   *        runtime starts.  The result of this function is merged into the existing `definition`.\n\t   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n\t   *\n\t   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n\t   *\n\t   * @example\n\t   * This is a simple example of a custom type that encodes and decodes items from an\n\t   * array, using the array index as the URL-encoded value:\n\t   *\n\t   * <pre>\n\t   * var list = ['John', 'Paul', 'George', 'Ringo'];\n\t   *\n\t   * $urlMatcherFactoryProvider.type('listItem', {\n\t   *   encode: function(item) {\n\t   *     // Represent the list item in the URL using its corresponding index\n\t   *     return list.indexOf(item);\n\t   *   },\n\t   *   decode: function(item) {\n\t   *     // Look up the list item by index\n\t   *     return list[parseInt(item, 10)];\n\t   *   },\n\t   *   is: function(item) {\n\t   *     // Ensure the item is valid by checking to see that it appears\n\t   *     // in the list\n\t   *     return list.indexOf(item) > -1;\n\t   *   }\n\t   * });\n\t   *\n\t   * $stateProvider.state('list', {\n\t   *   url: \"/list/{item:listItem}\",\n\t   *   controller: function($scope, $stateParams) {\n\t   *     console.log($stateParams.item);\n\t   *   }\n\t   * });\n\t   *\n\t   * // ...\n\t   *\n\t   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n\t   * $state.go('list', { item: \"Ringo\" });\n\t   * </pre>\n\t   *\n\t   * This is a more complex example of a type that relies on dependency injection to\n\t   * interact with services, and uses the parameter name from the URL to infer how to\n\t   * handle encoding and decoding parameter values:\n\t   *\n\t   * <pre>\n\t   * // Defines a custom type that gets a value from a service,\n\t   * // where each service gets different types of values from\n\t   * // a backend API:\n\t   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n\t   *\n\t   *   // Matches up services to URL parameter names\n\t   *   var services = {\n\t   *     user: Users,\n\t   *     post: Posts\n\t   *   };\n\t   *\n\t   *   return {\n\t   *     encode: function(object) {\n\t   *       // Represent the object in the URL using its unique ID\n\t   *       return object.id;\n\t   *     },\n\t   *     decode: function(value, key) {\n\t   *       // Look up the object by ID, using the parameter\n\t   *       // name (key) to call the correct service\n\t   *       return services[key].findById(value);\n\t   *     },\n\t   *     is: function(object, key) {\n\t   *       // Check that object is a valid dbObject\n\t   *       return angular.isObject(object) && object.id && services[key];\n\t   *     }\n\t   *     equals: function(a, b) {\n\t   *       // Check the equality of decoded objects by comparing\n\t   *       // their unique IDs\n\t   *       return a.id === b.id;\n\t   *     }\n\t   *   };\n\t   * });\n\t   *\n\t   * // In a config() block, you can then attach URLs with\n\t   * // type-annotated parameters:\n\t   * $stateProvider.state('users', {\n\t   *   url: \"/users\",\n\t   *   // ...\n\t   * }).state('users.item', {\n\t   *   url: \"/{user:dbObject}\",\n\t   *   controller: function($scope, $stateParams) {\n\t   *     // $stateParams.user will now be an object returned from\n\t   *     // the Users service\n\t   *   },\n\t   *   // ...\n\t   * });\n\t   * </pre>\n\t   */\n\t  this.type = function (name, definition, definitionFn) {\n\t    if (!isDefined(definition)) return $types[name];\n\t    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\t\n\t    $types[name] = new Type(extend({ name: name }, definition));\n\t    if (definitionFn) {\n\t      typeQueue.push({ name: name, def: definitionFn });\n\t      if (!enqueue) flushTypeQueue();\n\t    }\n\t    return this;\n\t  };\n\t\n\t  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n\t  function flushTypeQueue() {\n\t    while(typeQueue.length) {\n\t      var type = typeQueue.shift();\n\t      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n\t      angular.extend($types[type.name], injector.invoke(type.def));\n\t    }\n\t  }\n\t\n\t  // Register default types. Store them in the prototype of $types.\n\t  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n\t  $types = inherit($types, {});\n\t\n\t  /* No need to document $get, since it returns this */\n\t  this.$get = ['$injector', function ($injector) {\n\t    injector = $injector;\n\t    enqueue = false;\n\t    flushTypeQueue();\n\t\n\t    forEach(defaultTypes, function(type, name) {\n\t      if (!$types[name]) $types[name] = new Type(type);\n\t    });\n\t    return this;\n\t  }];\n\t\n\t  this.Param = function Param(id, type, config, location) {\n\t    var self = this;\n\t    config = unwrapShorthand(config);\n\t    type = getType(config, type, location);\n\t    var arrayMode = getArrayMode();\n\t    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n\t    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n\t      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n\t    var isOptional = config.value !== undefined;\n\t    var squash = getSquashPolicy(config, isOptional);\n\t    var replace = getReplace(config, arrayMode, isOptional, squash);\n\t\n\t    function unwrapShorthand(config) {\n\t      var keys = isObject(config) ? objectKeys(config) : [];\n\t      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n\t                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n\t      if (isShorthand) config = { value: config };\n\t      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n\t      return config;\n\t    }\n\t\n\t    function getType(config, urlType, location) {\n\t      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n\t      if (urlType) return urlType;\n\t      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\t\n\t      if (angular.isString(config.type))\n\t        return $types[config.type];\n\t      if (config.type instanceof Type)\n\t        return config.type;\n\t      return new Type(config.type);\n\t    }\n\t\n\t    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n\t    function getArrayMode() {\n\t      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n\t      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n\t      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n\t    }\n\t\n\t    /**\n\t     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n\t     */\n\t    function getSquashPolicy(config, isOptional) {\n\t      var squash = config.squash;\n\t      if (!isOptional || squash === false) return false;\n\t      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n\t      if (squash === true || isString(squash)) return squash;\n\t      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n\t    }\n\t\n\t    function getReplace(config, arrayMode, isOptional, squash) {\n\t      var replace, configuredKeys, defaultPolicy = [\n\t        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n\t        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n\t      ];\n\t      replace = isArray(config.replace) ? config.replace : [];\n\t      if (isString(squash))\n\t        replace.push({ from: squash, to: undefined });\n\t      configuredKeys = map(replace, function(item) { return item.from; } );\n\t      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n\t    }\n\t\n\t    /**\n\t     * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t     */\n\t    function $$getDefaultValue() {\n\t      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t      var defaultValue = injector.invoke(config.$$fn);\n\t      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n\t        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n\t      return defaultValue;\n\t    }\n\t\n\t    /**\n\t     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n\t     * default value, which may be the result of an injectable function.\n\t     */\n\t    function $value(value) {\n\t      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n\t      function $replace(value) {\n\t        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n\t        return replacement.length ? replacement[0] : value;\n\t      }\n\t      value = $replace(value);\n\t      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n\t    }\n\t\n\t    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\t\n\t    extend(this, {\n\t      id: id,\n\t      type: type,\n\t      location: location,\n\t      array: arrayMode,\n\t      squash: squash,\n\t      replace: replace,\n\t      isOptional: isOptional,\n\t      value: $value,\n\t      dynamic: undefined,\n\t      config: config,\n\t      toString: toString\n\t    });\n\t  };\n\t\n\t  function ParamSet(params) {\n\t    extend(this, params || {});\n\t  }\n\t\n\t  ParamSet.prototype = {\n\t    $$new: function() {\n\t      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n\t    },\n\t    $$keys: function () {\n\t      var keys = [], chain = [], parent = this,\n\t        ignore = objectKeys(ParamSet.prototype);\n\t      while (parent) { chain.push(parent); parent = parent.$$parent; }\n\t      chain.reverse();\n\t      forEach(chain, function(paramset) {\n\t        forEach(objectKeys(paramset), function(key) {\n\t            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n\t        });\n\t      });\n\t      return keys;\n\t    },\n\t    $$values: function(paramValues) {\n\t      var values = {}, self = this;\n\t      forEach(self.$$keys(), function(key) {\n\t        values[key] = self[key].value(paramValues && paramValues[key]);\n\t      });\n\t      return values;\n\t    },\n\t    $$equals: function(paramValues1, paramValues2) {\n\t      var equal = true, self = this;\n\t      forEach(self.$$keys(), function(key) {\n\t        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n\t        if (!self[key].type.equals(left, right)) equal = false;\n\t      });\n\t      return equal;\n\t    },\n\t    $$validates: function $$validate(paramValues) {\n\t      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n\t      for (i = 0; i < keys.length; i++) {\n\t        param = this[keys[i]];\n\t        rawVal = paramValues[keys[i]];\n\t        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n\t          break; // There was no parameter value, but the param is optional\n\t        normalized = param.type.$normalize(rawVal);\n\t        if (!param.type.is(normalized))\n\t          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n\t        encoded = param.type.encode(normalized);\n\t        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n\t          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n\t      }\n\t      return true;\n\t    },\n\t    $$parent: undefined\n\t  };\n\t\n\t  this.ParamSet = ParamSet;\n\t}\n\t\n\t// Register as a provider so it's available to other providers\n\tangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\n\tangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.router.$urlRouterProvider\n\t *\n\t * @requires ui.router.util.$urlMatcherFactoryProvider\n\t * @requires $locationProvider\n\t *\n\t * @description\n\t * `$urlRouterProvider` has the responsibility of watching `$location`. \n\t * When `$location` changes it runs through a list of rules one by one until a \n\t * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n\t * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n\t *\n\t * There are several methods on `$urlRouterProvider` that make it useful to use directly\n\t * in your module config.\n\t */\n\t$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\n\tfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n\t  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\t\n\t  // Returns a string that is a prefix of all strings matching the RegExp\n\t  function regExpPrefix(re) {\n\t    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n\t    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n\t  }\n\t\n\t  // Interpolates matched values into a String.replace()-style pattern\n\t  function interpolate(pattern, match) {\n\t    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n\t      return match[what === '$' ? 0 : Number(what)];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#rule\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Defines rules that are used by `$urlRouterProvider` to find matches for\n\t   * specific URLs.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   // Here's an example of how you might allow case insensitive urls\n\t   *   $urlRouterProvider.rule(function ($injector, $location) {\n\t   *     var path = $location.path(),\n\t   *         normalized = path.toLowerCase();\n\t   *\n\t   *     if (path !== normalized) {\n\t   *       return normalized;\n\t   *     }\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {function} rule Handler function that takes `$injector` and `$location`\n\t   * services as arguments. You can use them to return a valid path as a string.\n\t   *\n\t   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t   */\n\t  this.rule = function (rule) {\n\t    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n\t    rules.push(rule);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.router.$urlRouterProvider#otherwise\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Defines a path that is used when an invalid route is requested.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   // if the path doesn't match any of the urls you configured\n\t   *   // otherwise will take care of routing the user to the\n\t   *   // specified url\n\t   *   $urlRouterProvider.otherwise('/index');\n\t   *\n\t   *   // Example of using function rule as param\n\t   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n\t   *     return '/a/valid/url';\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {string|function} rule The url path you want to redirect to or a function \n\t   * rule that returns the url path. The function version is passed two params: \n\t   * `$injector` and `$location` services, and must return a url string.\n\t   *\n\t   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t   */\n\t  this.otherwise = function (rule) {\n\t    if (isString(rule)) {\n\t      var redirect = rule;\n\t      rule = function () { return redirect; };\n\t    }\n\t    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n\t    otherwise = rule;\n\t    return this;\n\t  };\n\t\n\t\n\t  function handleIfMatch($injector, handler, match) {\n\t    if (!match) return false;\n\t    var result = $injector.invoke(handler, handler, { $match: match });\n\t    return isDefined(result) ? result : true;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#when\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Registers a handler for a given url matching. \n\t   * \n\t   * If the handler is a string, it is\n\t   * treated as a redirect, and is interpolated according to the syntax of match\n\t   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\t   *\n\t   * If the handler is a function, it is injectable. It gets invoked if `$location`\n\t   * matches. You have the option of inject the match object as `$match`.\n\t   *\n\t   * The handler can return\n\t   *\n\t   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n\t   *   will continue trying to find another one that matches.\n\t   * - **string** which is treated as a redirect and passed to `$location.url()`\n\t   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n\t   *     if ($state.$current.navigable !== state ||\n\t   *         !equalForKeys($match, $stateParams) {\n\t   *      $state.transitionTo(state, $match, false);\n\t   *     }\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {string|object} what The incoming path that you want to redirect.\n\t   * @param {string|function} handler The path you want to redirect your user to.\n\t   */\n\t  this.when = function (what, handler) {\n\t    var redirect, handlerIsString = isString(handler);\n\t    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\t\n\t    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n\t      throw new Error(\"invalid 'handler' in when()\");\n\t\n\t    var strategies = {\n\t      matcher: function (what, handler) {\n\t        if (handlerIsString) {\n\t          redirect = $urlMatcherFactory.compile(handler);\n\t          handler = ['$match', function ($match) { return redirect.format($match); }];\n\t        }\n\t        return extend(function ($injector, $location) {\n\t          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n\t        }, {\n\t          prefix: isString(what.prefix) ? what.prefix : ''\n\t        });\n\t      },\n\t      regex: function (what, handler) {\n\t        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\t\n\t        if (handlerIsString) {\n\t          redirect = handler;\n\t          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n\t        }\n\t        return extend(function ($injector, $location) {\n\t          return handleIfMatch($injector, handler, what.exec($location.path()));\n\t        }, {\n\t          prefix: regExpPrefix(what)\n\t        });\n\t      }\n\t    };\n\t\n\t    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\t\n\t    for (var n in check) {\n\t      if (check[n]) return this.rule(strategies[n](what, handler));\n\t    }\n\t\n\t    throw new Error(\"invalid 'what' in when()\");\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#deferIntercept\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Disables (or enables) deferring location change interception.\n\t   *\n\t   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n\t   * defer a transition but maintain the current URL), call this method at configuration time.\n\t   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n\t   * `$locationChangeSuccess` event handler.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *\n\t   *   // Prevent $urlRouter from automatically intercepting URL changes;\n\t   *   // this allows you to configure custom behavior in between\n\t   *   // location changes and route synchronization:\n\t   *   $urlRouterProvider.deferIntercept();\n\t   *\n\t   * }).run(function ($rootScope, $urlRouter, UserService) {\n\t   *\n\t   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n\t   *     // UserService is an example service for managing user state\n\t   *     if (UserService.isLoggedIn()) return;\n\t   *\n\t   *     // Prevent $urlRouter's default handler from firing\n\t   *     e.preventDefault();\n\t   *\n\t   *     UserService.handleLogin().then(function() {\n\t   *       // Once the user has logged in, sync the current URL\n\t   *       // to the router:\n\t   *       $urlRouter.sync();\n\t   *     });\n\t   *   });\n\t   *\n\t   *   // Configures $urlRouter's listener *after* your custom listener\n\t   *   $urlRouter.listen();\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n\t            no parameter is equivalent to `true`.\n\t   */\n\t  this.deferIntercept = function (defer) {\n\t    if (defer === undefined) defer = true;\n\t    interceptDeferred = defer;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.router.$urlRouter\n\t   *\n\t   * @requires $location\n\t   * @requires $rootScope\n\t   * @requires $injector\n\t   * @requires $browser\n\t   *\n\t   * @description\n\t   *\n\t   */\n\t  this.$get = $get;\n\t  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n\t  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\t\n\t    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\t\n\t    function appendBasePath(url, isHtml5, absolute) {\n\t      if (baseHref === '/') return url;\n\t      if (isHtml5) return baseHref.slice(0, -1) + url;\n\t      if (absolute) return baseHref.slice(1) + url;\n\t      return url;\n\t    }\n\t\n\t    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n\t    function update(evt) {\n\t      if (evt && evt.defaultPrevented) return;\n\t      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n\t      lastPushedUrl = undefined;\n\t      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n\t      //if (ignoreUpdate) return true;\n\t\n\t      function check(rule) {\n\t        var handled = rule($injector, $location);\n\t\n\t        if (!handled) return false;\n\t        if (isString(handled)) $location.replace().url(handled);\n\t        return true;\n\t      }\n\t      var n = rules.length, i;\n\t\n\t      for (i = 0; i < n; i++) {\n\t        if (check(rules[i])) return;\n\t      }\n\t      // always check otherwise last to allow dynamic updates to the set of rules\n\t      if (otherwise) check(otherwise);\n\t    }\n\t\n\t    function listen() {\n\t      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n\t      return listener;\n\t    }\n\t\n\t    if (!interceptDeferred) listen();\n\t\n\t    return {\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.router.$urlRouter#sync\n\t       * @methodOf ui.router.router.$urlRouter\n\t       *\n\t       * @description\n\t       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n\t       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n\t       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n\t       * with the transition by calling `$urlRouter.sync()`.\n\t       *\n\t       * @example\n\t       * <pre>\n\t       * angular.module('app', ['ui.router'])\n\t       *   .run(function($rootScope, $urlRouter) {\n\t       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n\t       *       // Halt state change from even starting\n\t       *       evt.preventDefault();\n\t       *       // Perform custom logic\n\t       *       var meetsRequirement = ...\n\t       *       // Continue with the update and state transition if logic allows\n\t       *       if (meetsRequirement) $urlRouter.sync();\n\t       *     });\n\t       * });\n\t       * </pre>\n\t       */\n\t      sync: function() {\n\t        update();\n\t      },\n\t\n\t      listen: function() {\n\t        return listen();\n\t      },\n\t\n\t      update: function(read) {\n\t        if (read) {\n\t          location = $location.url();\n\t          return;\n\t        }\n\t        if ($location.url() === location) return;\n\t\n\t        $location.url(location);\n\t        $location.replace();\n\t      },\n\t\n\t      push: function(urlMatcher, params, options) {\n\t         var url = urlMatcher.format(params || {});\n\t\n\t        // Handle the special hash param, if needed\n\t        if (url !== null && params && params['#']) {\n\t            url += '#' + params['#'];\n\t        }\n\t\n\t        $location.url(url);\n\t        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n\t        if (options && options.replace) $location.replace();\n\t      },\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.router.$urlRouter#href\n\t       * @methodOf ui.router.router.$urlRouter\n\t       *\n\t       * @description\n\t       * A URL generation method that returns the compiled URL for a given\n\t       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n\t       *\n\t       * @example\n\t       * <pre>\n\t       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n\t       *   person: \"bob\"\n\t       * });\n\t       * // $bob == \"/about/bob\";\n\t       * </pre>\n\t       *\n\t       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n\t       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n\t       * @param {object=} options Options object. The options are:\n\t       *\n\t       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t       *\n\t       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n\t       */\n\t      href: function(urlMatcher, params, options) {\n\t        if (!urlMatcher.validates(params)) return null;\n\t\n\t        var isHtml5 = $locationProvider.html5Mode();\n\t        if (angular.isObject(isHtml5)) {\n\t          isHtml5 = isHtml5.enabled;\n\t        }\n\t\n\t        isHtml5 = isHtml5 && $sniffer.history;\n\t        \n\t        var url = urlMatcher.format(params);\n\t        options = options || {};\n\t\n\t        if (!isHtml5 && url !== null) {\n\t          url = \"#\" + $locationProvider.hashPrefix() + url;\n\t        }\n\t\n\t        // Handle special hash param, if needed\n\t        if (url !== null && params && params['#']) {\n\t          url += '#' + params['#'];\n\t        }\n\t\n\t        url = appendBasePath(url, isHtml5, options.absolute);\n\t\n\t        if (!options.absolute || !url) {\n\t          return url;\n\t        }\n\t\n\t        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n\t        port = (port === 80 || port === 443 ? '' : ':' + port);\n\t\n\t        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.state.$stateProvider\n\t *\n\t * @requires ui.router.router.$urlRouterProvider\n\t * @requires ui.router.util.$urlMatcherFactoryProvider\n\t *\n\t * @description\n\t * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n\t * on state.\n\t *\n\t * A state corresponds to a \"place\" in the application in terms of the overall UI and\n\t * navigation. A state describes (via the controller / template / view properties) what\n\t * the UI looks like and does at that place.\n\t *\n\t * States often have things in common, and the primary way of factoring out these\n\t * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n\t * nested states.\n\t *\n\t * The `$stateProvider` provides interfaces to declare these states for your app.\n\t */\n\t$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\n\tfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\t\n\t  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\t\n\t  // Builds state properties from definition passed to registerState()\n\t  var stateBuilder = {\n\t\n\t    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n\t    // state.children = [];\n\t    // if (parent) parent.children.push(state);\n\t    parent: function(state) {\n\t      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n\t      // regex matches any valid composite state name\n\t      // would match \"contact.list\" but not \"contacts\"\n\t      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n\t      return compositeName ? findState(compositeName[1]) : root;\n\t    },\n\t\n\t    // inherit 'data' from parent and override by own values (if any)\n\t    data: function(state) {\n\t      if (state.parent && state.parent.data) {\n\t        state.data = state.self.data = inherit(state.parent.data, state.data);\n\t      }\n\t      return state.data;\n\t    },\n\t\n\t    // Build a URLMatcher if necessary, either via a relative or absolute URL\n\t    url: function(state) {\n\t      var url = state.url, config = { params: state.params || {} };\n\t\n\t      if (isString(url)) {\n\t        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n\t        return (state.parent.navigable || root).url.concat(url, config);\n\t      }\n\t\n\t      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n\t      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n\t    },\n\t\n\t    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n\t    navigable: function(state) {\n\t      return state.url ? state : (state.parent ? state.parent.navigable : null);\n\t    },\n\t\n\t    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n\t    ownParams: function(state) {\n\t      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n\t      forEach(state.params || {}, function(config, id) {\n\t        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n\t      });\n\t      return params;\n\t    },\n\t\n\t    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n\t    params: function(state) {\n\t      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n\t      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n\t    },\n\t\n\t    // If there is no explicit multi-view configuration, make one up so we don't have\n\t    // to handle both cases in the view directive later. Note that having an explicit\n\t    // 'views' property will mean the default unnamed view properties are ignored. This\n\t    // is also a good time to resolve view names to absolute names, so everything is a\n\t    // straight lookup at link time.\n\t    views: function(state) {\n\t      var views = {};\n\t\n\t      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n\t        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n\t        views[name] = view;\n\t      });\n\t      return views;\n\t    },\n\t\n\t    // Keep a full path from the root down to this state as this is needed for state activation.\n\t    path: function(state) {\n\t      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n\t    },\n\t\n\t    // Speed up $state.contains() as it's used a lot\n\t    includes: function(state) {\n\t      var includes = state.parent ? extend({}, state.parent.includes) : {};\n\t      includes[state.name] = true;\n\t      return includes;\n\t    },\n\t\n\t    $delegates: {}\n\t  };\n\t\n\t  function isRelative(stateName) {\n\t    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n\t  }\n\t\n\t  function findState(stateOrName, base) {\n\t    if (!stateOrName) return undefined;\n\t\n\t    var isStr = isString(stateOrName),\n\t        name  = isStr ? stateOrName : stateOrName.name,\n\t        path  = isRelative(name);\n\t\n\t    if (path) {\n\t      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n\t      base = findState(base);\n\t      \n\t      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\t\n\t      for (; i < pathLength; i++) {\n\t        if (rel[i] === \"\" && i === 0) {\n\t          current = base;\n\t          continue;\n\t        }\n\t        if (rel[i] === \"^\") {\n\t          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n\t          current = current.parent;\n\t          continue;\n\t        }\n\t        break;\n\t      }\n\t      rel = rel.slice(i).join(\".\");\n\t      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n\t    }\n\t    var state = states[name];\n\t\n\t    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n\t      return state;\n\t    }\n\t    return undefined;\n\t  }\n\t\n\t  function queueState(parentName, state) {\n\t    if (!queue[parentName]) {\n\t      queue[parentName] = [];\n\t    }\n\t    queue[parentName].push(state);\n\t  }\n\t\n\t  function flushQueuedChildren(parentName) {\n\t    var queued = queue[parentName] || [];\n\t    while(queued.length) {\n\t      registerState(queued.shift());\n\t    }\n\t  }\n\t\n\t  function registerState(state) {\n\t    // Wrap a new object around the state so we can store our private details easily.\n\t    state = inherit(state, {\n\t      self: state,\n\t      resolve: state.resolve || {},\n\t      toString: function() { return this.name; }\n\t    });\n\t\n\t    var name = state.name;\n\t    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n\t    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\t\n\t    // Get parent name\n\t    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n\t        : (isString(state.parent)) ? state.parent\n\t        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n\t        : '';\n\t\n\t    // If parent is not registered yet, add state to queue and register later\n\t    if (parentName && !states[parentName]) {\n\t      return queueState(parentName, state.self);\n\t    }\n\t\n\t    for (var key in stateBuilder) {\n\t      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n\t    }\n\t    states[name] = state;\n\t\n\t    // Register the state in the global state list and with $urlRouter if necessary.\n\t    if (!state[abstractKey] && state.url) {\n\t      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n\t        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n\t          $state.transitionTo(state, $match, { inherit: true, location: false });\n\t        }\n\t      }]);\n\t    }\n\t\n\t    // Register any queued children\n\t    flushQueuedChildren(name);\n\t\n\t    return state;\n\t  }\n\t\n\t  // Checks text to see if it looks like a glob.\n\t  function isGlob (text) {\n\t    return text.indexOf('*') > -1;\n\t  }\n\t\n\t  // Returns true if glob matches current $state name.\n\t  function doesStateMatchGlob (glob) {\n\t    var globSegments = glob.split('.'),\n\t        segments = $state.$current.name.split('.');\n\t\n\t    //match single stars\n\t    for (var i = 0, l = globSegments.length; i < l; i++) {\n\t      if (globSegments[i] === '*') {\n\t        segments[i] = '*';\n\t      }\n\t    }\n\t\n\t    //match greedy starts\n\t    if (globSegments[0] === '**') {\n\t       segments = segments.slice(indexOf(segments, globSegments[1]));\n\t       segments.unshift('**');\n\t    }\n\t    //match greedy ends\n\t    if (globSegments[globSegments.length - 1] === '**') {\n\t       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n\t       segments.push('**');\n\t    }\n\t\n\t    if (globSegments.length != segments.length) {\n\t      return false;\n\t    }\n\t\n\t    return segments.join('') === globSegments.join('');\n\t  }\n\t\n\t\n\t  // Implicit root state that is always active\n\t  root = registerState({\n\t    name: '',\n\t    url: '^',\n\t    views: null,\n\t    'abstract': true\n\t  });\n\t  root.navigable = null;\n\t\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$stateProvider#decorator\n\t   * @methodOf ui.router.state.$stateProvider\n\t   *\n\t   * @description\n\t   * Allows you to extend (carefully) or override (at your own peril) the \n\t   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n\t   * to add custom functionality to ui-router, for example inferring templateUrl \n\t   * based on the state name.\n\t   *\n\t   * When passing only a name, it returns the current (original or decorated) builder\n\t   * function that matches `name`.\n\t   *\n\t   * The builder functions that can be decorated are listed below. Though not all\n\t   * necessarily have a good use case for decoration, that is up to you to decide.\n\t   *\n\t   * In addition, users can attach custom decorators, which will generate new \n\t   * properties within the state's internal definition. There is currently no clear \n\t   * use-case for this beyond accessing internal states (i.e. $state.$current), \n\t   * however, expect this to become increasingly relevant as we introduce additional \n\t   * meta-programming features.\n\t   *\n\t   * **Warning**: Decorators should not be interdependent because the order of \n\t   * execution of the builder functions in non-deterministic. Builder functions \n\t   * should only be dependent on the state definition object and super function.\n\t   *\n\t   *\n\t   * Existing builder functions and current return values:\n\t   *\n\t   * - **parent** `{object}` - returns the parent state object.\n\t   * - **data** `{object}` - returns state data, including any inherited data that is not\n\t   *   overridden by own values (if any).\n\t   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n\t   *   or `null`.\n\t   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n\t   *   navigable).\n\t   * - **params** `{object}` - returns an array of state params that are ensured to \n\t   *   be a super-set of parent's params.\n\t   * - **views** `{object}` - returns a views object where each key is an absolute view \n\t   *   name (i.e. \"viewName@stateName\") and each value is the config object \n\t   *   (template, controller) for the view. Even when you don't use the views object \n\t   *   explicitly on a state config, one is still created for you internally.\n\t   *   So by decorating this builder function you have access to decorating template \n\t   *   and controller properties.\n\t   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n\t   *   not including any params defined by ancestor states.\n\t   * - **path** `{string}` - returns the full path from the root down to this state. \n\t   *   Needed for state activation.\n\t   * - **includes** `{object}` - returns an object that includes every state that \n\t   *   would pass a `$state.includes()` test.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * // Override the internal 'views' builder with a function that takes the state\n\t   * // definition, and a reference to the internal function being overridden:\n\t   * $stateProvider.decorator('views', function (state, parent) {\n\t   *   var result = {},\n\t   *       views = parent(state);\n\t   *\n\t   *   angular.forEach(views, function (config, name) {\n\t   *     var autoName = (state.name + '.' + name).replace('.', '/');\n\t   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n\t   *     result[name] = config;\n\t   *   });\n\t   *   return result;\n\t   * });\n\t   *\n\t   * $stateProvider.state('home', {\n\t   *   views: {\n\t   *     'contact.list': { controller: 'ListController' },\n\t   *     'contact.item': { controller: 'ItemController' }\n\t   *   }\n\t   * });\n\t   *\n\t   * // ...\n\t   *\n\t   * $state.go('home');\n\t   * // Auto-populates list and item views with /partials/home/contact/list.html,\n\t   * // and /partials/home/contact/item.html, respectively.\n\t   * </pre>\n\t   *\n\t   * @param {string} name The name of the builder function to decorate. \n\t   * @param {object} func A function that is responsible for decorating the original \n\t   * builder function. The function receives two parameters:\n\t   *\n\t   *   - `{object}` - state - The state config object.\n\t   *   - `{object}` - super - The original builder function.\n\t   *\n\t   * @return {object} $stateProvider - $stateProvider instance\n\t   */\n\t  this.decorator = decorator;\n\t  function decorator(name, func) {\n\t    /*jshint validthis: true */\n\t    if (isString(name) && !isDefined(func)) {\n\t      return stateBuilder[name];\n\t    }\n\t    if (!isFunction(func) || !isString(name)) {\n\t      return this;\n\t    }\n\t    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n\t      stateBuilder.$delegates[name] = stateBuilder[name];\n\t    }\n\t    stateBuilder[name] = func;\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$stateProvider#state\n\t   * @methodOf ui.router.state.$stateProvider\n\t   *\n\t   * @description\n\t   * Registers a state configuration under a given state name. The stateConfig object\n\t   * has the following acceptable properties.\n\t   *\n\t   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n\t   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n\t   * @param {object} stateConfig State configuration object.\n\t   * @param {string|function=} stateConfig.template\n\t   * <a id='template'></a>\n\t   *   html template as a string or a function that returns\n\t   *   an html template as a string which should be used by the uiView directives. This property \n\t   *   takes precedence over templateUrl.\n\t   *   \n\t   *   If `template` is a function, it will be called with the following parameters:\n\t   *\n\t   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n\t   *     applying the current state\n\t   *\n\t   * <pre>template:\n\t   *   \"<h1>inline template definition</h1>\" +\n\t   *   \"<div ui-view></div>\"</pre>\n\t   * <pre>template: function(params) {\n\t   *       return \"<h1>generated template</h1>\"; }</pre>\n\t   * </div>\n\t   *\n\t   * @param {string|function=} stateConfig.templateUrl\n\t   * <a id='templateUrl'></a>\n\t   *\n\t   *   path or function that returns a path to an html\n\t   *   template that should be used by uiView.\n\t   *   \n\t   *   If `templateUrl` is a function, it will be called with the following parameters:\n\t   *\n\t   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n\t   *     applying the current state\n\t   *\n\t   * <pre>templateUrl: \"home.html\"</pre>\n\t   * <pre>templateUrl: function(params) {\n\t   *     return myTemplates[params.pageId]; }</pre>\n\t   *\n\t   * @param {function=} stateConfig.templateProvider\n\t   * <a id='templateProvider'></a>\n\t   *    Provider function that returns HTML content string.\n\t   * <pre> templateProvider:\n\t   *       function(MyTemplateService, params) {\n\t   *         return MyTemplateService.getTemplate(params.pageId);\n\t   *       }</pre>\n\t   *\n\t   * @param {string|function=} stateConfig.controller\n\t   * <a id='controller'></a>\n\t   *\n\t   *  Controller fn that should be associated with newly\n\t   *   related scope or the name of a registered controller if passed as a string.\n\t   *   Optionally, the ControllerAs may be declared here.\n\t   * <pre>controller: \"MyRegisteredController\"</pre>\n\t   * <pre>controller:\n\t   *     \"MyRegisteredController as fooCtrl\"}</pre>\n\t   * <pre>controller: function($scope, MyService) {\n\t   *     $scope.data = MyService.getData(); }</pre>\n\t   *\n\t   * @param {function=} stateConfig.controllerProvider\n\t   * <a id='controllerProvider'></a>\n\t   *\n\t   * Injectable provider function that returns the actual controller or string.\n\t   * <pre>controllerProvider:\n\t   *   function(MyResolveData) {\n\t   *     if (MyResolveData.foo)\n\t   *       return \"FooCtrl\"\n\t   *     else if (MyResolveData.bar)\n\t   *       return \"BarCtrl\";\n\t   *     else return function($scope) {\n\t   *       $scope.baz = \"Qux\";\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * @param {string=} stateConfig.controllerAs\n\t   * <a id='controllerAs'></a>\n\t   * \n\t   * A controller alias name. If present the controller will be\n\t   *   published to scope under the controllerAs name.\n\t   * <pre>controllerAs: \"myCtrl\"</pre>\n\t   *\n\t   * @param {string|object=} stateConfig.parent\n\t   * <a id='parent'></a>\n\t   * Optionally specifies the parent state of this state.\n\t   *\n\t   * <pre>parent: 'parentState'</pre>\n\t   * <pre>parent: parentState // JS variable</pre>\n\t   *\n\t   * @param {object=} stateConfig.resolve\n\t   * <a id='resolve'></a>\n\t   *\n\t   * An optional map&lt;string, function&gt; of dependencies which\n\t   *   should be injected into the controller. If any of these dependencies are promises, \n\t   *   the router will wait for them all to be resolved before the controller is instantiated.\n\t   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n\t   *   and the values of the resolved promises are injected into any controllers that reference them.\n\t   *   If any  of the promises are rejected the $stateChangeError event is fired.\n\t   *\n\t   *   The map object is:\n\t   *   \n\t   *   - key - {string}: name of dependency to be injected into controller\n\t   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n\t   *     it is injected and return value it treated as dependency. If result is a promise, it is \n\t   *     resolved before its value is injected into controller.\n\t   *\n\t   * <pre>resolve: {\n\t   *     myResolve1:\n\t   *       function($http, $stateParams) {\n\t   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n\t   *       }\n\t   *     }</pre>\n\t   *\n\t   * @param {string=} stateConfig.url\n\t   * <a id='url'></a>\n\t   *\n\t   *   A url fragment with optional parameters. When a state is navigated or\n\t   *   transitioned to, the `$stateParams` service will be populated with any \n\t   *   parameters that were passed.\n\t   *\n\t   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n\t   *   more details on acceptable patterns )\n\t   *\n\t   * examples:\n\t   * <pre>url: \"/home\"\n\t   * url: \"/users/:userid\"\n\t   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n\t   * url: \"/books/{categoryid:int}\"\n\t   * url: \"/books/{publishername:string}/{categoryid:int}\"\n\t   * url: \"/messages?before&after\"\n\t   * url: \"/messages?{before:date}&{after:date}\"\n\t   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n\t   * </pre>\n\t   *\n\t   * @param {object=} stateConfig.views\n\t   * <a id='views'></a>\n\t   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n\t   * manually/explicitly.\n\t   *\n\t   * Examples:\n\t   *\n\t   * Targets three named `ui-view`s in the parent state's template\n\t   * <pre>views: {\n\t   *     header: {\n\t   *       controller: \"headerCtrl\",\n\t   *       templateUrl: \"header.html\"\n\t   *     }, body: {\n\t   *       controller: \"bodyCtrl\",\n\t   *       templateUrl: \"body.html\"\n\t   *     }, footer: {\n\t   *       controller: \"footCtrl\",\n\t   *       templateUrl: \"footer.html\"\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n\t   * <pre>views: {\n\t   *     'header@top': {\n\t   *       controller: \"msgHeaderCtrl\",\n\t   *       templateUrl: \"msgHeader.html\"\n\t   *     }, 'body': {\n\t   *       controller: \"messagesCtrl\",\n\t   *       templateUrl: \"messages.html\"\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * @param {boolean=} [stateConfig.abstract=false]\n\t   * <a id='abstract'></a>\n\t   * An abstract state will never be directly activated,\n\t   *   but can provide inherited properties to its common children states.\n\t   * <pre>abstract: true</pre>\n\t   *\n\t   * @param {function=} stateConfig.onEnter\n\t   * <a id='onEnter'></a>\n\t   *\n\t   * Callback function for when a state is entered. Good way\n\t   *   to trigger an action or dispatch an event, such as opening a dialog.\n\t   * If minifying your scripts, make sure to explicitly annotate this function,\n\t   * because it won't be automatically annotated by your build tools.\n\t   *\n\t   * <pre>onEnter: function(MyService, $stateParams) {\n\t   *     MyService.foo($stateParams.myParam);\n\t   * }</pre>\n\t   *\n\t   * @param {function=} stateConfig.onExit\n\t   * <a id='onExit'></a>\n\t   *\n\t   * Callback function for when a state is exited. Good way to\n\t   *   trigger an action or dispatch an event, such as opening a dialog.\n\t   * If minifying your scripts, make sure to explicitly annotate this function,\n\t   * because it won't be automatically annotated by your build tools.\n\t   *\n\t   * <pre>onExit: function(MyService, $stateParams) {\n\t   *     MyService.cleanup($stateParams.myParam);\n\t   * }</pre>\n\t   *\n\t   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n\t   * <a id='reloadOnSearch'></a>\n\t   *\n\t   * If `false`, will not retrigger the same state\n\t   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n\t   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n\t   * <pre>reloadOnSearch: false</pre>\n\t   *\n\t   * @param {object=} stateConfig.data\n\t   * <a id='data'></a>\n\t   *\n\t   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n\t   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n\t   *   the entire subtree via prototypal inheritance.\n\t   *\n\t   * <pre>data: {\n\t   *     requiredRole: 'foo'\n\t   * } </pre>\n\t   *\n\t   * @param {object=} stateConfig.params\n\t   * <a id='params'></a>\n\t   *\n\t   * A map which optionally configures parameters declared in the `url`, or\n\t   *   defines additional non-url parameters.  For each parameter being\n\t   *   configured, add a configuration object keyed to the name of the parameter.\n\t   *\n\t   *   Each parameter configuration object may contain the following properties:\n\t   *\n\t   *   - ** value ** - {object|function=}: specifies the default value for this\n\t   *     parameter.  This implicitly sets this parameter as optional.\n\t   *\n\t   *     When UI-Router routes to a state and no value is\n\t   *     specified for this parameter in the URL or transition, the\n\t   *     default value will be used instead.  If `value` is a function,\n\t   *     it will be injected and invoked, and the return value used.\n\t   *\n\t   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n\t   *     is treated as \"the default value is `null`\".\n\t   *\n\t   *     *Shorthand*: If you only need to configure the default value of the\n\t   *     parameter, you may use a shorthand syntax.   In the **`params`**\n\t   *     map, instead mapping the param name to a full parameter configuration\n\t   *     object, simply set map it to the default parameter value, e.g.:\n\t   *\n\t   * <pre>// define a parameter's default value\n\t   * params: {\n\t   *     param1: { value: \"defaultValue\" }\n\t   * }\n\t   * // shorthand default values\n\t   * params: {\n\t   *     param1: \"defaultValue\",\n\t   *     param2: \"param2Default\"\n\t   * }</pre>\n\t   *\n\t   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n\t   *     treated as an array of values.  If you specified a Type, the value will be\n\t   *     treated as an array of the specified Type.  Note: query parameter values\n\t   *     default to a special `\"auto\"` mode.\n\t   *\n\t   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n\t   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n\t   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n\t   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n\t   *     value (e.g.: `{ foo: '1' }`).\n\t   *\n\t   * <pre>params: {\n\t   *     param1: { array: true }\n\t   * }</pre>\n\t   *\n\t   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n\t   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n\t   *     configured default squash policy.\n\t   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n\t   *\n\t   *   There are three squash settings:\n\t   *\n\t   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n\t   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n\t   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n\t   *       This can allow for cleaner looking URLs.\n\t   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n\t   *\n\t   * <pre>params: {\n\t   *     param1: {\n\t   *       value: \"defaultId\",\n\t   *       squash: true\n\t   * } }\n\t   * // squash \"defaultValue\" to \"~\"\n\t   * params: {\n\t   *     param1: {\n\t   *       value: \"defaultValue\",\n\t   *       squash: \"~\"\n\t   * } }\n\t   * </pre>\n\t   *\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * // Some state name examples\n\t   *\n\t   * // stateName can be a single top-level name (must be unique).\n\t   * $stateProvider.state(\"home\", {});\n\t   *\n\t   * // Or it can be a nested state name. This state is a child of the\n\t   * // above \"home\" state.\n\t   * $stateProvider.state(\"home.newest\", {});\n\t   *\n\t   * // Nest states as deeply as needed.\n\t   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n\t   *\n\t   * // state() returns $stateProvider, so you can chain state declarations.\n\t   * $stateProvider\n\t   *   .state(\"home\", {})\n\t   *   .state(\"about\", {})\n\t   *   .state(\"contacts\", {});\n\t   * </pre>\n\t   *\n\t   */\n\t  this.state = state;\n\t  function state(name, definition) {\n\t    /*jshint validthis: true */\n\t    if (isObject(name)) definition = name;\n\t    else definition.name = name;\n\t    registerState(definition);\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$state\n\t   *\n\t   * @requires $rootScope\n\t   * @requires $q\n\t   * @requires ui.router.state.$view\n\t   * @requires $injector\n\t   * @requires ui.router.util.$resolve\n\t   * @requires ui.router.state.$stateParams\n\t   * @requires ui.router.router.$urlRouter\n\t   *\n\t   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n\t   * you'd like to test against the current active state.\n\t   * @property {object} current A reference to the state's config object. However \n\t   * you passed it in. Useful for accessing custom data.\n\t   * @property {object} transition Currently pending transition. A promise that'll \n\t   * resolve or reject.\n\t   *\n\t   * @description\n\t   * `$state` service is responsible for representing states as well as transitioning\n\t   * between them. It also provides interfaces to ask for current state or even states\n\t   * you're coming from.\n\t   */\n\t  this.$get = $get;\n\t  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n\t  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\t\n\t    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\n\t    var TransitionPrevented = $q.reject(new Error('transition prevented'));\n\t    var TransitionAborted = $q.reject(new Error('transition aborted'));\n\t    var TransitionFailed = $q.reject(new Error('transition failed'));\n\t\n\t    // Handles the case where a state which is the target of a transition is not found, and the user\n\t    // can optionally retry or defer the transition\n\t    function handleRedirect(redirect, state, params, options) {\n\t      /**\n\t       * @ngdoc event\n\t       * @name ui.router.state.$state#$stateNotFound\n\t       * @eventOf ui.router.state.$state\n\t       * @eventType broadcast on root scope\n\t       * @description\n\t       * Fired when a requested state **cannot be found** using the provided state name during transition.\n\t       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n\t       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n\t       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n\t       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n\t       *\n\t       * @param {Object} event Event object.\n\t       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n\t       * @param {State} fromState Current state object.\n\t       * @param {Object} fromParams Current state params.\n\t       *\n\t       * @example\n\t       *\n\t       * <pre>\n\t       * // somewhere, assume lazy.state has not been defined\n\t       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n\t       *\n\t       * // somewhere else\n\t       * $scope.$on('$stateNotFound',\n\t       * function(event, unfoundState, fromState, fromParams){\n\t       *     console.log(unfoundState.to); // \"lazy.state\"\n\t       *     console.log(unfoundState.toParams); // {a:1, b:2}\n\t       *     console.log(unfoundState.options); // {inherit:false} + default options\n\t       * })\n\t       * </pre>\n\t       */\n\t      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\t\n\t      if (evt.defaultPrevented) {\n\t        $urlRouter.update();\n\t        return TransitionAborted;\n\t      }\n\t\n\t      if (!evt.retry) {\n\t        return null;\n\t      }\n\t\n\t      // Allow the handler to return a promise to defer state lookup retry\n\t      if (options.$retry) {\n\t        $urlRouter.update();\n\t        return TransitionFailed;\n\t      }\n\t      var retryTransition = $state.transition = $q.when(evt.retry);\n\t\n\t      retryTransition.then(function() {\n\t        if (retryTransition !== $state.transition) return TransitionSuperseded;\n\t        redirect.options.$retry = true;\n\t        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n\t      }, function() {\n\t        return TransitionAborted;\n\t      });\n\t      $urlRouter.update();\n\t\n\t      return retryTransition;\n\t    }\n\t\n\t    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\t\n\t    $state = {\n\t      params: {},\n\t      current: root.self,\n\t      $current: root,\n\t      transition: null\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#reload\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A method that force reloads the current state. All resolves are re-resolved,\n\t     * controllers reinstantiated, and events re-fired.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     $state.reload();\n\t     *   }\n\t     * });\n\t     * </pre>\n\t     *\n\t     * `reload()` is just an alias for:\n\t     * <pre>\n\t     * $state.transitionTo($state.current, $stateParams, { \n\t     *   reload: true, inherit: false, notify: true\n\t     * });\n\t     * </pre>\n\t     *\n\t     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n\t     * @example\n\t     * <pre>\n\t     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n\t     * //and current state is 'contacts.detail.item'\n\t     * var app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     //will reload 'contact.detail' and 'contact.detail.item' states\n\t     *     $state.reload('contact.detail');\n\t     *   }\n\t     * });\n\t     * </pre>\n\t     *\n\t     * `reload()` is just an alias for:\n\t     * <pre>\n\t     * $state.transitionTo($state.current, $stateParams, { \n\t     *   reload: true, inherit: false, notify: true\n\t     * });\n\t     * </pre>\n\t\n\t     * @returns {promise} A promise representing the state of the new transition. See\n\t     * {@link ui.router.state.$state#methods_go $state.go}.\n\t     */\n\t    $state.reload = function reload(state) {\n\t      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#go\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Convenience method for transitioning to a new state. `$state.go` calls \n\t     * `$state.transitionTo` internally but automatically sets options to \n\t     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n\t     * This allows you to easily use an absolute or relative to path and specify \n\t     * only the parameters you'd like to update (while letting unspecified parameters \n\t     * inherit from the currently active ancestor states).\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.go('contact.detail');\n\t     *   };\n\t     * });\n\t     * </pre>\n\t     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n\t     *\n\t     * @param {string} to Absolute state name or relative state path. Some examples:\n\t     *\n\t     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n\t     * - `$state.go('^')` - will go to a parent state\n\t     * - `$state.go('^.sibling')` - will go to a sibling state\n\t     * - `$state.go('.child.grandchild')` - will go to grandchild state\n\t     *\n\t     * @param {object=} params A map of the parameters that will be sent to the state, \n\t     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n\t     * defined parameters. Only parameters specified in the state definition can be overridden, new \n\t     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n\t     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n\t     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n\t     * will get you all current parameters, etc.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n\t     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n\t     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n\t     *    have changed.  It will reload the resolves and views of the current state and parent states.\n\t     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n\t     *    the transition reloads the resolves and views for that matched state, and all its children states.\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition.\n\t     *\n\t     * Possible success values:\n\t     *\n\t     * - $state.current\n\t     *\n\t     * <br/>Possible rejection values:\n\t     *\n\t     * - 'transition superseded' - when a newer transition has been started after this one\n\t     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n\t     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n\t     *   when a `$stateNotFound` `event.retry` promise errors.\n\t     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n\t     * - *resolve error* - when an error has occurred with a `resolve`\n\t     *\n\t     */\n\t    $state.go = function go(to, params, options) {\n\t      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#transitionTo\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n\t     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.transitionTo('contact.detail');\n\t     *   };\n\t     * });\n\t     * </pre>\n\t     *\n\t     * @param {string} to State name.\n\t     * @param {object=} toParams A map of the parameters that will be sent to the state,\n\t     * will populate $stateParams.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n\t     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n\t     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n\t     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n\t     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n\t     *    use this when you want to force a reload when *everything* is the same, including search params.\n\t     *    if String, then will reload the state with the name given in reload, and any children.\n\t     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition. See\n\t     * {@link ui.router.state.$state#methods_go $state.go}.\n\t     */\n\t    $state.transitionTo = function transitionTo(to, toParams, options) {\n\t      toParams = toParams || {};\n\t      options = extend({\n\t        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n\t      }, options || {});\n\t\n\t      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n\t      var evt, toState = findState(to, options.relative);\n\t\n\t      // Store the hash param for later (since it will be stripped out by various methods)\n\t      var hash = toParams['#'];\n\t\n\t      if (!isDefined(toState)) {\n\t        var redirect = { to: to, toParams: toParams, options: options };\n\t        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\t\n\t        if (redirectResult) {\n\t          return redirectResult;\n\t        }\n\t\n\t        // Always retry once if the $stateNotFound was not prevented\n\t        // (handles either redirect changed or state lazy-definition)\n\t        to = redirect.to;\n\t        toParams = redirect.toParams;\n\t        options = redirect.options;\n\t        toState = findState(to, options.relative);\n\t\n\t        if (!isDefined(toState)) {\n\t          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n\t          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n\t        }\n\t      }\n\t      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n\t      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n\t      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\t\n\t      toParams = toState.params.$$values(toParams);\n\t      to = toState;\n\t\n\t      var toPath = to.path;\n\t\n\t      // Starting from the root of the path, keep all levels that haven't changed\n\t      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\t\n\t      if (!options.reload) {\n\t        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n\t          locals = toLocals[keep] = state.locals;\n\t          keep++;\n\t          state = toPath[keep];\n\t        }\n\t      } else if (isString(options.reload) || isObject(options.reload)) {\n\t        if (isObject(options.reload) && !options.reload.name) {\n\t          throw new Error('Invalid reload state object');\n\t        }\n\t        \n\t        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n\t        if (options.reload && !reloadState) {\n\t          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n\t        }\n\t\n\t        while (state && state === fromPath[keep] && state !== reloadState) {\n\t          locals = toLocals[keep] = state.locals;\n\t          keep++;\n\t          state = toPath[keep];\n\t        }\n\t      }\n\t\n\t      // If we're going to the same state and all locals are kept, we've got nothing to do.\n\t      // But clear 'transition', as we still want to cancel any other pending transitions.\n\t      // TODO: We may not want to bump 'transition' if we're called from a location change\n\t      // that we've initiated ourselves, because we might accidentally abort a legitimate\n\t      // transition initiated from code?\n\t      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n\t        if (hash) toParams['#'] = hash;\n\t        $state.params = toParams;\n\t        copy($state.params, $stateParams);\n\t        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n\t        if (options.location && to.navigable && to.navigable.url) {\n\t          $urlRouter.push(to.navigable.url, toParams, {\n\t            $$avoidResync: true, replace: options.location === 'replace'\n\t          });\n\t          $urlRouter.update(true);\n\t        }\n\t        $state.transition = null;\n\t        return $q.when($state.current);\n\t      }\n\t\n\t      // Filter parameters before we pass them to event handlers etc.\n\t      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\t      \n\t      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n\t      if (hash) toParams['#'] = hash;\n\t      \n\t      // Broadcast start event and cancel the transition if requested\n\t      if (options.notify) {\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeStart\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n\t         * to prevent the transition from happening and then the transition promise will be\n\t         * rejected with a `'transition prevented'` value.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         *\n\t         * @example\n\t         *\n\t         * <pre>\n\t         * $rootScope.$on('$stateChangeStart',\n\t         * function(event, toState, toParams, fromState, fromParams){\n\t         *     event.preventDefault();\n\t         *     // transitionTo() promise will be rejected with\n\t         *     // a 'transition prevented' error\n\t         * })\n\t         * </pre>\n\t         */\n\t        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n\t          if ($state.transition == null) $urlRouter.update();\n\t          return TransitionPrevented;\n\t        }\n\t      }\n\t\n\t      // Resolve locals for the remaining states, but don't update any global state just\n\t      // yet -- if anything fails to resolve the current state needs to remain untouched.\n\t      // We also set up an inheritance chain for the locals here. This allows the view directive\n\t      // to quickly look up the correct definition for each view in the current state. Even\n\t      // though we create the locals object itself outside resolveState(), it is initially\n\t      // empty and gets filled asynchronously. We need to keep track of the promise for the\n\t      // (fully resolved) current locals, and pass this down the chain.\n\t      var resolved = $q.when(locals);\n\t\n\t      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n\t        locals = toLocals[l] = inherit(locals);\n\t        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n\t      }\n\t\n\t      // Once everything is resolved, we are ready to perform the actual transition\n\t      // and return a promise for the new state. We also keep track of what the\n\t      // current promise is, so that we can detect overlapping transitions and\n\t      // keep only the outcome of the last transition.\n\t      var transition = $state.transition = resolved.then(function () {\n\t        var l, entering, exiting;\n\t\n\t        if ($state.transition !== transition) return TransitionSuperseded;\n\t\n\t        // Exit 'from' states not kept\n\t        for (l = fromPath.length - 1; l >= keep; l--) {\n\t          exiting = fromPath[l];\n\t          if (exiting.self.onExit) {\n\t            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n\t          }\n\t          exiting.locals = null;\n\t        }\n\t\n\t        // Enter 'to' states not kept\n\t        for (l = keep; l < toPath.length; l++) {\n\t          entering = toPath[l];\n\t          entering.locals = toLocals[l];\n\t          if (entering.self.onEnter) {\n\t            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n\t          }\n\t        }\n\t\n\t        // Run it again, to catch any transitions in callbacks\n\t        if ($state.transition !== transition) return TransitionSuperseded;\n\t\n\t        // Update globals in $state\n\t        $state.$current = to;\n\t        $state.current = to.self;\n\t        $state.params = toParams;\n\t        copy($state.params, $stateParams);\n\t        $state.transition = null;\n\t\n\t        if (options.location && to.navigable) {\n\t          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n\t            $$avoidResync: true, replace: options.location === 'replace'\n\t          });\n\t        }\n\t\n\t        if (options.notify) {\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeSuccess\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired once the state transition is **complete**.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         */\n\t          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n\t        }\n\t        $urlRouter.update(true);\n\t\n\t        return $state.current;\n\t      }, function (error) {\n\t        if ($state.transition !== transition) return TransitionSuperseded;\n\t\n\t        $state.transition = null;\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeError\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired when an **error occurs** during transition. It's important to note that if you\n\t         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n\t         * they will not throw traditionally. You must listen for this $stateChangeError event to\n\t         * catch **ALL** errors.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         * @param {Error} error The resolve error object.\n\t         */\n\t        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\t\n\t        if (!evt.defaultPrevented) {\n\t            $urlRouter.update();\n\t        }\n\t\n\t        return $q.reject(error);\n\t      });\n\t\n\t      return transition;\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#is\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n\t     * but only checks for the full state name. If params is supplied then it will be\n\t     * tested for strict equality against the current active params object, so all params\n\t     * must match with none missing and no extras.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // absolute name\n\t     * $state.is('contact.details.item'); // returns true\n\t     * $state.is(contactDetailItemStateObject); // returns true\n\t     *\n\t     * // relative name (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n\t     * </pre>\n\t     *\n\t     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n\t     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n\t     * to test against the current active state.\n\t     * @param {object=} options An options object.  The options are:\n\t     *\n\t     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n\t     * test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it is the state.\n\t     */\n\t    $state.is = function is(stateOrName, params, options) {\n\t      options = extend({ relative: $state.$current }, options || {});\n\t      var state = findState(stateOrName, options.relative);\n\t\n\t      if (!isDefined(state)) { return undefined; }\n\t      if ($state.$current !== state) { return false; }\n\t      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#includes\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A method to determine if the current active state is equal to or is the child of the\n\t     * state stateName. If any params are passed then they will be tested for a match as well.\n\t     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n\t     *\n\t     * @example\n\t     * Partial and relative names\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // Using partial names\n\t     * $state.includes(\"contacts\"); // returns true\n\t     * $state.includes(\"contacts.details\"); // returns true\n\t     * $state.includes(\"contacts.details.item\"); // returns true\n\t     * $state.includes(\"contacts.list\"); // returns false\n\t     * $state.includes(\"about\"); // returns false\n\t     *\n\t     * // Using relative names (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n\t     * </pre>\n\t     *\n\t     * Basic globbing patterns\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item.url';\n\t     *\n\t     * $state.includes(\"*.details.*.*\"); // returns true\n\t     * $state.includes(\"*.details.**\"); // returns true\n\t     * $state.includes(\"**.item.**\"); // returns true\n\t     * $state.includes(\"*.details.item.url\"); // returns true\n\t     * $state.includes(\"*.details.*.url\"); // returns true\n\t     * $state.includes(\"*.details.*\"); // returns false\n\t     * $state.includes(\"item.**\"); // returns false\n\t     * </pre>\n\t     *\n\t     * @param {string} stateOrName A partial name, relative name, or glob pattern\n\t     * to be searched for within the current state name.\n\t     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n\t     * that you'd like to test against the current active state.\n\t     * @param {object=} options An options object.  The options are:\n\t     *\n\t     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n\t     * .includes will test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it does include the state\n\t     */\n\t    $state.includes = function includes(stateOrName, params, options) {\n\t      options = extend({ relative: $state.$current }, options || {});\n\t      if (isString(stateOrName) && isGlob(stateOrName)) {\n\t        if (!doesStateMatchGlob(stateOrName)) {\n\t          return false;\n\t        }\n\t        stateOrName = $state.$current.name;\n\t      }\n\t\n\t      var state = findState(stateOrName, options.relative);\n\t      if (!isDefined(state)) { return undefined; }\n\t      if (!isDefined($state.$current.includes[state.name])) { return false; }\n\t      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\n\t    };\n\t\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#href\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A url generation method that returns the compiled url for the given state populated with the given params.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n\t     * </pre>\n\t     *\n\t     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n\t     * @param {object=} params An object of parameter values to fill the state's required parameters.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n\t     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n\t     *    ancestor with a valid url).\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t     * \n\t     * @returns {string} compiled state url\n\t     */\n\t    $state.href = function href(stateOrName, params, options) {\n\t      options = extend({\n\t        lossy:    true,\n\t        inherit:  true,\n\t        absolute: false,\n\t        relative: $state.$current\n\t      }, options || {});\n\t\n\t      var state = findState(stateOrName, options.relative);\n\t\n\t      if (!isDefined(state)) return null;\n\t      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n\t      \n\t      var nav = (state && options.lossy) ? state.navigable : state;\n\t\n\t      if (!nav || nav.url === undefined || nav.url === null) {\n\t        return null;\n\t      }\n\t      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n\t        absolute: options.absolute\n\t      });\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#get\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Returns the state configuration object for any specific state or all states.\n\t     *\n\t     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n\t     * the requested state. If not provided, returns an array of ALL state configs.\n\t     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n\t     * @returns {Object|Array} State configuration object or array of all objects.\n\t     */\n\t    $state.get = function (stateOrName, context) {\n\t      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n\t      var state = findState(stateOrName, context || $state.$current);\n\t      return (state && state.self) ? state.self : null;\n\t    };\n\t\n\t    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n\t      // Make a restricted $stateParams with only the parameters that apply to this state if\n\t      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n\t      // we also need $stateParams to be available for any $injector calls we make during the\n\t      // dependency resolution process.\n\t      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n\t      var locals = { $stateParams: $stateParams };\n\t\n\t      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n\t      // We're also including $stateParams in this; that way the parameters are restricted\n\t      // to the set that should be visible to the state, and are independent of when we update\n\t      // the global $state and $stateParams values.\n\t      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n\t      var promises = [dst.resolve.then(function (globals) {\n\t        dst.globals = globals;\n\t      })];\n\t      if (inherited) promises.push(inherited);\n\t\n\t      function resolveViews() {\n\t        var viewsPromises = [];\n\t\n\t        // Resolve template and dependencies for all views.\n\t        forEach(state.views, function (view, name) {\n\t          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n\t          injectables.$template = [ function () {\n\t            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n\t          }];\n\t\n\t          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n\t            // References to the controller (only instantiated at link time)\n\t            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n\t              var injectLocals = angular.extend({}, injectables, dst.globals);\n\t              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n\t            } else {\n\t              result.$$controller = view.controller;\n\t            }\n\t            // Provide access to the state itself for internal use\n\t            result.$$state = state;\n\t            result.$$controllerAs = view.controllerAs;\n\t            dst[name] = result;\n\t          }));\n\t        });\n\t\n\t        return $q.all(viewsPromises).then(function(){\n\t          return dst.globals;\n\t        });\n\t      }\n\t\n\t      // Wait for all the promises and then return the activation object\n\t      return $q.all(promises).then(resolveViews).then(function (values) {\n\t        return dst;\n\t      });\n\t    }\n\t\n\t    return $state;\n\t  }\n\t\n\t  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n\t    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n\t    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n\t      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n\t      function notSearchParam(key) {\n\t        return fromAndToState.params[key].location != \"search\";\n\t      }\n\t      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n\t      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n\t      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n\t      return nonQueryParamSet.$$equals(fromParams, toParams);\n\t    }\n\t\n\t    // If reload was not explicitly requested\n\t    // and we're transitioning to the same state we're already in\n\t    // and    the locals didn't change\n\t    //     or they changed in a way that doesn't merit reloading\n\t    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n\t    // Then return true.\n\t    if (!options.reload && to === from &&\n\t      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n\t      return true;\n\t    }\n\t  }\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .factory('$stateParams', function () { return {}; })\n\t  .provider('$state', $StateProvider);\n\t\n\t\n\t$ViewProvider.$inject = [];\n\tfunction $ViewProvider() {\n\t\n\t  this.$get = $get;\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$view\n\t   *\n\t   * @requires ui.router.util.$templateFactory\n\t   * @requires $rootScope\n\t   *\n\t   * @description\n\t   *\n\t   */\n\t  $get.$inject = ['$rootScope', '$templateFactory'];\n\t  function $get(   $rootScope,   $templateFactory) {\n\t    return {\n\t      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.state.$view#load\n\t       * @methodOf ui.router.state.$view\n\t       *\n\t       * @description\n\t       *\n\t       * @param {string} name name\n\t       * @param {object} options option object.\n\t       */\n\t      load: function load(name, options) {\n\t        var result, defaults = {\n\t          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n\t        };\n\t        options = extend(defaults, options);\n\t\n\t        if (options.view) {\n\t          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n\t        }\n\t        return result;\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tangular.module('ui.router.state').provider('$view', $ViewProvider);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.state.$uiViewScrollProvider\n\t *\n\t * @description\n\t * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n\t */\n\tfunction $ViewScrollProvider() {\n\t\n\t  var useAnchorScroll = false;\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n\t   * @methodOf ui.router.state.$uiViewScrollProvider\n\t   *\n\t   * @description\n\t   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n\t   * scrolling based on the url anchor.\n\t   */\n\t  this.useAnchorScroll = function () {\n\t    useAnchorScroll = true;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$uiViewScroll\n\t   *\n\t   * @requires $anchorScroll\n\t   * @requires $timeout\n\t   *\n\t   * @description\n\t   * When called with a jqLite element, it scrolls the element into view (after a\n\t   * `$timeout` so the DOM has time to refresh).\n\t   *\n\t   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n\t   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n\t   */\n\t  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n\t    if (useAnchorScroll) {\n\t      return $anchorScroll;\n\t    }\n\t\n\t    return function ($element) {\n\t      return $timeout(function () {\n\t        $element[0].scrollIntoView();\n\t      }, 0, false);\n\t    };\n\t  }];\n\t}\n\t\n\tangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\t\n\tvar ngMajorVer = angular.version.major;\n\tvar ngMinorVer = angular.version.minor;\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-view\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires $compile\n\t * @requires $controller\n\t * @requires $injector\n\t * @requires ui.router.state.$uiViewScroll\n\t * @requires $document\n\t *\n\t * @restrict ECA\n\t *\n\t * @description\n\t * The ui-view directive tells $state where to place your templates.\n\t *\n\t * @param {string=} name A view name. The name should be unique amongst the other views in the\n\t * same state. You can have views of the same name that live in different states.\n\t *\n\t * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n\t * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n\t * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n\t * scroll ui-view elements into view when they are populated during a state activation.\n\t *\n\t * @param {string=} noanimation If truthy, the non-animated renderer will be selected (no animations\n\t * will be applied to the ui-view)\n\t *\n\t * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n\t * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n\t *\n\t * @param {string=} onload Expression to evaluate whenever the view updates.\n\t * \n\t * @example\n\t * A view can be unnamed or named. \n\t * <pre>\n\t * <!-- Unnamed -->\n\t * <div ui-view></div> \n\t * \n\t * <!-- Named -->\n\t * <div ui-view=\"viewName\"></div>\n\t * </pre>\n\t *\n\t * You can only have one unnamed view within any template (or root html). If you are only using a \n\t * single view and it is unnamed then you can populate it like so:\n\t * <pre>\n\t * <div ui-view></div> \n\t * $stateProvider.state(\"home\", {\n\t *   template: \"<h1>HELLO!</h1>\"\n\t * })\n\t * </pre>\n\t * \n\t * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n\t * config property, by name, in this case an empty name:\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t * \n\t * But typically you'll only use the views property if you name your view or have more than one view \n\t * in the same template. There's not really a compelling reason to name a view if its the only one, \n\t * but you could if you wanted, like so:\n\t * <pre>\n\t * <div ui-view=\"main\"></div>\n\t * </pre> \n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"main\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t * \n\t * Really though, you'll use views to set up multiple views:\n\t * <pre>\n\t * <div ui-view></div>\n\t * <div ui-view=\"chart\"></div> \n\t * <div ui-view=\"data\"></div> \n\t * </pre>\n\t * \n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     },\n\t *     \"chart\": {\n\t *       template: \"<chart_thing/>\"\n\t *     },\n\t *     \"data\": {\n\t *       template: \"<data_thing/>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * Examples for `autoscroll`:\n\t *\n\t * <pre>\n\t * <!-- If autoscroll present with no expression,\n\t *      then scroll ui-view into view -->\n\t * <ui-view autoscroll/>\n\t *\n\t * <!-- If autoscroll present with valid expression,\n\t *      then scroll ui-view into view if expression evaluates to true -->\n\t * <ui-view autoscroll='true'/>\n\t * <ui-view autoscroll='false'/>\n\t * <ui-view autoscroll='scopeVariable'/>\n\t * </pre>\n\t */\n\t$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\n\tfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\n\t\n\t  function getService() {\n\t    return ($injector.has) ? function(service) {\n\t      return $injector.has(service) ? $injector.get(service) : null;\n\t    } : function(service) {\n\t      try {\n\t        return $injector.get(service);\n\t      } catch (e) {\n\t        return null;\n\t      }\n\t    };\n\t  }\n\t\n\t  var service = getService(),\n\t      $animator = service('$animator'),\n\t      $animate = service('$animate');\n\t\n\t  // Returns a set of DOM manipulation functions based on which Angular version\n\t  // it should use\n\t  function getRenderer(attrs, scope) {\n\t    var statics = {\n\t      enter: function (element, target, cb) { target.after(element); cb(); },\n\t      leave: function (element, cb) { element.remove(); cb(); }\n\t    };\n\t\n\t    if (!!attrs.noanimation) return statics;\n\t\n\t    function animEnabled(element) {\n\t      if (ngMajorVer === 1 && ngMinorVer >= 4) return !!$animate.enabled(element);\n\t      if (ngMajorVer === 1 && ngMinorVer >= 2) return !!$animate.enabled();\n\t      return (!!$animator);\n\t    }\n\t\n\t    // ng 1.2+\n\t    if ($animate) {\n\t      return {\n\t        enter: function(element, target, cb) {\n\t          if (!animEnabled(element)) {\n\t            statics.enter(element, target, cb);\n\t          } else if (angular.version.minor > 2) {\n\t            $animate.enter(element, null, target).then(cb);\n\t          } else {\n\t            $animate.enter(element, null, target, cb);\n\t          }\n\t        },\n\t        leave: function(element, cb) {\n\t          if (!animEnabled(element)) {\n\t            statics.leave(element, cb);\n\t          } else if (angular.version.minor > 2) {\n\t            $animate.leave(element).then(cb);\n\t          } else {\n\t            $animate.leave(element, cb);\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    // ng 1.1.5\n\t    if ($animator) {\n\t      var animate = $animator && $animator(scope, attrs);\n\t\n\t      return {\n\t        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n\t        leave: function(element, cb) { animate.leave(element); cb(); }\n\t      };\n\t    }\n\t\n\t    return statics;\n\t  }\n\t\n\t  var directive = {\n\t    restrict: 'ECA',\n\t    terminal: true,\n\t    priority: 400,\n\t    transclude: 'element',\n\t    compile: function (tElement, tAttrs, $transclude) {\n\t      return function (scope, $element, attrs) {\n\t        var previousEl, currentEl, currentScope, latestLocals,\n\t            onloadExp     = attrs.onload || '',\n\t            autoScrollExp = attrs.autoscroll,\n\t            renderer      = getRenderer(attrs, scope);\n\t\n\t        scope.$on('$stateChangeSuccess', function() {\n\t          updateView(false);\n\t        });\n\t\n\t        updateView(true);\n\t\n\t        function cleanupLastView() {\n\t          var _previousEl = previousEl;\n\t          var _currentScope = currentScope;\n\t\n\t          if (_currentScope) {\n\t            _currentScope._willBeDestroyed = true;\n\t          }\n\t\n\t          function cleanOld() {\n\t            if (_previousEl) {\n\t              _previousEl.remove();\n\t            }\n\t\n\t            if (_currentScope) {\n\t              _currentScope.$destroy();\n\t            }\n\t          }\n\t\n\t          if (currentEl) {\n\t            renderer.leave(currentEl, function() {\n\t              cleanOld();\n\t              previousEl = null;\n\t            });\n\t\n\t            previousEl = currentEl;\n\t          } else {\n\t            cleanOld();\n\t            previousEl = null;\n\t          }\n\t\n\t          currentEl = null;\n\t          currentScope = null;\n\t        }\n\t\n\t        function updateView(firstTime) {\n\t          var newScope,\n\t              name            = getUiViewName(scope, attrs, $element, $interpolate),\n\t              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\t\n\t          if (!firstTime && previousLocals === latestLocals || scope._willBeDestroyed) return; // nothing to do\n\t          newScope = scope.$new();\n\t          latestLocals = $state.$current.locals[name];\n\t\n\t          /**\n\t           * @ngdoc event\n\t           * @name ui.router.state.directive:ui-view#$viewContentLoading\n\t           * @eventOf ui.router.state.directive:ui-view\n\t           * @eventType emits on ui-view directive scope\n\t           * @description\n\t           *\n\t           * Fired once the view **begins loading**, *before* the DOM is rendered.\n\t           *\n\t           * @param {Object} event Event object.\n\t           * @param {string} viewName Name of the view.\n\t           */\n\t          newScope.$emit('$viewContentLoading', name);\n\t\n\t          var clone = $transclude(newScope, function(clone) {\n\t            renderer.enter(clone, $element, function onUiViewEnter() {\n\t              if(currentScope) {\n\t                currentScope.$emit('$viewContentAnimationEnded');\n\t              }\n\t\n\t              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n\t                $uiViewScroll(clone);\n\t              }\n\t            });\n\t            cleanupLastView();\n\t          });\n\t\n\t          currentEl = clone;\n\t          currentScope = newScope;\n\t          /**\n\t           * @ngdoc event\n\t           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n\t           * @eventOf ui.router.state.directive:ui-view\n\t           * @eventType emits on ui-view directive scope\n\t           * @description\n\t           * Fired once the view is **loaded**, *after* the DOM is rendered.\n\t           *\n\t           * @param {Object} event Event object.\n\t           * @param {string} viewName Name of the view.\n\t           */\n\t          currentScope.$emit('$viewContentLoaded', name);\n\t          currentScope.$eval(onloadExp);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  return directive;\n\t}\n\t\n\t$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\n\tfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n\t  return {\n\t    restrict: 'ECA',\n\t    priority: -400,\n\t    compile: function (tElement) {\n\t      var initial = tElement.html();\n\t      return function (scope, $element, attrs) {\n\t        var current = $state.$current,\n\t            name = getUiViewName(scope, attrs, $element, $interpolate),\n\t            locals  = current && current.locals[name];\n\t\n\t        if (! locals) {\n\t          return;\n\t        }\n\t\n\t        $element.data('$uiView', { name: name, state: locals.$$state });\n\t        $element.html(locals.$template ? locals.$template : initial);\n\t\n\t        var link = $compile($element.contents());\n\t\n\t        if (locals.$$controller) {\n\t          locals.$scope = scope;\n\t          locals.$element = $element;\n\t          var controller = $controller(locals.$$controller, locals);\n\t          if (locals.$$controllerAs) {\n\t            scope[locals.$$controllerAs] = controller;\n\t          }\n\t          $element.data('$ngControllerController', controller);\n\t          $element.children().data('$ngControllerController', controller);\n\t        }\n\t\n\t        link(scope);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Shared ui-view code for both directives:\n\t * Given scope, element, and its attributes, return the view's name\n\t */\n\tfunction getUiViewName(scope, attrs, element, $interpolate) {\n\t  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n\t  var inherited = element.inheritedData('$uiView');\n\t  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\n\t}\n\t\n\tangular.module('ui.router.state').directive('uiView', $ViewDirective);\n\tangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\t\n\tfunction parseStateRef(ref, current) {\n\t  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n\t  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n\t  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n\t  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n\t  return { state: parsed[1], paramExpr: parsed[3] || null };\n\t}\n\t\n\tfunction stateContext(el) {\n\t  var stateData = el.parent().inheritedData('$uiView');\n\t\n\t  if (stateData && stateData.state && stateData.state.name) {\n\t    return stateData.state;\n\t  }\n\t}\n\t\n\tfunction getTypeInfo(el) {\n\t  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n\t  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n\t  var isForm = el[0].nodeName === \"FORM\";\n\t\n\t  return {\n\t    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n\t    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n\t    clickable: !isForm\n\t  };\n\t}\n\t\n\tfunction clickHook(el, $state, $timeout, type, current) {\n\t  return function(e) {\n\t    var button = e.which || e.button, target = current();\n\t\n\t    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n\t      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n\t      var transition = $timeout(function() {\n\t        $state.go(target.state, target.params, target.options);\n\t      });\n\t      e.preventDefault();\n\t\n\t      // if the state has no URL, ignore one preventDefault from the <a> directive.\n\t      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\t\n\t      e.preventDefault = function() {\n\t        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\tfunction defaultOpts(el, $state) {\n\t  return { relative: stateContext(el) || $state.$current, inherit: true };\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires $timeout\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n\t * URL, the directive will automatically generate & update the `href` attribute via\n\t * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n\t * the link will trigger a state transition with optional parameters.\n\t *\n\t * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n\t * handled natively by the browser.\n\t *\n\t * You can also use relative state paths within ui-sref, just like the relative\n\t * paths passed to `$state.go()`. You just need to be aware that the path is relative\n\t * to the state that the link lives in, in other words the state that loaded the\n\t * template containing the link.\n\t *\n\t * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\n\t * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n\t * and `reload`.\n\t *\n\t * @example\n\t * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n\t * following template:\n\t * <pre>\n\t * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n\t *\n\t * <ul>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n\t *     </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n\t * <pre>\n\t * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n\t *\n\t * <ul>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n\t *     </li>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n\t *     </li>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n\t *     </li>\n\t * </ul>\n\t *\n\t * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n\t * </pre>\n\t *\n\t * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n\t * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n\t */\n\t$StateRefDirective.$inject = ['$state', '$timeout'];\n\tfunction $StateRefDirective($state, $timeout) {\n\t  return {\n\t    restrict: 'A',\n\t    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n\t    link: function(scope, element, attrs, uiSrefActive) {\n\t      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n\t      var def    = { state: ref.state, href: null, params: null };\n\t      var type   = getTypeInfo(element);\n\t      var active = uiSrefActive[1] || uiSrefActive[0];\n\t\n\t      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\t\n\t      var update = function(val) {\n\t        if (val) def.params = angular.copy(val);\n\t        def.href = $state.href(ref.state, def.params, def.options);\n\t\n\t        if (active) active.$$addStateInfo(ref.state, def.params);\n\t        if (def.href !== null) attrs.$set(type.attr, def.href);\n\t      };\n\t\n\t      if (ref.paramExpr) {\n\t        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n\t        def.params = angular.copy(scope.$eval(ref.paramExpr));\n\t      }\n\t      update();\n\t\n\t      if (!type.clickable) return;\n\t      element.bind(\"click\", clickHook(element, $state, $timeout, type, function() { return def; }));\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-state\n\t *\n\t * @requires ui.router.state.uiSref\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n\t * params and override options.\n\t *\n\t * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n\t * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#href $state.href()}\n\t * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n\t */\n\t$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\n\tfunction $StateRefDynamicDirective($state, $timeout) {\n\t  return {\n\t    restrict: 'A',\n\t    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n\t    link: function(scope, element, attrs, uiSrefActive) {\n\t      var type   = getTypeInfo(element);\n\t      var active = uiSrefActive[1] || uiSrefActive[0];\n\t      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n\t      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n\t      var def    = { state: null, params: null, options: null, href: null };\n\t\n\t      function runStateRefLink (group) {\n\t        def.state = group[0]; def.params = group[1]; def.options = group[2];\n\t        def.href = $state.href(def.state, def.params, def.options);\n\t\n\t        if (active) active.$$addStateInfo(def.state, def.params);\n\t        if (def.href) attrs.$set(type.attr, def.href);\n\t      }\n\t\n\t      scope.$watch(watch, runStateRefLink, true);\n\t      runStateRefLink(scope.$eval(watch));\n\t\n\t      if (!type.clickable) return;\n\t      element.bind(\"click\", clickHook(element, $state, $timeout, type, function() { return def; }));\n\t    }\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref-active\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires ui.router.state.$stateParams\n\t * @requires $interpolate\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * A directive working alongside ui-sref to add classes to an element when the\n\t * related ui-sref directive's state is active, and removing them when it is inactive.\n\t * The primary use-case is to simplify the special appearance of navigation menus\n\t * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n\t * distinguishing it from the inactive menu items.\n\t *\n\t * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n\t * ui-sref-active found at the same level or above the ui-sref will be used.\n\t *\n\t * Will activate when the ui-sref's target state or any child state is active. If you\n\t * need to activate only when the ui-sref target state is active and *not* any of\n\t * it's children, then you will use\n\t * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n\t *\n\t * @example\n\t * Given the following template:\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active=\"active\" class=\"item\">\n\t *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t *\n\t * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n\t * the resulting HTML will appear as (note the 'active' class):\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active=\"active\" class=\"item active\">\n\t *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * The class name is interpolated **once** during the directives link time (any further changes to the\n\t * interpolated value are ignored).\n\t *\n\t * Multiple classes may be specified in a space-separated format:\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active='class1 class2 class3'>\n\t *     <a ui-sref=\"app.user\">link</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * It is also possible to pass ui-sref-active an expression that evaluates\n\t * to an object hash, whose keys represent active class names and whose\n\t * values represent the respective state names/globs.\n\t * ui-sref-active will match if the current active state **includes** any of\n\t * the specified state names/globs, even the abstract ones.\n\t *\n\t * @Example\n\t * Given the following template, with \"admin\" being an abstract state:\n\t * <pre>\n\t * <div ui-sref-active=\"{'active': 'admin.*'}\">\n\t *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n\t * </div>\n\t * </pre>\n\t *\n\t * When the current state is \"admin.roles\" the \"active\" class will be applied\n\t * to both the <div> and <a> elements. It is important to note that the state\n\t * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref-active-eq\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires ui.router.state.$stateParams\n\t * @requires $interpolate\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n\t * when the exact target state used in the `ui-sref` is active; no child states.\n\t *\n\t */\n\t$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\n\tfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n\t  return  {\n\t    restrict: \"A\",\n\t    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n\t      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\t\n\t      // There probably isn't much point in $observing this\n\t      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n\t      // slight difference in logic routing\n\t      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\t\n\t      try {\n\t        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n\t      } catch (e) {\n\t        // Do nothing. uiSrefActive is not a valid expression.\n\t        // Fall back to using $interpolate below\n\t      }\n\t      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n\t      if (isObject(uiSrefActive)) {\n\t        forEach(uiSrefActive, function(stateOrName, activeClass) {\n\t          if (isString(stateOrName)) {\n\t            var ref = parseStateRef(stateOrName, $state.current.name);\n\t            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n\t          }\n\t        });\n\t      }\n\t\n\t      // Allow uiSref to communicate with uiSrefActive[Equals]\n\t      this.$$addStateInfo = function (newState, newParams) {\n\t        // we already got an explicit state provided by ui-sref-active, so we\n\t        // shadow the one that comes from ui-sref\n\t        if (isObject(uiSrefActive) && states.length > 0) {\n\t          return;\n\t        }\n\t        addState(newState, newParams, uiSrefActive);\n\t        update();\n\t      };\n\t\n\t      $scope.$on('$stateChangeSuccess', update);\n\t\n\t      function addState(stateName, stateParams, activeClass) {\n\t        var state = $state.get(stateName, stateContext($element));\n\t        var stateHash = createStateHash(stateName, stateParams);\n\t\n\t        states.push({\n\t          state: state || { name: stateName },\n\t          params: stateParams,\n\t          hash: stateHash\n\t        });\n\t\n\t        activeClasses[stateHash] = activeClass;\n\t      }\n\t\n\t      /**\n\t       * @param {string} state\n\t       * @param {Object|string} [params]\n\t       * @return {string}\n\t       */\n\t      function createStateHash(state, params) {\n\t        if (!isString(state)) {\n\t          throw new Error('state should be a string');\n\t        }\n\t        if (isObject(params)) {\n\t          return state + toJson(params);\n\t        }\n\t        params = $scope.$eval(params);\n\t        if (isObject(params)) {\n\t          return state + toJson(params);\n\t        }\n\t        return state;\n\t      }\n\t\n\t      // Update route state\n\t      function update() {\n\t        for (var i = 0; i < states.length; i++) {\n\t          if (anyMatch(states[i].state, states[i].params)) {\n\t            addClass($element, activeClasses[states[i].hash]);\n\t          } else {\n\t            removeClass($element, activeClasses[states[i].hash]);\n\t          }\n\t\n\t          if (exactMatch(states[i].state, states[i].params)) {\n\t            addClass($element, activeEqClass);\n\t          } else {\n\t            removeClass($element, activeEqClass);\n\t          }\n\t        }\n\t      }\n\t\n\t      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n\t      function removeClass(el, className) { el.removeClass(className); }\n\t      function anyMatch(state, params) { return $state.includes(state.name, params); }\n\t      function exactMatch(state, params) { return $state.is(state.name, params); }\n\t\n\t      update();\n\t    }]\n\t  };\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .directive('uiSref', $StateRefDirective)\n\t  .directive('uiSrefActive', $StateRefActiveDirective)\n\t  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n\t  .directive('uiState', $StateRefDynamicDirective);\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name ui.router.state.filter:isState\n\t *\n\t * @requires ui.router.state.$state\n\t *\n\t * @description\n\t * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n\t */\n\t$IsStateFilter.$inject = ['$state'];\n\tfunction $IsStateFilter($state) {\n\t  var isFilter = function (state, params) {\n\t    return $state.is(state, params);\n\t  };\n\t  isFilter.$stateful = true;\n\t  return isFilter;\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name ui.router.state.filter:includedByState\n\t *\n\t * @requires ui.router.state.$state\n\t *\n\t * @description\n\t * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n\t */\n\t$IncludedByStateFilter.$inject = ['$state'];\n\tfunction $IncludedByStateFilter($state) {\n\t  var includesFilter = function (state, params, options) {\n\t    return $state.includes(state, params, options);\n\t  };\n\t  includesFilter.$stateful = true;\n\t  return  includesFilter;\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .filter('isState', $IsStateFilter)\n\t  .filter('includedByState', $IncludedByStateFilter);\n\t})(window, window.angular);\n\n/***/ },\n\n/***/ 473:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar collectionSlotsController = function () {\n\t  collectionSlotsController.$inject = [\"$stateParams\", \"Spinner\", \"CollectionSlotsService\"];\n\t  _createClass(collectionSlotsController, [{\n\t    key: \"hideSpinner\",\n\t    value: function hideSpinner() {\n\t\n\t      this.Spinner.hide('collectionSlots');\n\t    }\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"collectionSlotsController\";\n\t    }\n\t  }]);\n\t\n\t  function collectionSlotsController($stateParams, Spinner, CollectionSlotsService) {\n\t    \"ngInject\";\n\t\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, collectionSlotsController);\n\t\n\t    this.Spinner = Spinner;\n\t    this.loaded = false;\n\t\n\t    this.Spinner.show('collectionSlots');\n\t\n\t    CollectionSlotsService.getCollectionSlots({\n\t      venueId: $stateParams.venueId\n\t    }).then(function (data) {\n\t\n\t      console.log('collection slot service data here', data);\n\t\n\t      _this.data = data;\n\t      _this.loaded = true;\n\t\n\t      _this.hideSpinner();\n\t    }, function () {\n\t\n\t      _this.data = {\n\t        collectionSlots: []\n\t      };\n\t      console.log('error collection slot service');\n\t      _this.loaded = true;\n\t\n\t      _this.hideSpinner();\n\t    });\n\t  }\n\t\n\t  return collectionSlotsController;\n\t}();\n\t\n\texports.default = collectionSlotsController;\n\n/***/ },\n\n/***/ 474:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar collectionSlotsItemController = function () {\n\t  collectionSlotsItemController.$inject = [\"$q\", \"$timeout\", \"Spinner\", \"Snack\", \"contextualMenu\", \"contextual\", \"DialogService\", \"LabelService\", \"ErrorService\", \"gettextCatalog\", \"EventService\"];\n\t  _createClass(collectionSlotsItemController, [{\n\t    key: \"restoreOriginalValues\",\n\t    value: function restoreOriginalValues() {\n\t\n\t      if (this.originalCollectionSlot) {\n\t        angular.extend(this.collectionSlot, this.originalCollectionSlot);\n\t        this.originalCollectionSlot = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"contextualMenuCancel\",\n\t    value: function contextualMenuCancel() {\n\t\n\t      this.restoreOriginalValues();\n\t      this.collectionSlot.$selected = false;\n\t\n\t      if (this.collectionSlot && !this.collectionSlot.id) {\n\t        this.cardItemList.deleteItem(this.collectionSlot);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"isValidEntity\",\n\t    value: function isValidEntity(entity) {\n\t\n\t      return entity && entity.name;\n\t    }\n\t  }, {\n\t    key: \"buildEntityToCollectionSlot\",\n\t    value: function buildEntityToCollectionSlot(entity) {\n\t\n\t      this.collectionSlot = entity;\n\t      this.collectionSlot.start = entity.$start * entity.$startFactor;\n\t      this.collectionSlot.end = entity.$end * entity.$endFactor;\n\t\n\t      if (!this.collectionSlot.$hasSteps) {\n\t        this.collectionSlot.step = null;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"contextualMenuSuccess\",\n\t    value: function contextualMenuSuccess(entity) {\n\t      var _this = this;\n\t\n\t      if (this.collectionSlot && this.isValidEntity(entity)) {\n\t        this.buildEntityToCollectionSlot(entity);\n\t\n\t        if (!this.collectionSlot.id) {\n\t          this.Spinner.show(\"collection-slot-create\");\n\t          this.collectionSlotsListCtrl.createCollectionSlot(this.collectionSlot).then(function (_collectionSlot) {\n\t\n\t            _this.cardItemList.onUpdateItem(_this.collectionSlot, _collectionSlot);\n\t            _this.contextualMenu.hide();\n\t            _this.Spinner.hide(\"collection-slot-create\");\n\t            _this.Snack.show(_this.gettextCatalog.getString('Collection Slot created'));\n\t          }, function (err) {\n\t            console.log('error on save collection slot', err);\n\t            _this.Spinner.hide(\"collection-slot-create\");\n\t            _this.Snack.showError(_this.gettextCatalog.getString('Error saving collection slot'));\n\t          });\n\t        } else {\n\t          this.updateCollectionSlot().then(function () {\n\t            _this.contextualMenu.hide();\n\t            _this.collectionSlot.$selected = false;\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"updateCollectionSlot\",\n\t    value: function updateCollectionSlot() {\n\t      var _this2 = this;\n\t\n\t      this.Spinner.show(\"collection-slot-update\");\n\t      return this.$q(function (resolve, reject) {\n\t        _this2.collectionSlot.update().then(function (_collectionSlot) {\n\t          _this2.Snack.show(_this2.gettextCatalog.getString('Collection Slot updated'));\n\t          resolve(_collectionSlot);\n\t        }, function () {\n\t          reject();\n\t          _this2.Snack.showError(_this2.gettextCatalog.getString('Error updating collection slot'));\n\t        }).then(function () {\n\t          _this2.Spinner.hide(\"collection-slot-update\");\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"onEdit\",\n\t    value: function onEdit($event) {\n\t\n\t      this.originalCollectionSlot = angular.copy(this.collectionSlot);\n\t      this.cardItemList.selectItem(this.collectionSlot);\n\t      this.contextual.showMenu(this.type, this.collectionSlot, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n\t      $event.stopPropagation();\n\t    }\n\t  }, {\n\t    key: \"showSlotUsedDialog\",\n\t    value: function showSlotUsedDialog() {\n\t      var _this3 = this;\n\t\n\t      this.DialogService.delete(this.ErrorService.COLLECTION_SLOT_SCHEDULE.title, this.ErrorService.COLLECTION_SLOT_SCHEDULE.message).then(function () {\n\t\n\t        _this3.delete();\n\t      });\n\t    }\n\t  }, {\n\t    key: \"delete\",\n\t    value: function _delete() {\n\t      var _this4 = this;\n\t\n\t      if (!this.Spinner.isCodeVisible('collection-slot-delete')) {\n\t        this.Spinner.show(\"collection-slot-delete\");\n\t      }\n\t\n\t      var promise = this.collectionSlot.remove();\n\t      promise.then(function () {\n\t\n\t        _this4.EventService.removeCollectionSlotFromSchedules(_this4.collectionSlot.id);\n\t\n\t        _this4.cardItemList.onItemDeleted(_this4.collectionSlot);\n\t        if (_this4.onItemDeleted) {\n\t          _this4.onItemDeleted({ item: _this4.collectionSlot });\n\t        }\n\t        _this4.Snack.show('Collection Slot deleted');\n\t        _this4.Spinner.hide(\"collection-slot-delete\");\n\t      }).catch(function (err) {\n\t        console.log('error on delete,', err);\n\t        _this4.Spinner.hide(\"collection-slot-delete\");\n\t\n\t        _this4.Snack.showError('Collection slot not deleted');\n\t      });\n\t    }\n\t  }, {\n\t    key: \"onDelete\",\n\t    value: function onDelete() {\n\t      var _this5 = this;\n\t\n\t      this.DialogService.delete(this.LabelService.TITLE_DELETE_COLLECTION_SLOT, this.LabelService.CONTENT_DELETE_COLLECTION_SLOT).then(function () {\n\t        _this5.Spinner.show(\"collection-slot-delete\");\n\t\n\t        _this5.collectionSlot.getSchedules().then(function (schedules) {\n\t\n\t          if (schedules.length > 0) {\n\t            _this5.Spinner.hide(\"collection-slot-delete\");\n\t            _this5.showSlotUsedDialog();\n\t          } else {\n\t            _this5.delete();\n\t          }\n\t        }, function () {\n\t\n\t          _this5.Spinner.hide(\"collection-slot-delete\");\n\t          _this5.Snack.showError('Collection slot not deleted');\n\t        });\n\t      });\n\t    }\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"collectionSlotsItemController\";\n\t    }\n\t  }]);\n\t\n\t  function collectionSlotsItemController($q, $timeout, Spinner, Snack, contextualMenu, contextual, DialogService, LabelService, ErrorService, gettextCatalog, EventService) {\n\t    \"ngInject\";\n\t\n\t    _classCallCheck(this, collectionSlotsItemController);\n\t\n\t    this.$q = $q;\n\t    this.$timeout = $timeout;\n\t    this.Spinner = Spinner;\n\t    this.Snack = Snack;\n\t    this.contextualMenu = contextualMenu;\n\t    this.contextual = contextual;\n\t    this.DialogService = DialogService;\n\t    this.LabelService = LabelService;\n\t    this.ErrorService = ErrorService;\n\t    this.gettextCatalog = gettextCatalog;\n\t    this.EventService = EventService;\n\t\n\t    this.type = 'collectionSlot';\n\t\n\t    if (this.collectionSlot && !this.collectionSlot.id) {\n\t      this.contextual.showMenu(this.type, this.collectionSlot, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n\t    }\n\t  }\n\t\n\t  return collectionSlotsItemController;\n\t}();\n\t\n\texports.default = collectionSlotsItemController;\n\n/***/ },\n\n/***/ 475:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar collectionSlotsListController = function () {\n\t  collectionSlotsListController.$inject = [\"$q\", \"VenueService\", \"CollectionSlotsService\"];\n\t  _createClass(collectionSlotsListController, [{\n\t    key: \"showCreateCollectionSlot\",\n\t    value: function showCreateCollectionSlot() {\n\t\n\t      var isCreating = this.collectionSlots.filter(function (item) {\n\t\n\t        return item.id === undefined;\n\t      }).length;\n\t\n\t      if (isCreating) {\n\t        console.log(\"Not showing collection slot new, already showing\");\n\t        return;\n\t      }\n\t\n\t      var slot = new Preoday.PickupSlot({\n\t        venueId: this.VenueService.currentVenue.id,\n\t        $selected: true\n\t      });\n\t\n\t      this.collectionSlots.push(slot);\n\t    }\n\t  }, {\n\t    key: \"createCollectionSlot\",\n\t    value: function createCollectionSlot(newData) {\n\t\n\t      var deferred = this.$q.defer();\n\t\n\t      newData.position = 0;\n\t\n\t      this.CollectionSlotsService.save(newData).then(function (slot) {\n\t\n\t        deferred.resolve(slot);\n\t      }, function (err) {\n\t        console.log('fail collection slot saved', err);\n\t        deferred.reject(err);\n\t      });\n\t\n\t      return deferred.promise;\n\t    }\n\t\n\t    /* @ngInject */\n\t\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"collectionSlotsListController\";\n\t    }\n\t  }]);\n\t\n\t  function collectionSlotsListController($q, VenueService, CollectionSlotsService) {\n\t    'ngInject';\n\t\n\t    _classCallCheck(this, collectionSlotsListController);\n\t\n\t    this.$q = $q;\n\t    this.VenueService = VenueService;\n\t    this.CollectionSlotsService = CollectionSlotsService;\n\t  }\n\t\n\t  return collectionSlotsListController;\n\t}();\n\t\n\texports.default = collectionSlotsListController;\n\n/***/ },\n\n/***/ 476:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar eventController = function () {\n\t  eventController.$inject = [\"$q\", \"$timeout\", \"Spinner\", \"Snack\", \"contextualMenu\", \"contextual\", \"DialogService\", \"LabelService\", \"ErrorService\", \"EventService\", \"EventScheduleService\", \"gettextCatalog\", \"OutletLocationService\"];\n\t  _createClass(eventController, [{\n\t    key: \"restoreOriginalValues\",\n\t    value: function restoreOriginalValues() {\n\t\n\t      if (this.originalEvent) {\n\t        delete this.originalEvent.schedules;\n\t        angular.extend(this.event, this.originalEvent);\n\t        this.originalEvent = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"toggleExpanded\",\n\t    value: function toggleExpanded($event) {\n\t      if (this.event.$expanding) {\n\t        return;\n\t      }\n\t      if ($event) {\n\t        var el = angular.element($event.target);\n\t        while (el[0]) {\n\t          el = angular.element(el);\n\t          if (el.hasClass('sv-long-pressing')) {\n\t            return;\n\t          }\n\t          el = el.parent();\n\t        }\n\t      }\n\t      this.cardItemList.expandItem(this.event);\n\t      this.contextualMenu.close();\n\t    }\n\t  }, {\n\t    key: \"contextualMenuCancel\",\n\t    value: function contextualMenuCancel() {\n\t\n\t      this.restoreOriginalValues();\n\t      this.event.$selected = false;\n\t\n\t      if (this.event && !this.event.id) {\n\t        this.cardItemList.deleteItem(this.event);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"contextualMenuSuccess\",\n\t    value: function contextualMenuSuccess(entity) {\n\t      var _this = this;\n\t\n\t      if (this.event && entity && entity.name) {\n\t        this.event = entity;\n\t\n\t        if (!this.event.schedules.length) {\n\t          this.event.$selected = false;\n\t          this.contextualMenu.hide();\n\t          return this.addEventSchedule();\n\t        }\n\t\n\t        if (!this.event.id) {\n\t          this.createEvent();\n\t        } else {\n\t          this.updateEvent().then(function () {\n\t            _this.contextualMenu.hide();\n\t            _this.event.$selected = false;\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"createEvent\",\n\t    value: function createEvent() {\n\t      var _this2 = this;\n\t\n\t      var deferred = this.$q.defer();\n\t\n\t      this.Spinner.show(\"event-create\");\n\t      this.eventListCtrl.createEvent(this.event).then(function (_event) {\n\t\n\t        _this2.event.$deleted = false;\n\t        _this2.event.$selected = false;\n\t\n\t        _this2.$timeout(function () {\n\t\n\t          angular.extend(_this2.event, _event);\n\t\n\t          _this2.contextualMenu.hide();\n\t          _this2.Spinner.hide(\"event-create\");\n\t          _this2.Snack.show(_this2.gettextCatalog.getString('Event created'));\n\t\n\t          deferred.resolve(_this2.event);\n\t        });\n\t      }, function (err) {\n\t        console.log('error on save event', err);\n\t        _this2.Spinner.hide(\"event-create\");\n\t        _this2.Snack.showError(_this2.gettextCatalog.getString('Error saving event'));\n\t\n\t        deferred.reject(err);\n\t      });\n\t\n\t      return deferred.promise;\n\t    }\n\t  }, {\n\t    key: \"updateEvent\",\n\t    value: function updateEvent() {\n\t      var _this3 = this;\n\t\n\t      this.Spinner.show(\"event-update\");\n\t      return this.$q(function (resolve, reject) {\n\t        _this3.EventService.update(_this3.event).then(function (_event) {\n\t          _this3.Snack.show(_this3.gettextCatalog.getString('Event updated'));\n\t          resolve(_event);\n\t        }, function (err) {\n\t          reject();\n\t          _this3.Snack.showError(_this3.gettextCatalog.getString('Error updating event'));\n\t        }).then(function () {\n\t          _this3.Spinner.hide(\"event-update\");\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"addEventSchedule\",\n\t    value: function addEventSchedule() {\n\t\n\t      if (!this.event.schedules.length) {\n\t        if (!this.event.$expanded) {\n\t          this.cardItemList.expandItem(this.event);\n\t        }\n\t\n\t        this.event.schedules.push(this.EventScheduleService.getNewScheduleModel(this.event.id));\n\t      }\n\t    }\n\t  }, {\n\t    key: \"onEdit\",\n\t    value: function onEdit($event) {\n\t\n\t      this.event.$images = [];\n\t\n\t      if (this.event.image) {\n\t        this.event.$images.push({\n\t          image: this.event.image\n\t        });\n\t      }\n\t\n\t      this.event.$expanded = false;\n\t      this.originalEvent = angular.copy(this.event);\n\t      this.cardItemList.selectItem(this.event);\n\t      this.showContextual();\n\t      $event.stopPropagation();\n\t    }\n\t  }, {\n\t    key: \"showOutletLocationWithOutletMessage\",\n\t    value: function showOutletLocationWithOutletMessage() {\n\t\n\t      this.DialogService.show(this.ErrorService.EVENT_OUTLET_LOCATION.title, this.ErrorService.EVENT_OUTLET_LOCATION.message, [{\n\t        name: this.gettextCatalog.getString('Got it')\n\t      }]);\n\t    }\n\t  }, {\n\t    key: \"showOutletLocationWithoutChildren\",\n\t    value: function showOutletLocationWithoutChildren() {\n\t\n\t      this.DialogService.show(this.ErrorService.EVENT_OUTLET_LOCATION_NO_CHILDREN.title, this.ErrorService.EVENT_OUTLET_LOCATION_NO_CHILDREN.message, [{\n\t        name: this.gettextCatalog.getString('Got it')\n\t      }]);\n\t    }\n\t  }, {\n\t    key: \"onAddOutletLocation\",\n\t    value: function onAddOutletLocation() {\n\t      var _this4 = this;\n\t\n\t      if (!this.OutletLocationService.hasOutletLocations()) {\n\t        return;\n\t      }\n\t\n\t      this.cardItemList.selectItem(this.event);\n\t\n\t      this.contextual.showDrawer('eventOutletLocations').then(function (outletLocation) {\n\t\n\t        _this4.event.$selected = false;\n\t\n\t        if (outletLocation.outletId) {\n\t          return _this4.showOutletLocationWithOutletMessage();\n\t        }\n\t\n\t        if (!outletLocation.hasChildren()) {\n\t          return _this4.showOutletLocationWithoutChildren();\n\t        }\n\t\n\t        if (_this4.event.outletLocationId !== outletLocation.id) {\n\t          _this4.event.outletLocationId = outletLocation.id;\n\t          _this4.updateEvent().then(_this4.buildOutletLocation.bind(_this4));\n\t        }\n\t        console.log('outletLocation selected', outletLocation);\n\t      }, function () {\n\t\n\t        _this4.event.$selected = false;\n\t        console.log('outletLocation cancelled');\n\t      });\n\t    }\n\t  }, {\n\t    key: \"removeOutletLocation\",\n\t    value: function removeOutletLocation() {\n\t\n\t      this.event.outletLocationId = null;\n\t      this.updateEvent().then(this.buildOutletLocation.bind(this));\n\t    }\n\t  }, {\n\t    key: \"onDelete\",\n\t    value: function onDelete() {\n\t      var _this5 = this;\n\t\n\t      this.DialogService.delete(this.LabelService.TITLE_DELETE_EVENT, this.LabelService.CONTENT_DELETE_EVENT).then(function () {\n\t        _this5.Spinner.show(\"event-delete\");\n\t\n\t        _this5.event.visible = 0;\n\t\n\t        var promise = _this5.event.update();\n\t\n\t        promise.then(function () {\n\t\n\t          _this5.removeEventItem();\n\t          _this5.Snack.show('Event deleted');\n\t          _this5.Spinner.hide(\"event-delete\");\n\t        }).catch(function (err) {\n\t          _this5.Spinner.hide(\"event-delete\");\n\t\n\t          _this5.Snack.showError('Event not deleted');\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"removeEventItem\",\n\t    value: function removeEventItem() {\n\t\n\t      this.cardItemList.onItemDeleted(this.event);\n\t      if (this.onItemDeleted) {\n\t        this.onItemDeleted({ item: this.event });\n\t      }\n\t    }\n\t  }, {\n\t    key: \"buildOutletLocation\",\n\t    value: function buildOutletLocation() {\n\t\n\t      this.outletLocations = [];\n\t\n\t      if (this.event && this.event.outletLocationId) {\n\t\n\t        var outletLocation = this.OutletLocationService.findById(this.event.outletLocationId);\n\t\n\t        if (outletLocation) {\n\t          this.outletLocations.push(outletLocation);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"getAddOutletLocationMessage\",\n\t    value: function getAddOutletLocationMessage() {\n\t\n\t      if (this.OutletLocationService.hasOutletLocations()) {\n\t        return this.gettextCatalog.getString('Set outlet configuration');\n\t      }\n\t\n\t      return this.gettextCatalog.getString(\"You don't have outlet locations yet\");\n\t    }\n\t  }, {\n\t    key: \"showContextual\",\n\t    value: function showContextual() {\n\t\n\t      this.contextual.showMenu(this.type, this.event, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this), {\n\t        doneButtonText: this.event.schedules.length < 1 ? this.gettextCatalog.getString('Add schedule') : null\n\t      });\n\t    }\n\t  }, {\n\t    key: \"hasAnyScheduleWithoutSlots\",\n\t    value: function hasAnyScheduleWithoutSlots() {\n\t\n\t      return this.event.schedules.filter(function (schedule) {\n\t        return schedule.id && !schedule.hasSlots();\n\t      }).length > 0;\n\t    }\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"eventController\";\n\t    }\n\t  }]);\n\t\n\t  function eventController($q, $timeout, Spinner, Snack, contextualMenu, contextual, DialogService, LabelService, ErrorService, EventService, EventScheduleService, gettextCatalog, OutletLocationService) {\n\t    \"ngInject\";\n\t\n\t    _classCallCheck(this, eventController);\n\t\n\t    this.$q = $q;\n\t    this.$timeout = $timeout;\n\t    this.Spinner = Spinner;\n\t    this.Snack = Snack;\n\t    this.contextualMenu = contextualMenu;\n\t    this.contextual = contextual;\n\t    this.DialogService = DialogService;\n\t    this.LabelService = LabelService;\n\t    this.ErrorService = ErrorService;\n\t    this.EventService = EventService;\n\t    this.EventScheduleService = EventScheduleService;\n\t    this.gettextCatalog = gettextCatalog;\n\t    this.OutletLocationService = OutletLocationService;\n\t\n\t    this.type = 'event';\n\t\n\t    this.buildOutletLocation();\n\t\n\t    if (this.event && !this.event.id) {\n\t      this.showContextual();\n\t    }\n\t  }\n\t\n\t  return eventController;\n\t}();\n\t\n\texports.default = eventController;\n\n/***/ },\n\n/***/ 477:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar eventListController = function () {\n\t  eventListController.$inject = [\"VenueService\", \"EventService\", \"$q\"];\n\t  _createClass(eventListController, [{\n\t    key: \"showCreateEvent\",\n\t    value: function showCreateEvent() {\n\t\n\t      var isCreating = this.events.filter(function (item) {\n\t\n\t        return item.id === undefined;\n\t      }).length;\n\t\n\t      if (isCreating) {\n\t        console.log(\"Not showing event new, already showing\");\n\t        return;\n\t      }\n\t\n\t      var event = new Preoday.Event({\n\t        venueId: this.VenueService.currentVenue.id,\n\t        visible: 1,\n\t        $images: [],\n\t        schedules: [],\n\t        $selected: true\n\t      });\n\t\n\t      this.events.push(event);\n\t    }\n\t  }, {\n\t    key: \"createEvent\",\n\t    value: function createEvent(newData) {\n\t\n\t      var deferred = this.$q.defer();\n\t\n\t      // newData.position = 0;\n\t\n\t      this.EventService.save(newData).then(function (event) {\n\t\n\t        deferred.resolve(event);\n\t      }, function (err) {\n\t\n\t        deferred.reject(err);\n\t      });\n\t\n\t      return deferred.promise;\n\t    }\n\t\n\t    /* @ngInject */\n\t\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"eventListController\";\n\t    }\n\t  }]);\n\t\n\t  function eventListController(VenueService, EventService, $q) {\n\t    'ngInject';\n\t\n\t    _classCallCheck(this, eventListController);\n\t\n\t    this.VenueService = VenueService;\n\t    this.EventService = EventService;\n\t    this.$q = $q;\n\t  }\n\t\n\t  return eventListController;\n\t}();\n\t\n\texports.default = eventListController;\n\n/***/ },\n\n/***/ 478:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1155);\n\t\n\tvar _eventList = __webpack_require__(477);\n\t\n\tvar _eventList2 = _interopRequireDefault(_eventList);\n\t\n\tvar _eventList3 = __webpack_require__(923);\n\t\n\tvar _eventList4 = _interopRequireDefault(_eventList3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\texports.default = angular.module(\"eventList\", []).controller(_eventList2.default.UID, _eventList2.default).directive(\"eventList\", _eventList4.default).name; // Import Style\n\n/***/ },\n\n/***/ 479:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar eventScheduleController = function () {\n\t  eventScheduleController.$inject = [\"$q\", \"$timeout\", \"Spinner\", \"Snack\", \"contextualMenu\", \"contextual\", \"MenuService\", \"DialogService\", \"LabelService\", \"gettextCatalog\", \"EventScheduleFrequency\", \"ErrorService\"];\n\t  _createClass(eventScheduleController, [{\n\t    key: \"restoreOriginalValues\",\n\t    value: function restoreOriginalValues() {\n\t      if (this.originalSchedule) {\n\t        angular.extend(this.schedule, this.originalSchedule);\n\t        this.schedule.$startDate = null;\n\t        this.schedule.$endDate = null;\n\t        this.originalSchedule = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"contextualMenuCancel\",\n\t    value: function contextualMenuCancel() {\n\t      this.restoreOriginalValues();\n\t      this.schedule.$selected = false;\n\t\n\t      if (this.schedule && !this.schedule.id) {\n\t        this.cardItemList.deleteItem(this.schedule);\n\t        this.eventScheduleListCtrl.cancelSchedule();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"formatDate\",\n\t    value: function formatDate(date) {\n\t\n\t      var date = moment(date.getTime());\n\t\n\t      return date.format('YYYY-MM-DDTHH:mm:00.000');\n\t    }\n\t  }, {\n\t    key: \"concatStartDateWithTime\",\n\t    value: function concatStartDateWithTime(entity) {\n\t\n\t      var date = moment(entity.$startDate.getTime());\n\t      var dateTimer = moment(entity.$startTime.getTime());\n\t\n\t      date.hours(dateTimer.hours());\n\t      date.minutes(dateTimer.minutes());\n\t\n\t      entity.$startDate = date.toDate();\n\t\n\t      return this.formatDate(entity.$startDate);\n\t    }\n\t  }, {\n\t    key: \"buildEntityToSchedule\",\n\t    value: function buildEntityToSchedule(entity) {\n\t\n\t      this.schedule = entity;\n\t\n\t      this.schedule.startDate = this.concatStartDateWithTime(entity);\n\t\n\t      if (this.schedule.isOnceFrequency()) {\n\t        this.schedule.endDate = this.schedule.startDate;\n\t      } else {\n\t        this.schedule.endDate = this.formatDate(entity.$endDate);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"contextualMenuSuccess\",\n\t    value: function contextualMenuSuccess(entity) {\n\t      var _this = this;\n\t\n\t      if (this.schedule && entity && entity.pickupSlots && entity.pickupSlots.length) {\n\t        this.buildEntityToSchedule(entity);\n\t\n\t        if (!this.schedule.id) {\n\t          this.eventScheduleListCtrl.createSchedule(this.schedule).then(function (_schedule) {\n\t\n\t            _this.cardItemList.onUpdateItem(_this.schedule, _schedule);\n\t            _this.contextualMenu.hide();\n\t            _this.Spinner.hide(\"event-schedule-create\");\n\t          }, function (err) {\n\t            console.log('error on save schedule', err);\n\t            _this.Spinner.hide(\"event-schedule-create\");\n\t            _this.Snack.showError(_this.gettextCatalog.getString('Error saving schedule'));\n\t          });\n\t        } else {\n\t          this.updateSchedule().then(function () {\n\t            _this.contextualMenu.hide();\n\t            _this.schedule.$selected = false;\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"updateSchedule\",\n\t    value: function updateSchedule() {\n\t      var _this2 = this;\n\t\n\t      this.Spinner.show(\"event-schedule-update\");\n\t      return this.$q(function (resolve, reject) {\n\t        _this2.schedule.update().then(function (_schedule) {\n\t          _this2.Snack.show(_this2.gettextCatalog.getString('Schedule updated'));\n\t\n\t          _this2.eventScheduleListCtrl.buildScheduleTimestamp(_this2.schedule);\n\t          resolve(_schedule);\n\t        }, function (err) {\n\t          reject();\n\t          _this2.Snack.showError(_this2.gettextCatalog.getString('Error updating schedule'));\n\t        }).then(function () {\n\t          _this2.Spinner.hide(\"event-schedule-update\");\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"onEdit\",\n\t    value: function onEdit($event) {\n\t\n\t      this.originalSchedule = angular.copy(this.schedule);\n\t      this.cardItemList.selectItem(this.schedule);\n\t      this.contextual.showMenu(this.type, this.schedule, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n\t      $event.stopPropagation();\n\t    }\n\t  }, {\n\t    key: \"onDelete\",\n\t    value: function onDelete() {\n\t      var _this3 = this;\n\t\n\t      if (this.eventScheduleListCtrl.getSchedulesCount() === 1) {\n\t        return this.showCannotDeleteScheduleDialog();\n\t      }\n\t\n\t      this.DialogService.delete(this.LabelService.TITLE_DELETE_SCHEDULE, this.LabelService.CONTENT_DELETE_SCHEDULE).then(function () {\n\t\n\t        _this3.Spinner.show(\"event-schedule-delete\");\n\t\n\t        _this3.schedule.visible = 0;\n\t\n\t        var promise = _this3.schedule.update();\n\t        promise.then(function () {\n\t          _this3.cardItemList.onItemDeleted(_this3.schedule);\n\t          if (_this3.onItemDeleted) {\n\t            _this3.onItemDeleted({ item: _this3.schedule });\n\t          }\n\t          _this3.Snack.show('Schedule deleted');\n\t          _this3.Spinner.hide(\"event-schedule-delete\");\n\t        }).catch(function (err) {\n\t          console.log('catch here', err);\n\t          _this3.Spinner.hide(\"event-schedule-delete\");\n\t\n\t          if (err && err instanceof Object && err.message && err.message.indexOf('event') !== -1) {\n\t            _this3.showCannotDeleteScheduleDialog(err);\n\t          } else {\n\t            _this3.Snack.showError(_this3.gettextCatalog.getString('Schedule not deleted'));\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"showCannotDeleteScheduleDialog\",\n\t    value: function showCannotDeleteScheduleDialog() {\n\t\n\t      this.DialogService.show(this.ErrorService.SCHEDULE_EVENT.title, this.ErrorService.SCHEDULE_EVENT.message, [{\n\t        name: this.gettextCatalog.getString('GOT IT')\n\t      }]);\n\t    }\n\t  }, {\n\t    key: \"getScheduleTitle\",\n\t    value: function getScheduleTitle() {\n\t\n\t      if (!this.schedule.$startDate && !this.schedule.startDate && !this.schedule.$endDate && !this.schedule.endDate) {\n\t        return '&nbsp;';\n\t      }\n\t\n\t      var hasStartDate = this.schedule.$startDate || this.schedule.startDate;\n\t      var hasEndDate = this.schedule.$endDate || this.schedule.endDate;\n\t\n\t      switch (this.schedule.freq) {\n\t        case this.EventScheduleFrequency.ONCE:\n\t          return moment(this.schedule.$startDate || this.schedule.startDate).format('DD/MM/YYYY');\n\t\n\t        default:\n\t          return [hasStartDate ? moment(this.schedule.$startDate || this.schedule.startDate).format('DD/MM/YYYY') : '', hasEndDate ? moment(this.schedule.$endDate || this.schedule.endDate).format('DD/MM/YYYY') : ''].join(' - ');\n\t      }\n\t    }\n\t  }, {\n\t    key: \"getScheduleTime\",\n\t    value: function getScheduleTime() {\n\t\n\t      if (!this.schedule.$startTime && !this.schedule.startDate) {\n\t        return '&nbsp;';\n\t      }\n\t\n\t      return moment(this.schedule.$startTime || this.schedule.startDate).format('HH:mm');\n\t    }\n\t  }, {\n\t    key: \"shouldShowWarningSlots\",\n\t    value: function shouldShowWarningSlots() {\n\t\n\t      return this.schedule.id && !this.schedule.hasSlots();\n\t    }\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"eventScheduleController\";\n\t    }\n\t  }]);\n\t\n\t  function eventScheduleController($q, $timeout, Spinner, Snack, contextualMenu, contextual, MenuService, DialogService, LabelService, gettextCatalog, EventScheduleFrequency, ErrorService) {\n\t    \"ngInject\";\n\t\n\t    _classCallCheck(this, eventScheduleController);\n\t\n\t    this.$q = $q;\n\t    this.$timeout = $timeout;\n\t    this.Spinner = Spinner;\n\t    this.Snack = Snack;\n\t    this.contextualMenu = contextualMenu;\n\t    this.contextual = contextual;\n\t    this.DialogService = DialogService;\n\t    this.LabelService = LabelService;\n\t    this.gettextCatalog = gettextCatalog;\n\t    this.EventScheduleFrequency = EventScheduleFrequency;\n\t    this.ErrorService = ErrorService;\n\t\n\t    this.type = 'eventSchedule';\n\t\n\t    if (this.schedule && !this.schedule.id) {\n\t      this.contextual.showMenu(this.type, this.schedule, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n\t    }\n\t  }\n\t\n\t  return eventScheduleController;\n\t}();\n\t\n\texports.default = eventScheduleController;\n\n/***/ },\n\n/***/ 480:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar eventScheduleListController = function () {\n\t  eventScheduleListController.$inject = [\"$scope\", \"$timeout\", \"$q\", \"Spinner\", \"Snack\", \"gettextCatalog\", \"EventScheduleService\"];\n\t  _createClass(eventScheduleListController, [{\n\t    key: \"showCreateSchedule\",\n\t    value: function showCreateSchedule() {\n\t\n\t      var isCreating = this.schedules.filter(function (item) {\n\t\n\t        return item.id === undefined;\n\t      }).length;\n\t\n\t      if (isCreating) {\n\t        console.log(\"Not showing schedule new, already showing\");\n\t        return;\n\t      }\n\t\n\t      this.schedules.push(this.EventScheduleService.getNewScheduleModel(this.event.id));\n\t    }\n\t  }, {\n\t    key: \"createSchedule\",\n\t    value: function createSchedule(newData) {\n\t      var _this = this;\n\t\n\t      var deferred = this.$q.defer();\n\t\n\t      // newData.position = 0;\n\t\n\t      if (!this.event.id) {\n\t        this.eventCtrl.createEvent().then(function (event) {\n\t\n\t          _this.buildSchedules(true);\n\t          deferred.resolve(event.schedules[0]);\n\t        }, deferred.reject);\n\t      } else {\n\t        this.Spinner.show(\"event-schedule-create\");\n\t        this.EventScheduleService.save(newData).then(function (schedule) {\n\t\n\t          _this.buildScheduleTimestamp(schedule);\n\t\n\t          _this.Snack.show(_this.gettextCatalog.getString('Schedule created'));\n\t\n\t          deferred.resolve(schedule);\n\t        }, function (err) {\n\t\n\t          deferred.reject(err);\n\t        });\n\t      }\n\t\n\t      return deferred.promise;\n\t    }\n\t  }, {\n\t    key: \"cancelSchedule\",\n\t    value: function cancelSchedule() {\n\t\n\t      if (!this.event.id) {\n\t        this.eventCtrl.removeEventItem();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"getSchedulesCount\",\n\t    value: function getSchedulesCount() {\n\t\n\t      return this.schedules.length;\n\t    }\n\t  }, {\n\t    key: \"recalculateHeight\",\n\t    value: function recalculateHeight() {\n\t\n\t      this.event.$expanding = true;\n\t      var maxHeight = 0;\n\t      this.schedules.forEach(function (i) {\n\t        maxHeight += 50 + 16;\n\t      });\n\t\n\t      // (button + height + margin-top + margin-bottom)\n\t      maxHeight = maxHeight + (50 + 8 + 32) + \"px\";\n\t      if (this.el[0].style.maxHeight !== maxHeight) {\n\t        this.el[0].style.maxHeight = maxHeight;\n\t      } else {\n\t        this.event.$expanding = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"buildScheduleTimestamp\",\n\t    value: function buildScheduleTimestamp(schedule) {\n\t\n\t      schedule.$startTimestamp = moment(schedule.startDate).valueOf();\n\t      schedule.$endTimestamp = moment(schedule.endDate).valueOf();\n\t    }\n\t  }, {\n\t    key: \"buildSchedules\",\n\t    value: function buildSchedules(shouldShow) {\n\t      var _this2 = this;\n\t\n\t      this.schedules.forEach(function (schedule) {\n\t\n\t        schedule.$show = !!shouldShow;\n\t        _this2.buildScheduleTimestamp(schedule);\n\t      });\n\t    }\n\t\n\t    /* @ngInject */\n\t\n\t  }], [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"eventScheduleListController\";\n\t    }\n\t  }]);\n\t\n\t  function eventScheduleListController($scope, $timeout, $q, Spinner, Snack, gettextCatalog, EventScheduleService) {\n\t    \"ngInject\";\n\t\n\t    var _this3 = this;\n\t\n\t    _classCallCheck(this, eventScheduleListController);\n\t\n\t    this.Spinner = Spinner;\n\t    this.Snack = Snack;\n\t    this.$q = $q;\n\t    this.$timeout = $timeout;\n\t    this.gettextCatalog = gettextCatalog;\n\t    this.EventScheduleService = EventScheduleService;\n\t\n\t    this.event.$expanding = false;\n\t\n\t    this.buildSchedules();\n\t\n\t    //watch for animation only if we're in a section\n\t    $scope.$watch(function () {\n\t\n\t      return _this3.event.$expanded;\n\t    }, function (newVal, oldVal) {\n\t\n\t      if (newVal) {\n\t        // if expanded = true;\n\t        _this3.schedules.forEach(function (i) {\n\t          return i.$show = true;\n\t        });\n\t        if (_this3.schedules.length === 0) {\n\t          _this3.recalculateHeight();\n\t        }\n\t      } else if (oldVal) {\n\t        //if expanded = false and it was true\n\t        _this3.el[0].style.maxHeight = 0;\n\t        _this3.event.$expanding = true;\n\t        $timeout(function () {\n\t          _this3.schedules.forEach(function (i) {\n\t            return i.$show = false;\n\t          });\n\t          _this3.event.$expanding = false;\n\t        }, 1000);\n\t      }\n\t    }, true);\n\t  }\n\t\n\t  return eventScheduleListController;\n\t}();\n\t\n\texports.default = eventScheduleListController;\n\n/***/ },\n\n/***/ 481:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1157);\n\t\n\tvar _eventScheduleList = __webpack_require__(480);\n\t\n\tvar _eventScheduleList2 = _interopRequireDefault(_eventScheduleList);\n\t\n\tvar _eventScheduleList3 = __webpack_require__(926);\n\t\n\tvar _eventScheduleList4 = _interopRequireDefault(_eventScheduleList3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\texports.default = angular.module(\"eventScheduleList\", ['cardItemList']).controller(_eventScheduleList2.default.UID, _eventScheduleList2.default).directive(\"eventScheduleList\", _eventScheduleList4.default).name; // Import Style\n\n/***/ },\n\n/***/ 482:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar eventListViewController = function () {\n\t  eventListViewController.$inject = [\"$scope\", \"$q\", \"$sce\", \"$timeout\", \"$compile\", \"Spinner\", \"EventService\", \"VenueService\", \"OutletLocationService\", \"gettextCatalog\", \"MaterialCalendarData\", \"EventScheduleService\"];\n\t  _createClass(eventListViewController, [{\n\t    key: 'hideSpinner',\n\t    value: function hideSpinner() {\n\t\n\t      this.Spinner.hide('events');\n\t    }\n\t  }, {\n\t    key: 'getEventByDate',\n\t    value: function getEventByDate(date) {\n\t\n\t      var dateFormat = moment(date).format('DD/MM/YYYY');\n\t\n\t      var events = this.expandedSchedules[dateFormat] || [];\n\t\n\t      return events;\n\t    }\n\t  }, {\n\t    key: 'getDayEventsName',\n\t    value: function getDayEventsName(date) {\n\t\n\t      var events = this.getEventByDate(date);\n\t\n\t      var eventsName = events.map(function (event) {\n\t\n\t        return '<span>' + event.name + '</span><br />';\n\t      }).join('');\n\t\n\t      var html = eventsName;\n\t\n\t      if (events.length > 1) {\n\t        eventsName = events.map(function (event) {\n\t\n\t          return event.name + '\\n';\n\t        }).join('');\n\t\n\t        html = ['<div>', '<a ng-href title=\"' + eventsName + '\">' + events.length + ' ' + this.gettextCatalog.getString('events') + '</a>',\n\t        // '<md-tooltip>' + eventsName + '</md-tooltip>',\n\t        '</div>'].join('');\n\t      }\n\t\n\t      return html;\n\t    }\n\t  }, {\n\t    key: 'setDayContent',\n\t    value: function setDayContent(date) {\n\t\n\t      var eventsName = this.getDayEventsName(date);\n\t\n\t      if (eventsName) {\n\t        eventsName = this.$compile(eventsName)(this.$scope);\n\t        // console.log(eventsName[0].innerHTML);\n\t        eventsName = this.$sce.trustAsHtml(eventsName[0].innerHTML);\n\t        // console.log(eventsName);\n\t      }\n\t\n\t      this.MaterialCalendarData.data[this.MaterialCalendarData.getDayKey(date)] = eventsName || \"\";\n\t    }\n\t  }, {\n\t    key: 'toggleMode',\n\t    value: function toggleMode() {\n\t      var _this = this;\n\t\n\t      this.Spinner.show('events');\n\t\n\t      if (!this.isCalendarMode()) {\n\t        this.expandSchedules();\n\t      } else {\n\t        this.expandedSchedules = {};\n\t      }\n\t\n\t      this.$timeout(function () {\n\t\n\t        _this.calendarMode = !_this.calendarMode;\n\t\n\t        _this.Spinner.hide('events');\n\t      }, 500);\n\t    }\n\t  }, {\n\t    key: 'isCalendarMode',\n\t    value: function isCalendarMode() {\n\t\n\t      return this.calendarMode;\n\t    }\n\t  }, {\n\t    key: 'addExpandedScheduleItem',\n\t    value: function addExpandedScheduleItem(dates, event) {\n\t\n\t      for (var i = dates.length - 1; i >= 0; i--) {\n\t        var date = dates[i];\n\t\n\t        var dateFormat = moment(date).format('DD/MM/YYYY');\n\t        if (!this.expandedSchedules[dateFormat]) {\n\t          this.expandedSchedules[dateFormat] = [];\n\t        }\n\t\n\t        if (this.expandedSchedules[dateFormat].indexOf(event) === -1) {\n\t          this.expandedSchedules[dateFormat].push(event);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'expandSchedules',\n\t    value: function expandSchedules() {\n\t\n\t      for (var i = 0, len = this.data.events.length; i < len; i++) {\n\t        var event = this.data.events[i];\n\t\n\t        for (var k = 0, kLen = event.schedules.length; k < kLen; k++) {\n\t          var schedule = event.schedules[k];\n\t\n\t          var dates = this.EventScheduleService.expandSchedule(schedule);\n\t          this.addExpandedScheduleItem(dates, event);\n\t        }\n\t      }\n\t    }\n\t\n\t    /* @ngInject */\n\t\n\t  }], [{\n\t    key: 'UID',\n\t    get: function get() {\n\t      return \"eventListViewController\";\n\t    }\n\t  }]);\n\t\n\t  function eventListViewController($scope, $q, $sce, $timeout, $compile, Spinner, EventService, VenueService, OutletLocationService, gettextCatalog, MaterialCalendarData, EventScheduleService) {\n\t    'ngInject';\n\t\n\t    var _this2 = this;\n\t\n\t    _classCallCheck(this, eventListViewController);\n\t\n\t    this.$scope = $scope;\n\t    this.$sce = $sce;\n\t    this.$timeout = $timeout;\n\t    this.$compile = $compile;\n\t    this.Spinner = Spinner;\n\t    this.gettextCatalog = gettextCatalog;\n\t    this.MaterialCalendarData = MaterialCalendarData;\n\t    this.EventScheduleService = EventScheduleService;\n\t\n\t    this.loaded = false;\n\t    this.calendarMode = false;\n\t    this.expandedSchedules = {};\n\t\n\t    this.Spinner.show('events');\n\t\n\t    this.calendar = {\n\t      selectedDate: null,\n\t      firstDayOfWeek: 0,\n\t      dayFormat: 'd',\n\t      tooltips: false\n\t    };\n\t\n\t    MaterialCalendarData.setDayContent = this.setDayContent.bind(this);\n\t\n\t    var filter = {\n\t      'after': moment().subtract(7, 'days').format('YYYY/M/D')\n\t    };\n\t\n\t    $q.all([EventService.getEvents(VenueService.currentVenue.id, filter), OutletLocationService.getOutletLocations()]).then(function (results) {\n\t\n\t      _this2.data = results[0];\n\t\n\t      _this2.loaded = true;\n\t      _this2.hideSpinner();\n\t    }, function (err) {\n\t\n\t      _this2.data = {\n\t        events: []\n\t      };\n\t      console.log('error events service', err);\n\t      _this2.loaded = true;\n\t\n\t      _this2.hideSpinner();\n\t    });\n\t  }\n\t\n\t  return eventListViewController;\n\t}();\n\t\n\texports.default = eventListViewController;\n\n/***/ },\n\n/***/ 483:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar eventsController = function () {\n\t  _createClass(eventsController, null, [{\n\t    key: \"UID\",\n\t    get: function get() {\n\t      return \"eventsController\";\n\t    }\n\t  }]);\n\t\n\t  function eventsController() {\n\t    \"ngInject\";\n\t\n\t    _classCallCheck(this, eventsController);\n\t  }\n\t\n\t  return eventsController;\n\t}();\n\t\n\texports.default = eventsController;\n\n/***/ },\n\n/***/ 771:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".collection-slots-view{width:100%}.collection-slots-view .main-content-right{margin-top:24px;width:calc(50% - 24px)}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 772:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".collection-slot-item{position:relative;margin:8px}.collection-slot-item>md-card{margin:0}.collection-slot-item>md-card>.card-title{min-height:46px;height:46px;font-size:13px}.collection-slot-item>md-card>.card-title .card-title-text{line-height:60px}.collection-slot-item>md-card>.card-title .visibility{top:-2px;position:relative}.collection-slot-item .sv-placeholder{margin:8px 22px}.collection-slot-item .card-item-actions md-card-actions{padding-top:5px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 773:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".collection-slots-list .sv-placeholder{min-height:46px!important}.collection-slots-list .card-item.card-item-new{max-height:48px;min-height:48px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 774:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".event{position:relative;margin:8px;transition:box-shadow .3s linear}.event>md-card{margin:0}.event>md-card>.card-title{min-height:58px;height:58px}.event>md-card>.card-title .card-title-text{line-height:60px}.event>md-card>.card-title .visibility{top:-2px;position:relative}.event>md-card>.card-title .warning-button{margin-right:12px;margin-left:0;padding:0;width:24px;height:24px}.event>md-card>.card-title .warning-button .warning-icon{color:#d0021b}.event .sv-placeholder{margin:8px 22px}.event .event-schedule-list{margin:0 22px}.event .event-schedule-list .event-schedule{margin-left:0;margin-right:0}.event .outlet-locations-chips{margin-top:-12px;padding-bottom:14px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 775:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".events-list .sv-placeholder{min-height:58px!important}.events-list .card-item.card-item-new{max-height:60px;min-height:60px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 776:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".event-schedule{margin:0;padding:0;position:relative}.event-schedule .card-item{margin:0}.event-schedule .card-item .hidden-card-actions{align-items:flex-start;padding-top:6px}.event-schedule .card-item .card-title{max-height:48px;min-height:auto;padding:0 14px}.event-schedule .card-item .card-title .card-title-text{font-size:13px;align-items:center}.event-schedule .card-item .card-title .schedule-name{flex:1;display:inline-block}.event-schedule .card-item .card-title .schedule-time{text-align:right;float:right}.event-schedule .card-item .card-title .warning-button{margin-right:12px;margin-left:0;padding:0;width:24px;height:24px}.event-schedule .card-item .card-title .warning-button .warning-icon{color:#d0021b}.event-schedule .card-item .size-wrapper{padding-bottom:5px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 777:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".event-schedule-list{transition:all 1s ease;overflow:hidden}.event-schedule-list .sv-placeholder{min-height:48px!important;margin:0}.event-schedule-list .event-schedule{margin:8px}.event-schedule-list .card-item:not(.card-item-new){margin:0}.event-schedule-list .card-item.card-item-new{margin-left:0;margin-right:0;max-height:48px;min-height:48px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 778:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".events-view{height:100%;width:100%}.events-view .main-content-right{margin-top:24px;width:calc(50% - 24px)}.events-view .events-toolbar{background:#eee;border-bottom:1px solid #ccc;min-height:50px;width:100%;font-size:14px;position:fixed;z-index:21;top:64px;padding-left:24px}.events-view .events-toolbar button md-icon{color:#0288d1!important;margin-right:8px}.events-view .edit-mode-button md-icon{margin-top:-4px}.events-view .content-calendar{padding:74px 24px 24px;height:100%}.events-view .content-calendar .md-toolbar-tools{background-color:#1893d6;color:#fff}.events-view .content-calendar .md-toolbar-tools h2{background:none;overflow:visible;font-size:17px}.events-view .content-calendar .md-toolbar-tools button span{display:none}.events-view .content-calendar .md-toolbar-tools button:after{content:\\\"\\\";display:inline-block;border-right:2.5px solid #fff;border-bottom:2.5px solid #fff;width:7.5px;height:7.5px;transform:rotate(-45deg)}.events-view .content-calendar .md-toolbar-tools button:first-child:after{border-right:0;border-left:2.5px solid #fff;transform:rotate(45deg)}.events-view .content-calendar md-content>div>div{color:rgba(0,0,0,.5);font-size:14px}.events-view .content-calendar md-content>div>div a{color:rgba(0,0,0,.5)}.events-view .content-calendar md-content>div>div button,.events-view .content-calendar md-content>div>div span{color:rgba(0,0,0,.5);font-size:12px;margin:0;width:100%;text-align:left;text-transform:none}.events-view .content-calendar md-content .active,.events-view .content-calendar md-content .md-whiteframe-12dp{box-shadow:none!important;background:none!important}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 779:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".events{height:100%}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 915:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\troutes.$inject = [\"$stateProvider\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = routes;\n\t\n\tvar _collectionSlots = __webpack_require__(473);\n\t\n\tvar _collectionSlots2 = _interopRequireDefault(_collectionSlots);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Routing function for collectionSlots\n\t * @param  $stateProvider\n\t */\n\t/* @ngInject */\n\tfunction routes($stateProvider) {\n\t  $stateProvider.state(\"main.dashboard.events.collectionSlots\", {\n\t    url: \"/collectionSlots\",\n\t    views: {\n\t      eventContent: {\n\t        template: __webpack_require__(1056),\n\t        controller: _collectionSlots2.default.UID,\n\t        controllerAs: \"collectionSlotsViewCtrl\"\n\t      }\n\t    }\n\t  });\n\t}\n\n/***/ },\n\n/***/ 916:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1151);\n\t\n\tvar _angularUiRouter = __webpack_require__(111);\n\t\n\tvar _angularUiRouter2 = _interopRequireDefault(_angularUiRouter);\n\t\n\tvar _collectionSlots = __webpack_require__(473);\n\t\n\tvar _collectionSlots2 = _interopRequireDefault(_collectionSlots);\n\t\n\tvar _collectionSlots3 = __webpack_require__(915);\n\t\n\tvar _collectionSlots4 = _interopRequireDefault(_collectionSlots3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\t// Import Style\n\texports.default = angular.module(\"collectionSlots\", [_angularUiRouter2.default]).config(_collectionSlots4.default).controller(_collectionSlots2.default.UID, _collectionSlots2.default).name;\n\n/***/ },\n\n/***/ 917:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = collectionSlotsItem;\n\t\n\tvar _collectionSlotsItem = __webpack_require__(474);\n\t\n\tvar _collectionSlotsItem2 = _interopRequireDefault(_collectionSlotsItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction collectionSlotsItem() {\n\t  return {\n\t    restrict: 'E',\n\t    replace: true,\n\t    scope: {\n\t      collectionSlot: '=',\n\t      hasActions: '=?'\n\t    },\n\t    template: __webpack_require__(1057),\n\t    controller: _collectionSlotsItem2.default.UID,\n\t    controllerAs: \"collectionSlotsItemCtrl\",\n\t    bindToController: true,\n\t    require: [\"^cardItemList\", \"^collectionSlotsList\", \"collectionSlotsItem\"],\n\t    link: function link(scope, el, attr, ctrls) {\n\t\n\t      ctrls[2].cardItemList = ctrls[0];\n\t      ctrls[2].collectionSlotsListCtrl = ctrls[1];\n\t    }\n\t  };\n\t}\n\n/***/ },\n\n/***/ 918:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1152);\n\t\n\tvar _collectionSlotsItem = __webpack_require__(474);\n\t\n\tvar _collectionSlotsItem2 = _interopRequireDefault(_collectionSlotsItem);\n\t\n\tvar _collectionSlotsItem3 = __webpack_require__(917);\n\t\n\tvar _collectionSlotsItem4 = _interopRequireDefault(_collectionSlotsItem3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\texports.default = angular.module(\"collectionSlotsItem\", []).controller(_collectionSlotsItem2.default.UID, _collectionSlotsItem2.default).directive(\"collectionSlotsItem\", _collectionSlotsItem4.default).name; // Import Style\n\n/***/ },\n\n/***/ 919:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = collectionSlotsList;\n\t\n\tvar _collectionSlotsList = __webpack_require__(475);\n\t\n\tvar _collectionSlotsList2 = _interopRequireDefault(_collectionSlotsList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction collectionSlotsList() {\n\t  return {\n\t    restrict: 'E',\n\t    replace: true,\n\t    scope: {\n\t      collectionSlots: '=',\n\t      hasActions: '=?',\n\t      hasNew: \"=\",\n\t      hasSearch: \"=?\"\n\t    },\n\t    template: __webpack_require__(1058),\n\t    controller: _collectionSlotsList2.default.UID,\n\t    controllerAs: \"collectionSlotsCtrl\",\n\t    bindToController: true,\n\t    link: function link(scope, el, attr, ctrl) {}\n\t  };\n\t}\n\n/***/ },\n\n/***/ 920:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1153);\n\t\n\tvar _collectionSlotsList = __webpack_require__(475);\n\t\n\tvar _collectionSlotsList2 = _interopRequireDefault(_collectionSlotsList);\n\t\n\tvar _collectionSlotsList3 = __webpack_require__(919);\n\t\n\tvar _collectionSlotsList4 = _interopRequireDefault(_collectionSlotsList3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\texports.default = angular.module(\"collectionSlotsList\", []).controller(_collectionSlotsList2.default.UID, _collectionSlotsList2.default).directive(\"collectionSlotsList\", _collectionSlotsList4.default).name; // Import Style\n\n/***/ },\n\n/***/ 921:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = event;\n\t\n\tvar _event = __webpack_require__(476);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction event() {\n\t  return {\n\t    restrict: 'E',\n\t    replace: true,\n\t    scope: {\n\t      event: '=',\n\t      hasActions: '=?'\n\t    },\n\t    template: __webpack_require__(1059),\n\t    controller: _event2.default.UID,\n\t    controllerAs: \"eventCtrl\",\n\t    bindToController: true,\n\t    require: [\"^cardItemList\", \"^eventList\", \"event\"],\n\t    link: function link(scope, el, attr, ctrls) {\n\t\n\t      ctrls[2].cardItemList = ctrls[0];\n\t      ctrls[2].eventListCtrl = ctrls[1];\n\t    }\n\t  };\n\t}\n\n/***/ },\n\n/***/ 922:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1154);\n\t\n\tvar _event = __webpack_require__(476);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _event3 = __webpack_require__(921);\n\t\n\tvar _event4 = _interopRequireDefault(_event3);\n\t\n\tvar _ = __webpack_require__(478);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import Style\n\texports.default = angular.module(\"event\", [_2.default]).controller(_event2.default.UID, _event2.default).directive(\"event\", _event4.default).name;\n\t\n\t// Import internal modules\n\n/***/ },\n\n/***/ 923:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventList;\n\t\n\tvar _eventList = __webpack_require__(477);\n\t\n\tvar _eventList2 = _interopRequireDefault(_eventList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction eventList() {\n\t  return {\n\t    restrict: 'E',\n\t    replace: true,\n\t    scope: {\n\t      events: '=',\n\t      hasActions: '=?',\n\t      hasNew: \"=\",\n\t      hasSearch: \"=?\"\n\t    },\n\t    template: __webpack_require__(1060),\n\t    controller: _eventList2.default.UID,\n\t    controllerAs: \"eventListCtrl\",\n\t    bindToController: true,\n\t    link: function link(scope, el, attr, ctrl) {}\n\t  };\n\t}\n\n/***/ },\n\n/***/ 924:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventSchedule;\n\t\n\tvar _eventSchedule = __webpack_require__(479);\n\t\n\tvar _eventSchedule2 = _interopRequireDefault(_eventSchedule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction eventSchedule() {\n\t  return {\n\t    restrict: 'E',\n\t    scope: {\n\t      schedule: '=',\n\t      hasActions: '=?'\n\t    },\n\t    template: __webpack_require__(1061),\n\t    controller: _eventSchedule2.default.UID,\n\t    controllerAs: \"scheduleCtrl\",\n\t    replace: true,\n\t    bindToController: true,\n\t    require: [\"^cardItemList\", \"^eventScheduleList\", \"eventSchedule\"],\n\t    link: function link(scope, el, attr, ctrls) {\n\t\n\t      ctrls[2].cardItemList = ctrls[0];\n\t      ctrls[2].eventScheduleListCtrl = ctrls[1];\n\t    }\n\t  };\n\t}\n\n/***/ },\n\n/***/ 925:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1156);\n\t\n\tvar _eventSchedule = __webpack_require__(479);\n\t\n\tvar _eventSchedule2 = _interopRequireDefault(_eventSchedule);\n\t\n\tvar _eventSchedule3 = __webpack_require__(924);\n\t\n\tvar _eventSchedule4 = _interopRequireDefault(_eventSchedule3);\n\t\n\tvar _ = __webpack_require__(481);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import Style\n\texports.default = angular.module(\"eventSchedule\", [_2.default]).controller(_eventSchedule2.default.UID, _eventSchedule2.default).directive(\"eventSchedule\", _eventSchedule4.default).name;\n\t\n\t// Import internal modules\n\n/***/ },\n\n/***/ 926:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\teventScheduleList.$inject = [\"$timeout\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventScheduleList;\n\t\n\tvar _eventScheduleList = __webpack_require__(480);\n\t\n\tvar _eventScheduleList2 = _interopRequireDefault(_eventScheduleList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction eventScheduleList($timeout) {\n\t  \"ngInject\";\n\t\n\t  return {\n\t    restrict: 'E',\n\t    scope: {\n\t      schedules: \"=\",\n\t      event: '=',\n\t      hasNew: \"=\"\n\t    },\n\t    template: __webpack_require__(1062),\n\t    controller: _eventScheduleList2.default.UID,\n\t    controllerAs: \"eventScheduleListCtrl\",\n\t    bindToController: true,\n\t    replace: true,\n\t    require: ['^event', '^eventScheduleList'],\n\t    link: function link(scope, el, attr, ctrls) {\n\t\n\t      var eventCtrl = ctrls[0];\n\t      var eventScheduleListCtrl = ctrls[1];\n\t\n\t      eventScheduleListCtrl.eventCtrl = eventCtrl;\n\t\n\t      eventScheduleListCtrl.el = el;\n\t      el[0].style.maxHeight = 0;\n\t      el.on('webkitTransitionEnd transitionend oTransitionEnd webkitTransitionEnd', function (e) {\n\t        if (e.propertyName === 'max-height' || e.originalEvent && e.originalEvent.propertyName === 'max-height') {\n\t          $timeout(function () {\n\t            eventScheduleListCtrl.event.$expanding = false;\n\t          });\n\t        }\n\t      });\n\t    }\n\t  };\n\t}\n\n/***/ },\n\n/***/ 927:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\troutes.$inject = [\"$stateProvider\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = routes;\n\t\n\tvar _eventList = __webpack_require__(482);\n\t\n\tvar _eventList2 = _interopRequireDefault(_eventList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Routing function for eventList\n\t * @param  $stateProvider\n\t */\n\t/* @ngInject */\n\tfunction routes($stateProvider) {\n\t  $stateProvider.state(\"main.dashboard.events.eventList\", {\n\t    url: \"/list\",\n\t    views: {\n\t      eventContent: {\n\t        template: __webpack_require__(1063),\n\t        controller: _eventList2.default.UID,\n\t        controllerAs: \"eventListViewCtrl\"\n\t      }\n\t    }\n\t  });\n\t}\n\n/***/ },\n\n/***/ 928:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1158);\n\t\n\tvar _angularUiRouter = __webpack_require__(111);\n\t\n\tvar _angularUiRouter2 = _interopRequireDefault(_angularUiRouter);\n\t\n\tvar _eventList = __webpack_require__(482);\n\t\n\tvar _eventList2 = _interopRequireDefault(_eventList);\n\t\n\tvar _eventList3 = __webpack_require__(927);\n\t\n\tvar _eventList4 = _interopRequireDefault(_eventList3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Import internal modules\n\t// Import Style\n\texports.default = angular.module(\"eventListView\", [_angularUiRouter2.default]).config(_eventList4.default).controller(_eventList2.default.UID, _eventList2.default).name;\n\n/***/ },\n\n/***/ 929:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\troutes.$inject = [\"$stateProvider\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = routes;\n\t\n\tvar _events = __webpack_require__(483);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Routing function for events\n\t * @param  $stateProvider\n\t */\n\t\n\tfunction routes($stateProvider) {\n\t  \"ngInject\";\n\t\n\t  $stateProvider.state(\"main.dashboard.events\", {\n\t    url: \"/events\",\n\t    template: __webpack_require__(1064),\n\t    controller: _events2.default.UID,\n\t    controllerAs: \"eventsViewCtrl\",\n\t    resolve: {\n\t\n\t      // authenticated -> this is from main.routes.js and makes sure there is an USER and a VENUE set in userService and venueService\n\t      isEvent: [\"$q\", \"$state\", \"$stateParams\", \"$timeout\", \"authenticated\", \"VenueService\", function isEvent($q, $state, $stateParams, $timeout, authenticated, VenueService) {\n\t\n\t        if (VenueService.hasVenueSet() && VenueService.currentVenue.isEvent()) {\n\t\n\t          return $q.when();\n\t        } else {\n\t\n\t          $timeout(function () {\n\t\n\t            $state.go('main.dashboard');\n\t          });\n\t\n\t          return $q.reject();\n\t        }\n\t      }]\n\t    }\n\t  });\n\t}\n\n/***/ },\n\n/***/ 1056:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class='collection-slots-view' layout='column'>\\n  <div flex class=\\\"layout-left-right\\\">\\n    <div class='main-content-left'>\\n      <collection-slots-list has-search=\\\"true\\\"\\n         sv-multi-select=\\\"false\\\"\\n         sv-keep-in-list=\\\"false\\\"\\n         sv-is-dropzone=\\\"true\\\"\\n         sv-disabled=\\\"true\\\"\\n         has-new=\\\"true\\\"\\n         has-actions=\\\"true\\\"\\n         ng-if=\\\"collectionSlotsViewCtrl.loaded\\\"\\n         collection-slots=\\\"collectionSlotsViewCtrl.data.collectionSlots\\\"></collection-slots-list>\\n     </div>\\n  \\t<div class='main-content-right' media-query=\\\"min-width: 1024px\\\" sticky offset=\\\"88\\\" contextual-menu-holder></div>\\n  </div>\\n</div>\"\n\n/***/ },\n\n/***/ 1057:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class='collection-slot-item'\\n      ng-class=\\\"{expanded: collectionSlotsItemCtrl.collectionSlot.$expanded}\\\"\\n      ng-attr-data-id=\\\"{{collectionSlotsItemCtrl.collectionSlot.id}}\\\">\\n\\n  <card-item  has-actions=\\\"collectionSlotsItemCtrl.hasActions\\\"\\n              deleted=\\\"collectionSlotsItemCtrl.collectionSlot.$deleted\\\"\\n              selected=\\\"collectionSlotsItemCtrl.collectionSlot.$selected\\\"\\n              expanded=\\\"collectionSlotsItemCtrl.collectionSlot.$expanded\\\"\\n              >\\n    <card-item-title ng-click=\\\"collectionSlotsItemCtrl.toggleExpanded($event)\\\"\\n                    has-visible=\\\"true\\\"\\n                    sv-root=\\\"collectionSlot\\\">\\n                      <div ng-if=\\\"!collectionSlotsItemCtrl.collectionSlot.$expanded\\\" class='sv-dropzone sv-dropzone-item' sv-part=\\\"collectionSlotsItemCtrl.newItems\\\" sv-on-external-sort=\\\"collectionSlotsItemCtrl.onNewItemMoved($items, $partFrom, $partTo, $indexFrom, $indexTo)\\\">\\n                        <div sv-placeholder></div>\\n                      </div>\\n                      <span>{{collectionSlotsItemCtrl.collectionSlot.slotName}} </span>\\n                    </card-item-title>\\n\\n    <card-item-actions is-visible=\\\"collectionSlotsItemCtrl.collectionSlot.visible\\\"\\n                       on-delete=\\\"collectionSlotsItemCtrl.onDelete()\\\"\\n                       on-edit=\\\"collectionSlotsItemCtrl.onEdit($event)\\\"\\n                        ></card-item-actions>\\n  </card-item>\\n</div>\"\n\n/***/ },\n\n/***/ 1058:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"collection-slots-list\\\">\\n  <div class='sv-root-holder'>\\n\\n    <card-item-list\\n        has-new=\\\"collectionSlotsCtrl.hasNew\\\"\\n        tooltip=\\\"{{ 'Add new collection slot' | translate }}\\\"\\n        on-click-new=\\\"collectionSlotsCtrl.showCreateCollectionSlot()\\\"\\n        collection=\\\"collectionSlotsCtrl.collectionSlots\\\">\\n      <div class='sort-holder' >\\n        <collection-slots-item\\n          has-actions=\\\"collectionSlotsCtrl.hasActions\\\"\\n          ng-repeat=\\\"collectionSlot in collectionSlotsCtrl.collectionSlots | orderBy: 'id' track by collectionSlot.id\\\"\\n          collection-slot=\\\"collectionSlot\\\">\\n        </collection-slots-item>\\n        <div sv-placeholder></div>\\n      </div>\\n    </card-item-list>\\n  </div>\\n</div>\"\n\n/***/ },\n\n/***/ 1059:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class='event'\\n      ng-class=\\\"{expanded: eventCtrl.event.$expanded}\\\"\\n      ng-attr-data-id=\\\"{{eventCtrl.event.id}}\\\">\\n\\n  <card-item  has-actions=\\\"eventCtrl.hasActions\\\"\\n              deleted=\\\"eventCtrl.event.$deleted\\\"\\n              selected=\\\"eventCtrl.event.$selected\\\"\\n              expanded=\\\"eventCtrl.event.$expanded\\\"\\n              >\\n    <card-item-title ng-click=\\\"eventCtrl.toggleExpanded($event)\\\"\\n                    has-visible=\\\"true\\\">\\n                      <md-button class=\\\"md-icon-button warning-button\\\" ng-if=\\\"eventCtrl.hasAnyScheduleWithoutSlots()\\\">\\n                        <icon class=\\\"warning-icon\\\">report_problem</icon>\\n                        <md-tooltip>{{ 'There are schedules in this event without a collection slot' }}</md-tooltip>\\n                      </md-button>\\n                      <span>{{eventCtrl.event.name}} </span>\\n                      <icon class='arrow-icon' flex>{{eventCtrl.event.$expanded ? 'arrow_drop_up' : 'arrow_drop_down'}}</icon>\\n                    </card-item-title>\\n\\n\\n    <item-chips\\n          ng-if=\\\"eventCtrl.event.outletLocationId && eventCtrl.outletLocations.length\\\"\\n          items=\\\"eventCtrl.outletLocations\\\"\\n          on-remove=\\\"eventCtrl.removeOutletLocation(item)\\\"\\n          class=\\\"outlet-locations-chips\\\"></item-chips>\\n\\n    <event-schedule-list\\n          has-new=\\\"true\\\"\\n          schedules=\\\"eventCtrl.event.schedules\\\"\\n          event=\\\"eventCtrl.event\\\"\\n        >\\n    </event-schedule-list>\\n\\n    <card-item-actions is-visible=\\\"eventCtrl.event.visible\\\"\\n                       on-delete=\\\"eventCtrl.onDelete()\\\"\\n                       on-edit=\\\"eventCtrl.onEdit($event)\\\"\\n                       on-add-location=\\\"eventCtrl.onAddOutletLocation($event)\\\"\\n                       add-location-message=\\\"eventCtrl.getAddOutletLocationMessage()\\\"\\n                        ></card-item-actions>\\n  </card-item>\\n</div>\"\n\n/***/ },\n\n/***/ 1060:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"events-list\\\">\\n  <div class='sv-root-holder'>\\n\\n    <card-item-list\\n        has-new=\\\"eventListCtrl.hasNew\\\"\\n        tooltip=\\\"{{ 'Add new event' | translate }}\\\"\\n        on-click-new=\\\"eventListCtrl.showCreateEvent()\\\"\\n        collection=\\\"eventListCtrl.events\\\">\\n      <div class='sort-holder'>\\n        <event\\n          has-actions=\\\"eventListCtrl.hasActions\\\"\\n          ng-repeat=\\\"event in eventListCtrl.events | orderBy: id\\\"\\n          event=\\\"event\\\">\\n        </event>\\n        <div sv-placeholder></div>\\n      </div>\\n    </card-item-list>\\n  </div>\\n</div>\"\n\n/***/ },\n\n/***/ 1061:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class='event-schedule ng-enter'\\n      ng-class=\\\"{expanded:scheduleCtrl.schedule.$expanded}\\\"\\n      ng-attr-data-id=\\\"{{scheduleCtrl.schedule.id}}\\\">\\n\\n  <card-item  has-actions=\\\"true\\\"\\n              deleted=\\\"scheduleCtrl.schedule.$deleted\\\"\\n              selected=\\\"scheduleCtrl.schedule.$selected\\\"\\n              >\\n    <card-item-title ng-click=\\\"scheduleCtrl.toggleExpanded($event)\\\"\\n                    has-visible=\\\"true\\\">\\n                      <md-button class=\\\"md-icon-button warning-button\\\" ng-if=\\\"scheduleCtrl.shouldShowWarningSlots()\\\">\\n                        <icon class=\\\"warning-icon\\\">report_problem</icon>\\n                        <md-tooltip>{{ 'There are no collection slots assigned to this schedule' }}</md-tooltip>\\n                      </md-button>\\n                      <span class=\\\"schedule-name\\\" flex ng-bind-html=\\\"scheduleCtrl.getScheduleTitle()\\\"></span>\\n                      <span class=\\\"schedule-time\\\" ng-bind-html=\\\"scheduleCtrl.getScheduleTime()\\\"></span>\\n                    </card-item-title>\\n\\n    <card-item-actions is-visible=\\\"scheduleCtrl.schedule.visible\\\"\\n                       on-delete=\\\"scheduleCtrl.onDelete(createdOutlet)\\\"\\n                       on-edit=\\\"scheduleCtrl.onEdit($event)\\\"\\n                        ></card-item-actions>\\n  </card-item>\\n</div>\"\n\n/***/ },\n\n/***/ 1062:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"event-schedule-list\\\">\\n  <div class='sv-root-holder'>\\n\\n    <card-item-list\\n        collection=\\\"eventScheduleListCtrl.schedules\\\"\\n        has-new=\\\"eventScheduleListCtrl.hasNew\\\"\\n        tooltip=\\\"{{ 'Add new schedule' | translate }}\\\"\\n        on-click-new=\\\"eventScheduleListCtrl.showCreateSchedule()\\\"\\n        >\\n    <div class='sort-holder'>\\n      <event-schedule\\n        ng-repeat=\\\"schedule in eventScheduleListCtrl.schedules | orderBy: ['$startTimestamp', '$endTimestamp']\\\"\\n        schedule=\\\"schedule\\\"\\n        ng-if=\\\"schedule.$show\\\"\\n        ng-init=\\\"$last && eventScheduleListCtrl.recalculateHeight()\\\"\\n        >\\n      </event-schedule>\\n      <div sv-placeholder></div>\\n    </div>\\n    </card-item-list>\\n  </div>\\n</div>\"\n\n/***/ },\n\n/***/ 1063:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class='events-view' layout='column'>\\n  <div class=\\\"events-toolbar\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n    <md-button class='md-primary' ng-if=\\\"!eventListViewCtrl.isCalendarMode()\\\" ng-click=\\\"eventListViewCtrl.toggleMode()\\\">\\n      <icon class=\\\"material-icons\\\">insert_invitation</icon>{{ 'View Calendar' | translate }}\\n    </md-button>\\n\\t\\t<md-button class='md-primary edit-mode-button' ng-if=\\\"eventListViewCtrl.isCalendarMode()\\\" ng-click=\\\"eventListViewCtrl.toggleMode()\\\">\\n      <icon class=\\\"material-icons\\\">edit</icon>{{ 'Edit Mode' | translate }}\\n    </md-button>\\n  </div>\\n  <div flex class=\\\"layout-left-right with-toolbar\\\" ng-if=\\\"eventListViewCtrl.loaded && !eventListViewCtrl.isCalendarMode()\\\">\\n    <div class='main-content-left'>\\n      <event-list has-search=\\\"true\\\"\\n         sv-multi-select=\\\"false\\\"\\n         sv-keep-in-list=\\\"false\\\"\\n         sv-is-dropzone=\\\"true\\\"\\n         sv-disabled=\\\"true\\\"\\n         has-new=\\\"true\\\"\\n         has-actions=\\\"true\\\"\\n         events=\\\"eventListViewCtrl.data.events\\\"></event-list>\\n     </div>\\n  \\t<div class='main-content-right' media-query=\\\"min-width: 1024px\\\" sticky offset=\\\"134\\\" contextual-menu-holder></div>\\n  </div>\\n\\n  <div class=\\\"content-calendar\\\" ng-if=\\\"eventListViewCtrl.loaded && eventListViewCtrl.isCalendarMode()\\\">\\n    <calendar-md flex layout layout-fill\\n      calendar-direction=\\\"eventListViewCtrl.calendar.direction\\\"\\n      title-format=\\\"'MMMM y'\\\"\\n      ng-model='eventListViewCtrl.calendar.selectedDate'\\n      week-starts-on=\\\"eventListViewCtrl.calendar.firstDayOfWeek\\\"\\n\\n      tooltips=\\\"eventListViewCtrl.calendar.tooltips\\\"\\n      day-format=\\\"eventListViewCtrl.calendar.dayFormat\\\"\\n      day-label-format=\\\"'EEE'\\\"\\n      day-label-tooltip-format=\\\"'EEEE'\\\"\\n      day-tooltip-format=\\\"'fullDate'\\\"\\n      disable-future-selection=\\\"false\\\"\\n      ></calendar-md>\\n  </div>\\n  <contextual-drawer-event-outlet-locations></contextual-drawer-event-outlet-locations>\\n</div>\"\n\n/***/ },\n\n/***/ 1064:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class='events' flex layout='row' layout-align=\\\"stretch stretch\\\">\\n  <ui-view flex name=\\\"eventContent\\\" layout='row' layout-align=\\\"stretch stretch\\\"></ui-view>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 1151:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(771);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./collectionSlots.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./collectionSlots.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1152:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(772);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsItem.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsItem.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1153:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(773);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsList.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsList.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1154:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(774);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./event.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./event.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1155:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(775);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1156:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(776);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./eventSchedule.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./eventSchedule.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1157:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(777);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventScheduleList.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventScheduleList.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1158:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(778);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 1159:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(779);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../../node_modules/css-loader/index.js!./../../../../../../node_modules/sass-loader/index.js!./events.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../../node_modules/css-loader/index.js!./../../../../../../node_modules/sass-loader/index.js!./events.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** events.bundle.427d4df267b1f1b9acad.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c84bccab9927e7885f57\n **/","// Import Style\nimport './events.scss';\n\n\n\n// Import internal modules\nimport controller from './events.controller';\nimport routes from './events.routes';\n\nimport eventListView from './eventList';\nimport collectionSlotsView from './collectionSlots';\n\nimport eventListComponent from './components/eventList';\nimport eventListItemComponent from './components/eventList/event';\n\nimport eventScheduleListComponent from './components/eventScheduleList';\nimport eventScheduleComponent from './components/eventScheduleList/eventSchedule';\n\nimport collectionSlotsListComponent from './components/collectionSlotsList';\nimport collectionSlotsListItemComponent from './components/collectionSlotsList/collectionSlotsItem';\n\nangular.module(\"webapp.events\" , [\n\t\t'ui.router',\n\t\teventListView,\n\t\tcollectionSlotsView,\n\t\teventListComponent,\n\t\teventListItemComponent,\n\t\teventScheduleListComponent,\n\t\teventScheduleComponent,\n\t\tcollectionSlotsListComponent,\n\t\tcollectionSlotsListItemComponent,\n\t])\n  .config(routes)\n  .controller(controller.UID, controller)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/index.js\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 1 2 3 4 5 6 7 8 9 10 11 12 13\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 1 2 3 4 5 6 7 8 9 10 11 12 13\n **/","/**\n * State-based routing for AngularJS\n * @version v0.2.18\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy,\n    toJson = angular.toJson;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i] || !parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n *\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when\n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash, optional) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n      case true:\n        result = result.replace(/\\/$/, '');\n        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\n    if (regexp) {\n      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n    }\n\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  var param, paramVal;\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    param = this.params[paramName];\n    paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n    param = this.params[paramName];\n    paramVal = searchParams[paramName];\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n *\n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validates\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      var isFinalPathParam = i + 1 === nPath;\n\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n\n      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      if (encoded.length === 0) continue;\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/** Given an encoded string, or a decoded object, returns a decoded object */\nType.prototype.$normalize = function(val) {\n  return this.is(val) ? val : this.decode(val);\n};\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        if (isArray(val) && val.length === 0) return val;\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n    this.name = type.name;\n    this.$arrayMode = mode;\n  }\n\n  return new ArrayType(this, mode);\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  // Use tildes to pre-encode slashes.\n  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n  // and bidirectional encoding/decoding fails.\n  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n  function valToString(val) { return val != null ? val.toString().replace(/~/g, \"~~\").replace(/\\//g, \"~2F\") : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/~2F/g, \"/\").replace(/~~/g, \"~\") : val; }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    \"string\": {\n      encode: valToString,\n      decode: valFromString,\n      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n      // In 0.2.x, string params are optional by default for backwards compat\n      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n      pattern: /[^/]*/\n    },\n    \"int\": {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    \"bool\": {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    \"date\": {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    \"json\": {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    \"any\": { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\n      if (angular.isString(config.type))\n        return $types[config.type];\n      if (config.type instanceof Type)\n        return config.type;\n      return new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      var defaultValue = injector.invoke(config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n      return defaultValue;\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n      for (i = 0; i < keys.length; i++) {\n        param = this[keys[i]];\n        rawVal = paramValues[keys[i]];\n        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n          break; // There was no parameter value, but the param is optional\n        normalized = param.type.$normalize(rawVal);\n        if (!param.type.is(normalized))\n          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n        encoded = param.type.encode(normalized);\n        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n      }\n      return true;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {function} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|function} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. \n   * \n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|function} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n      //if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n         var url = urlMatcher.format(params || {});\n\n        // Handle the special hash param, if needed\n        if (url !== null && params && params['#']) {\n            url += '#' + params['#'];\n        }\n\n        $location.url(url);\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n\n        isHtml5 = isHtml5 && $sniffer.history;\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n\n        // Handle special hash param, if needed\n        if (url !== null && params && params['#']) {\n          url += '#' + params['#'];\n        }\n\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {string|object=} stateConfig.parent\n   * <a id='parent'></a>\n   * Optionally specifies the parent state of this state.\n   *\n   * <pre>parent: 'parentState'</pre>\n   * <pre>parent: parentState // JS variable</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n   *   more details on acceptable patterns )\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   * </pre>\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\n    var TransitionPrevented = $q.reject(new Error('transition prevented'));\n    var TransitionAborted = $q.reject(new Error('transition aborted'));\n    var TransitionFailed = $q.reject(new Error('transition failed'));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) return TransitionSuperseded;\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved,\n     * controllers reinstantiated, and events re-fired.\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n     * @example\n     * <pre>\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n     * //and current state is 'contacts.detail.item'\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload(state) {\n      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. Only parameters specified in the state definition can be overridden, new \n     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n     *    have changed.  It will reload the resolves and views of the current state and parent states.\n     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n     *    the transition reloads the resolves and views for that matched state, and all its children states.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *    if String, then will reload the state with the name given in reload, and any children.\n     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      // Store the hash param for later (since it will be stripped out by various methods)\n      var hash = toParams['#'];\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      } else if (isString(options.reload) || isObject(options.reload)) {\n        if (isObject(options.reload) && !options.reload.name) {\n          throw new Error('Invalid reload state object');\n        }\n        \n        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n        if (options.reload && !reloadState) {\n          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        }\n\n        while (state && state === fromPath[keep] && state !== reloadState) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n        if (hash) toParams['#'] = hash;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n        if (options.location && to.navigable && to.navigable.url) {\n          $urlRouter.push(to.navigable.url, toParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n          $urlRouter.update(true);\n        }\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n      \n      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n      if (hash) toParams['#'] = hash;\n      \n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n          if ($state.transition == null) $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }, function (error) {\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n            $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      function resolveViews() {\n        var viewsPromises = [];\n\n        // Resolve template and dependencies for all views.\n        forEach(state.views, function (view, name) {\n          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n          injectables.$template = [ function () {\n            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n          }];\n\n          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n            // References to the controller (only instantiated at link time)\n            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n              var injectLocals = angular.extend({}, injectables, dst.globals);\n              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n            } else {\n              result.$$controller = view.controller;\n            }\n            // Provide access to the state itself for internal use\n            result.$$state = state;\n            result.$$controllerAs = view.controllerAs;\n            dst[name] = result;\n          }));\n        });\n\n        return $q.all(viewsPromises).then(function(){\n          return dst.globals;\n        });\n      }\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(resolveViews).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n      function notSearchParam(key) {\n        return fromAndToState.params[key].location != \"search\";\n      }\n      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n      return nonQueryParamSet.$$equals(fromParams, toParams);\n    }\n\n    // If reload was not explicitly requested\n    // and we're transitioning to the same state we're already in\n    // and    the locals didn't change\n    //     or they changed in a way that doesn't merit reloading\n    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n    // Then return true.\n    if (!options.reload && to === from &&\n      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .factory('$stateParams', function () { return {}; })\n  .provider('$state', $StateProvider);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\nvar ngMajorVer = angular.version.major;\nvar ngMinorVer = angular.version.minor;\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * @param {string=} noanimation If truthy, the non-animated renderer will be selected (no animations\n * will be applied to the ui-view)\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n * \n * @example\n * A view can be unnamed or named. \n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div> \n * \n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a \n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div> \n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n * \n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * But typically you'll only use the views property if you name your view or have more than one view \n * in the same template. There's not really a compelling reason to name a view if its the only one, \n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre> \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div> \n * <div ui-view=\"data\"></div> \n * </pre>\n * \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = {\n      enter: function (element, target, cb) { target.after(element); cb(); },\n      leave: function (element, cb) { element.remove(); cb(); }\n    };\n\n    if (!!attrs.noanimation) return statics;\n\n    function animEnabled(element) {\n      if (ngMajorVer === 1 && ngMinorVer >= 4) return !!$animate.enabled(element);\n      if (ngMajorVer === 1 && ngMinorVer >= 2) return !!$animate.enabled();\n      return (!!$animator);\n    }\n\n    // ng 1.2+\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          if (!animEnabled(element)) {\n            statics.enter(element, target, cb);\n          } else if (angular.version.minor > 2) {\n            $animate.enter(element, null, target).then(cb);\n          } else {\n            $animate.enter(element, null, target, cb);\n          }\n        },\n        leave: function(element, cb) {\n          if (!animEnabled(element)) {\n            statics.leave(element, cb);\n          } else if (angular.version.minor > 2) {\n            $animate.leave(element).then(cb);\n          } else {\n            $animate.leave(element, cb);\n          }\n        }\n      };\n    }\n\n    // ng 1.1.5\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics;\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope);\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          var _previousEl = previousEl;\n          var _currentScope = currentScope;\n\n          if (_currentScope) {\n            _currentScope._willBeDestroyed = true;\n          }\n\n          function cleanOld() {\n            if (_previousEl) {\n              _previousEl.remove();\n            }\n\n            if (_currentScope) {\n              _currentScope.$destroy();\n            }\n          }\n\n          if (currentEl) {\n            renderer.leave(currentEl, function() {\n              cleanOld();\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n          } else {\n            cleanOld();\n            previousEl = null;\n          }\n\n          currentEl = null;\n          currentScope = null;\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals || scope._willBeDestroyed) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoading\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           *\n           * Fired once the view **begins loading**, *before* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          newScope.$emit('$viewContentLoading', name);\n\n          var clone = $transclude(newScope, function(clone) {\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          currentScope.$emit('$viewContentLoaded', name);\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          locals.$element = $element;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n          }\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var inherited = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\nfunction getTypeInfo(el) {\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n  var isForm = el[0].nodeName === \"FORM\";\n\n  return {\n    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n    clickable: !isForm\n  };\n}\n\nfunction clickHook(el, $state, $timeout, type, current) {\n  return function(e) {\n    var button = e.which || e.button, target = current();\n\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n      var transition = $timeout(function() {\n        $state.go(target.state, target.params, target.options);\n      });\n      e.preventDefault();\n\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\n      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\n      e.preventDefault = function() {\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n      };\n    }\n  };\n}\n\nfunction defaultOpts(el, $state) {\n  return { relative: stateContext(el) || $state.$current, inherit: true };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n * URL, the directive will automatically generate & update the `href` attribute via\n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n * the link will trigger a state transition with optional parameters.\n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative\n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the\n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n *\n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n      var def    = { state: ref.state, href: null, params: null };\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n\n      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\n      var update = function(val) {\n        if (val) def.params = angular.copy(val);\n        def.href = $state.href(ref.state, def.params, def.options);\n\n        if (active) active.$$addStateInfo(ref.state, def.params);\n        if (def.href !== null) attrs.$set(type.attr, def.href);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n        def.params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (!type.clickable) return;\n      element.bind(\"click\", clickHook(element, $state, $timeout, type, function() { return def; }));\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-state\n *\n * @requires ui.router.state.uiSref\n *\n * @restrict A\n *\n * @description\n * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n * params and override options.\n *\n * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#href $state.href()}\n * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n */\n$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDynamicDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n      var def    = { state: null, params: null, options: null, href: null };\n\n      function runStateRefLink (group) {\n        def.state = group[0]; def.params = group[1]; def.options = group[2];\n        def.href = $state.href(def.state, def.params, def.options);\n\n        if (active) active.$$addStateInfo(def.state, def.params);\n        if (def.href) attrs.$set(type.attr, def.href);\n      }\n\n      scope.$watch(watch, runStateRefLink, true);\n      runStateRefLink(scope.$eval(watch));\n\n      if (!type.clickable) return;\n      element.bind(\"click\", clickHook(element, $state, $timeout, type, function() { return def; }));\n    }\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * It is also possible to pass ui-sref-active an expression that evaluates\n * to an object hash, whose keys represent active class names and whose\n * values represent the respective state names/globs.\n * ui-sref-active will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * @Example\n * Given the following template, with \"admin\" being an abstract state:\n * <pre>\n * <div ui-sref-active=\"{'active': 'admin.*'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * </pre>\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied\n * to both the <div> and <a> elements. It is important to note that the state\n * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\n      try {\n        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n      } catch (e) {\n        // Do nothing. uiSrefActive is not a valid expression.\n        // Fall back to using $interpolate below\n      }\n      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n      if (isObject(uiSrefActive)) {\n        forEach(uiSrefActive, function(stateOrName, activeClass) {\n          if (isString(stateOrName)) {\n            var ref = parseStateRef(stateOrName, $state.current.name);\n            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n          }\n        });\n      }\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$addStateInfo = function (newState, newParams) {\n        // we already got an explicit state provided by ui-sref-active, so we\n        // shadow the one that comes from ui-sref\n        if (isObject(uiSrefActive) && states.length > 0) {\n          return;\n        }\n        addState(newState, newParams, uiSrefActive);\n        update();\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      function addState(stateName, stateParams, activeClass) {\n        var state = $state.get(stateName, stateContext($element));\n        var stateHash = createStateHash(stateName, stateParams);\n\n        states.push({\n          state: state || { name: stateName },\n          params: stateParams,\n          hash: stateHash\n        });\n\n        activeClasses[stateHash] = activeClass;\n      }\n\n      /**\n       * @param {string} state\n       * @param {Object|string} [params]\n       * @return {string}\n       */\n      function createStateHash(state, params) {\n        if (!isString(state)) {\n          throw new Error('state should be a string');\n        }\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        params = $scope.$eval(params);\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        return state;\n      }\n\n      // Update route state\n      function update() {\n        for (var i = 0; i < states.length; i++) {\n          if (anyMatch(states[i].state, states[i].params)) {\n            addClass($element, activeClasses[states[i].hash]);\n          } else {\n            removeClass($element, activeClasses[states[i].hash]);\n          }\n\n          if (exactMatch(states[i].state, states[i].params)) {\n            addClass($element, activeEqClass);\n          } else {\n            removeClass($element, activeEqClass);\n          }\n        }\n      }\n\n      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n      function removeClass(el, className) { el.removeClass(className); }\n      function anyMatch(state, params) { return $state.includes(state.name, params); }\n      function exactMatch(state, params) { return $state.is(state.name, params); }\n\n      update();\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n  .directive('uiState', $StateRefDynamicDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state, params) {\n    return $state.is(state, params);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state, params, options) {\n    return $state.includes(state, params, options);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-router/release/angular-ui-router.js\n ** module id = 111\n ** module chunks = 0 5\n **/","export default class collectionSlotsController {\n  static get UID(){\n    return \"collectionSlotsController\"\n  }\n\n  hideSpinner() {\n\n    this.Spinner.hide('collectionSlots');\n  }\n\n\n  constructor($stateParams, Spinner, CollectionSlotsService) {\n  \t\"ngInject\";\n\n    this.Spinner = Spinner;\n  \tthis.loaded = false;\n\n    this.Spinner.show('collectionSlots');\n\n    CollectionSlotsService.getCollectionSlots({\n      venueId: $stateParams.venueId\n    }).then((data)=>{\n\n      console.log('collection slot service data here', data);\n\n      this.data = data;   \n      this.loaded = true;\n\n      this.hideSpinner();\n    }, () => {\n\n      this.data = {\n        collectionSlots: []\n      };\n      console.log('error collection slot service');\n      this.loaded = true;\n\n      this.hideSpinner();\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.controller.js\n **/","export default class collectionSlotsItemController {\n  static get UID(){\n    return \"collectionSlotsItemController\"\n  }\n\n  restoreOriginalValues() {\n\n    if (this.originalCollectionSlot){\n      angular.extend(this.collectionSlot, this.originalCollectionSlot)\n      this.originalCollectionSlot = false;\n    }\n  }\n\n  contextualMenuCancel() {\n\n    this.restoreOriginalValues();\n    this.collectionSlot.$selected = false;\n\n    if (this.collectionSlot && !this.collectionSlot.id) {\n      this.cardItemList.deleteItem(this.collectionSlot);\n    }\n  }\n\n  isValidEntity (entity) {\n\n    return entity && entity.name;\n  }\n\n  buildEntityToCollectionSlot (entity) {\n\n    this.collectionSlot = entity;\n    this.collectionSlot.start = entity.$start * entity.$startFactor;\n    this.collectionSlot.end = entity.$end * entity.$endFactor;\n\n    if (!this.collectionSlot.$hasSteps) {\n      this.collectionSlot.step = null;\n    }\n  }\n\n  contextualMenuSuccess(entity){\n    if (this.collectionSlot && this.isValidEntity(entity)){\n      this.buildEntityToCollectionSlot(entity);\n\n      if (!this.collectionSlot.id){\n        this.Spinner.show(\"collection-slot-create\");\n        this.collectionSlotsListCtrl.createCollectionSlot(this.collectionSlot)\n          .then((_collectionSlot)=>{\n\n            this.cardItemList.onUpdateItem(this.collectionSlot, _collectionSlot);\n            this.contextualMenu.hide();\n            this.Spinner.hide(\"collection-slot-create\");\n            this.Snack.show(this.gettextCatalog.getString('Collection Slot created'));\n          }, (err)=>{\n            console.log('error on save collection slot', err);\n            this.Spinner.hide(\"collection-slot-create\");\n            this.Snack.showError(this.gettextCatalog.getString('Error saving collection slot'));\n          })\n\n      } else {\n        this.updateCollectionSlot().then(()=>{\n          this.contextualMenu.hide();\n          this.collectionSlot.$selected = false;\n        })\n      }\n    }\n  }\n\n  updateCollectionSlot(){\n\n    this.Spinner.show(\"collection-slot-update\");\n    return this.$q((resolve, reject)=>{\n      this.collectionSlot.update()\n        .then((_collectionSlot)=>{\n          this.Snack.show(this.gettextCatalog.getString('Collection Slot updated'));\n          resolve(_collectionSlot);\n      },()=>{\n        reject();\n        this.Snack.showError(this.gettextCatalog.getString('Error updating collection slot'));\n      }).then(()=>{\n        this.Spinner.hide(\"collection-slot-update\");\n      })\n    });\n  }\n\n  onEdit ($event) {\n\n    this.originalCollectionSlot  = angular.copy(this.collectionSlot);\n    this.cardItemList.selectItem(this.collectionSlot);\n    this.contextual.showMenu(this.type, this.collectionSlot, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n    $event.stopPropagation();\n  }\n\n  showSlotUsedDialog () {\n\n    this.DialogService.delete(this.ErrorService.COLLECTION_SLOT_SCHEDULE.title, this.ErrorService.COLLECTION_SLOT_SCHEDULE.message)\n      .then(() => {\n\n        this.delete();\n      });\n  }\n\n  delete () {\n\n    if (!this.Spinner.isCodeVisible('collection-slot-delete')) {\n      this.Spinner.show(\"collection-slot-delete\");\n    }\n\n    let promise = this.collectionSlot.remove();\n    promise.then(()=> {\n\n      this.EventService.removeCollectionSlotFromSchedules(this.collectionSlot.id);\n\n      this.cardItemList.onItemDeleted(this.collectionSlot);\n      if (this.onItemDeleted){\n        this.onItemDeleted({item: this.collectionSlot});\n      }\n      this.Snack.show('Collection Slot deleted');\n      this.Spinner.hide(\"collection-slot-delete\");\n    })\n    .catch((err)=>{\n      console.log('error on delete,', err);\n      this.Spinner.hide(\"collection-slot-delete\")\n\n      this.Snack.showError('Collection slot not deleted');\n    });\n  }\n\n  onDelete(){\n\n    this.DialogService.delete(this.LabelService.TITLE_DELETE_COLLECTION_SLOT, this.LabelService.CONTENT_DELETE_COLLECTION_SLOT)\n      .then(()=>{\n          this.Spinner.show(\"collection-slot-delete\");\n\n          this.collectionSlot.getSchedules()\n            .then((schedules) => {\n\n              if (schedules.length > 0) {\n                this.Spinner.hide(\"collection-slot-delete\")\n                this.showSlotUsedDialog();\n              } else {\n                this.delete();\n              }\n            }, () => {\n\n              this.Spinner.hide(\"collection-slot-delete\")\n              this.Snack.showError('Collection slot not deleted');\n            });\n\n      });\n  }\n\n  constructor($q, $timeout, Spinner, Snack, contextualMenu, contextual, DialogService, LabelService, ErrorService, gettextCatalog, EventService) {\n  \t\"ngInject\";\n\n    this.$q = $q;\n  \tthis.$timeout = $timeout;\n  \tthis.Spinner = Spinner;\n  \tthis.Snack = Snack;\n  \tthis.contextualMenu = contextualMenu;\n  \tthis.contextual = contextual;\n  \tthis.DialogService = DialogService;\n    this.LabelService = LabelService;\n  \tthis.ErrorService = ErrorService;\n    this.gettextCatalog = gettextCatalog;\n  \tthis.EventService = EventService;\n\n  \tthis.type = 'collectionSlot';\n\n    if (this.collectionSlot && !this.collectionSlot.id) {\n        this.contextual.showMenu(this.type, this.collectionSlot, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.controller.js\n **/","export default class collectionSlotsListController {\n  static get UID(){\n    return \"collectionSlotsListController\"\n  }\n\n  showCreateCollectionSlot(){\n\n    let isCreating = this.collectionSlots.filter(function (item) {\n\n      return item.id === undefined;\n    }).length;\n\n    if (isCreating){\n      console.log(\"Not showing collection slot new, already showing\")\n      return;\n    }\n\n    let slot = new Preoday.PickupSlot({\n      venueId: this.VenueService.currentVenue.id,\n      $selected: true,\n    });\n\n    this.collectionSlots.push(slot);\n  }\n\n  createCollectionSlot (newData) {\n\n    let deferred = this.$q.defer();\n\n    newData.position = 0;\n\n    this.CollectionSlotsService.save(newData)\n        .then((slot)=>{\n\n        deferred.resolve(slot);\n      }, (err) => {\n        console.log('fail collection slot saved', err);\n        deferred.reject(err);\n      });\n\n    return deferred.promise;\n  }\n\n  /* @ngInject */\n  constructor($q, VenueService, CollectionSlotsService) {\n  \t'ngInject';\n\n  \tthis.$q = $q;\n    this.VenueService = VenueService;\n    this.CollectionSlotsService = CollectionSlotsService;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.controller.js\n **/","export default class eventController {\n  static get UID(){\n    return \"eventController\"\n  }\n\n  restoreOriginalValues() {\n\n    if (this.originalEvent){\n      delete this.originalEvent.schedules;\n      angular.extend(this.event, this.originalEvent);\n      this.originalEvent = false;\n    }\n  }\n\n  toggleExpanded($event){\n    if (this.event.$expanding){\n      return;\n    }\n    if ($event){\n      var el = angular.element($event.target);\n      while (el[0]) {\n        el = angular.element(el);\n        if (el.hasClass('sv-long-pressing')){\n          return;\n        }\n        el = el.parent();\n      }\n    }\n    this.cardItemList.expandItem(this.event);\n    this.contextualMenu.close();\n  }\n\n  contextualMenuCancel() {\n\n    this.restoreOriginalValues();\n    this.event.$selected = false;\n\n    if (this.event && !this.event.id) {\n      this.cardItemList.deleteItem(this.event);\n    }\n  }\n\n  contextualMenuSuccess(entity){\n    if (this.event && entity && entity.name){\n      this.event = entity;\n\n      if (!this.event.schedules.length) {\n        this.event.$selected = false;\n        this.contextualMenu.hide();\n        return this.addEventSchedule();\n      }\n\n      if (!this.event.id){\n        this.createEvent();\n      } else {\n        this.updateEvent().then(()=>{\n          this.contextualMenu.hide();\n          this.event.$selected = false;\n        });\n      }\n    }\n  }\n\n  createEvent () {\n\n    let deferred = this.$q.defer();\n\n    this.Spinner.show(\"event-create\");\n    this.eventListCtrl.createEvent(this.event)\n      .then((_event)=>{\n\n        this.event.$deleted = false;\n        this.event.$selected = false;\n\n        this.$timeout(() => {\n\n          angular.extend(this.event, _event);\n\n          this.contextualMenu.hide();\n          this.Spinner.hide(\"event-create\");\n          this.Snack.show(this.gettextCatalog.getString('Event created'));\n\n          deferred.resolve(this.event);\n        });\n      }, (err)=>{\n        console.log('error on save event', err);\n        this.Spinner.hide(\"event-create\");\n        this.Snack.showError(this.gettextCatalog.getString('Error saving event'));\n\n        deferred.reject(err);\n      });\n\n    return deferred.promise;\n  }\n\n  updateEvent(){\n\n    this.Spinner.show(\"event-update\");\n    return this.$q((resolve, reject)=>{\n      this.EventService.update(this.event)\n        .then((_event)=>{\n          this.Snack.show(this.gettextCatalog.getString('Event updated'));\n          resolve(_event);\n      },(err) => {\n        reject();\n        this.Snack.showError(this.gettextCatalog.getString('Error updating event'));\n      }).then(()=>{\n        this.Spinner.hide(\"event-update\");\n      })\n    });\n  }\n\n  addEventSchedule () {\n\n    if (!this.event.schedules.length) {\n      if (!this.event.$expanded) {\n        this.cardItemList.expandItem(this.event);\n      }\n\n      this.event.schedules.push(this.EventScheduleService.getNewScheduleModel(this.event.id));\n    }\n  }\n\n  onEdit ($event) {\n\n    this.event.$images = [];\n\n    if (this.event.image) {\n      this.event.$images.push({\n        image: this.event.image\n      });\n    }\n\n    this.event.$expanded = false;\n    this.originalEvent  = angular.copy(this.event);\n    this.cardItemList.selectItem(this.event);\n    this.showContextual();\n    $event.stopPropagation();\n  }\n\n  showOutletLocationWithOutletMessage() {\n\n    this.DialogService.show(this.ErrorService.EVENT_OUTLET_LOCATION.title, this.ErrorService.EVENT_OUTLET_LOCATION.message, [{\n        name: this.gettextCatalog.getString('Got it')\n      }]);\n  }\n\n  showOutletLocationWithoutChildren() {\n\n    this.DialogService.show(this.ErrorService.EVENT_OUTLET_LOCATION_NO_CHILDREN.title, this.ErrorService.EVENT_OUTLET_LOCATION_NO_CHILDREN.message, [{\n        name: this.gettextCatalog.getString('Got it')\n      }]);\n  }\n\n  onAddOutletLocation () {\n\n    if (!this.OutletLocationService.hasOutletLocations()) {\n      return;\n    }\n\n    this.cardItemList.selectItem(this.event);\n\n    this.contextual.showDrawer('eventOutletLocations')\n      .then((outletLocation) => {\n\n        this.event.$selected = false;\n\n        if (outletLocation.outletId) {\n          return this.showOutletLocationWithOutletMessage();\n        }\n\n        if (!outletLocation.hasChildren()) {\n          return this.showOutletLocationWithoutChildren();\n        }\n\n        if (this.event.outletLocationId !== outletLocation.id) {\n          this.event.outletLocationId = outletLocation.id;\n          this.updateEvent()\n            .then(this.buildOutletLocation.bind(this));\n        }\n        console.log('outletLocation selected', outletLocation);\n      }, () => {\n\n        this.event.$selected = false;\n        console.log('outletLocation cancelled');\n      });\n  }\n\n  removeOutletLocation () {\n\n    this.event.outletLocationId = null;\n    this.updateEvent()\n      .then(this.buildOutletLocation.bind(this));\n  }\n\n  onDelete(){\n\n    this.DialogService.delete(this.LabelService.TITLE_DELETE_EVENT, this.LabelService.CONTENT_DELETE_EVENT)\n      .then(()=>{\n          this.Spinner.show(\"event-delete\");\n\n          this.event.visible = 0;\n\n          let promise = this.event.update();\n\n          promise.then(()=>{\n\n              this.removeEventItem();\n              this.Snack.show('Event deleted');\n              this.Spinner.hide(\"event-delete\");\n          })\n          .catch((err)=>{\n            this.Spinner.hide(\"event-delete\")\n\n            this.Snack.showError('Event not deleted');\n          });\n      });\n  }\n\n  removeEventItem () {\n\n    this.cardItemList.onItemDeleted(this.event);\n    if (this.onItemDeleted){\n      this.onItemDeleted({item:this.event});\n    }\n  }\n\n  buildOutletLocation() {\n\n    this.outletLocations = [];\n\n    if (this.event && this.event.outletLocationId) {\n\n      let outletLocation = this.OutletLocationService.findById(this.event.outletLocationId);\n\n      if (outletLocation) {\n        this.outletLocations.push(outletLocation);\n      }\n    }\n  }\n\n  getAddOutletLocationMessage () {\n\n    if (this.OutletLocationService.hasOutletLocations()) {\n      return this.gettextCatalog.getString('Set outlet configuration');\n    }\n\n    return this.gettextCatalog.getString(\"You don't have outlet locations yet\");\n  }\n\n  showContextual () {\n\n    this.contextual.showMenu(this.type, this.event, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this), {\n        doneButtonText: this.event.schedules.length < 1 ? this.gettextCatalog.getString('Add schedule') : null\n      });\n  }\n\n  hasAnyScheduleWithoutSlots () {\n\n    return this.event.schedules.filter((schedule) => {\n      return schedule.id && !schedule.hasSlots();\n    }).length > 0;\n  }\n\n  constructor($q, $timeout, Spinner, Snack, contextualMenu, contextual, DialogService, LabelService, ErrorService, EventService, EventScheduleService, gettextCatalog, OutletLocationService) {\n  \t\"ngInject\";\n\n    this.$q = $q;\n  \tthis.$timeout = $timeout;\n  \tthis.Spinner = Spinner;\n  \tthis.Snack = Snack;\n  \tthis.contextualMenu = contextualMenu;\n  \tthis.contextual = contextual;\n  \tthis.DialogService = DialogService;\n    this.LabelService = LabelService;\n  \tthis.ErrorService = ErrorService;\n    this.EventService = EventService;\n    this.EventScheduleService = EventScheduleService;\n    this.gettextCatalog = gettextCatalog;\n  \tthis.OutletLocationService = OutletLocationService;\n\n  \tthis.type = 'event';\n\n    this.buildOutletLocation();\n\n    if (this.event && !this.event.id) {\n      this.showContextual();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventList/event/event.controller.js\n **/","export default class eventListController {\n  static get UID(){\n    return \"eventListController\"\n  }\n\n  showCreateEvent(){\n\n    let isCreating = this.events.filter(function (item) {\n\n      return item.id === undefined;\n    }).length;\n\n    if (isCreating){\n      console.log(\"Not showing event new, already showing\")\n      return;\n    }\n\n    let event = new Preoday.Event({\n      venueId: this.VenueService.currentVenue.id,\n      visible: 1,\n      $images: [],\n      schedules: [],\n      $selected: true,\n    });\n\n    this.events.push(event);\n  }\n\n  createEvent (newData) {\n\n    let deferred = this.$q.defer();\n\n    // newData.position = 0;\n\n    this.EventService.save(newData)\n        .then((event)=>{\n\n        deferred.resolve(event);\n      }, (err) => {\n\n        deferred.reject(err);\n      });\n\n    return deferred.promise;\n  }\n\n  /* @ngInject */\n  constructor(VenueService, EventService, $q) {\n  \t'ngInject';\n\n    this.VenueService = VenueService;\n    this.EventService = EventService;\n    this.$q = $q;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventList/eventList.controller.js\n **/","// Import Style\nimport './eventList.scss';\n\n\n\n\n// Import internal modules\nimport controller from './eventList.controller';\nimport directive from './eventList.directive';\n\n\n\nexport default angular.module(\"eventList\" , [])\n\n\n  .controller(controller.UID, controller)\n  .directive(\"eventList\", directive)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventList/index.js\n **/","export default class eventScheduleController {\n  static get UID(){\n    return \"eventScheduleController\"\n  }\n\n  restoreOriginalValues(){\n    if (this.originalSchedule){\n      angular.extend(this.schedule, this.originalSchedule)\n      this.schedule.$startDate = null;\n      this.schedule.$endDate = null;\n      this.originalSchedule = false;\n    }\n  }\n\n  contextualMenuCancel(){\n    this.restoreOriginalValues();\n    this.schedule.$selected = false;\n\n    if (this.schedule && !this.schedule.id) {\n      this.cardItemList.deleteItem(this.schedule);\n      this.eventScheduleListCtrl.cancelSchedule();\n    }\n  }\n\n  formatDate (date) {\n\n    var date = moment(date.getTime());\n\n    return date.format('YYYY-MM-DDTHH:mm:00.000');\n  }\n\n  concatStartDateWithTime (entity) {\n\n    var date = moment(entity.$startDate.getTime());\n    var dateTimer = moment(entity.$startTime.getTime());\n\n    date.hours(dateTimer.hours());\n    date.minutes(dateTimer.minutes());\n\n    entity.$startDate = date.toDate();\n\n    return this.formatDate(entity.$startDate);\n  }\n\n  buildEntityToSchedule (entity) {\n\n    this.schedule = entity;\n\n    this.schedule.startDate = this.concatStartDateWithTime(entity);\n\n    if (this.schedule.isOnceFrequency()) {\n      this.schedule.endDate = this.schedule.startDate;\n    } else {\n      this.schedule.endDate = this.formatDate(entity.$endDate);\n    }\n  }\n\n  contextualMenuSuccess(entity){\n    if (this.schedule && entity && entity.pickupSlots && entity.pickupSlots.length) {\n      this.buildEntityToSchedule(entity);\n\n      if (!this.schedule.id) {\n        this.eventScheduleListCtrl.createSchedule(this.schedule)\n          .then((_schedule)=>{\n\n            this.cardItemList.onUpdateItem(this.schedule, _schedule);\n            this.contextualMenu.hide();\n            this.Spinner.hide(\"event-schedule-create\");\n          }, (err)=>{\n            console.log('error on save schedule', err);\n            this.Spinner.hide(\"event-schedule-create\");\n            this.Snack.showError(this.gettextCatalog.getString('Error saving schedule'));\n          })\n\n      } else {\n        this.updateSchedule().then(()=>{\n          this.contextualMenu.hide();\n          this.schedule.$selected = false;\n        })\n      }\n    }\n  }\n\n  updateSchedule(){\n\n    this.Spinner.show(\"event-schedule-update\");\n    return this.$q((resolve, reject)=>{\n      this.schedule.update()\n        .then((_schedule)=>{\n          this.Snack.show(this.gettextCatalog.getString('Schedule updated'));\n\n          this.eventScheduleListCtrl.buildScheduleTimestamp(this.schedule);\n          resolve(_schedule);\n        },(err) => {\n          reject();\n          this.Snack.showError(this.gettextCatalog.getString('Error updating schedule'));\n        }).then(()=>{\n          this.Spinner.hide(\"event-schedule-update\");\n        })\n    });\n  }\n\n  onEdit ($event) {\n\n    this.originalSchedule  = angular.copy(this.schedule);\n    this.cardItemList.selectItem(this.schedule);\n    this.contextual.showMenu(this.type, this.schedule, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n    $event.stopPropagation();\n  }\n\n  onDelete(){\n\n    if (this.eventScheduleListCtrl.getSchedulesCount() === 1) {\n      return this.showCannotDeleteScheduleDialog();\n    }\n\n    this.DialogService.delete(this.LabelService.TITLE_DELETE_SCHEDULE, this.LabelService.CONTENT_DELETE_SCHEDULE)\n      .then(()=>{\n\n        this.Spinner.show(\"event-schedule-delete\");\n\n        this.schedule.visible = 0;\n\n        let promise = this.schedule.update();\n        promise.then(()=>{\n            this.cardItemList.onItemDeleted(this.schedule);\n            if (this.onItemDeleted){\n              this.onItemDeleted({item:this.schedule});\n            }\n            this.Snack.show('Schedule deleted');\n            this.Spinner.hide(\"event-schedule-delete\");\n        })\n        .catch((err)=>{\n          console.log('catch here', err);\n          this.Spinner.hide(\"event-schedule-delete\")\n\n          if (err && err instanceof Object && err.message && err.message.indexOf('event') !== -1) {\n            this.showCannotDeleteScheduleDialog(err);\n          } else {\n            this.Snack.showError(this.gettextCatalog.getString('Schedule not deleted'));\n          }\n        });\n      });\n  }\n\n  showCannotDeleteScheduleDialog () {\n\n    this.DialogService.show(this.ErrorService.SCHEDULE_EVENT.title, this.ErrorService.SCHEDULE_EVENT.message, [{\n        name: this.gettextCatalog.getString('GOT IT')\n      }]);\n  }\n\n  getScheduleTitle () {\n\n    if (!this.schedule.$startDate && !this.schedule.startDate && !this.schedule.$endDate && !this.schedule.endDate) {\n      return '&nbsp;';\n    }\n\n    let hasStartDate = this.schedule.$startDate || this.schedule.startDate;\n    let hasEndDate = this.schedule.$endDate || this.schedule.endDate;\n\n    switch (this.schedule.freq) {\n      case this.EventScheduleFrequency.ONCE:\n        return moment(this.schedule.$startDate || this.schedule.startDate).format('DD/MM/YYYY');\n\n      default:\n        return [\n            hasStartDate ? moment(this.schedule.$startDate || this.schedule.startDate).format('DD/MM/YYYY') : '',\n            hasEndDate ? moment(this.schedule.$endDate || this.schedule.endDate).format('DD/MM/YYYY') : ''\n        ].join(' - ');\n    }\n  }\n\n  getScheduleTime () {\n\n    if (!this.schedule.$startTime && !this.schedule.startDate) {\n      return '&nbsp;';\n    }\n\n    return moment(this.schedule.$startTime || this.schedule.startDate).format('HH:mm');\n  }\n\n  shouldShowWarningSlots () {\n\n    return this.schedule.id && !this.schedule.hasSlots();\n  }\n\n  constructor($q, $timeout, Spinner, Snack, contextualMenu, contextual, MenuService, DialogService, LabelService, gettextCatalog, EventScheduleFrequency, ErrorService) {\n  \t\"ngInject\";\n\n    this.$q = $q;\n  \tthis.$timeout = $timeout;\n  \tthis.Spinner = Spinner;\n  \tthis.Snack = Snack;\n  \tthis.contextualMenu = contextualMenu;\n  \tthis.contextual = contextual;\n  \tthis.DialogService = DialogService;\n  \tthis.LabelService = LabelService;\n    this.gettextCatalog = gettextCatalog;\n    this.EventScheduleFrequency = EventScheduleFrequency;\n  \tthis.ErrorService = ErrorService;\n\n  \tthis.type = 'eventSchedule';\n\n    if (this.schedule && !this.schedule.id) {\n      this.contextual.showMenu(this.type, this.schedule, this.contextualMenuSuccess.bind(this), this.contextualMenuCancel.bind(this));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.controller.js\n **/","export default class eventScheduleListController {\n  static get UID(){\n    return \"eventScheduleListController\"\n  }\n\n  showCreateSchedule() {\n\n    let isCreating = this.schedules.filter(function (item) {\n\n      return item.id === undefined;\n    }).length;\n\n    if (isCreating){\n      console.log(\"Not showing schedule new, already showing\")\n      return;\n    }\n\n    this.schedules.push(this.EventScheduleService.getNewScheduleModel(this.event.id));\n  }\n\n  createSchedule (newData) {\n\n    let deferred = this.$q.defer();\n\n    // newData.position = 0;\n\n    if (!this.event.id) {\n      this.eventCtrl.createEvent()\n        .then((event) => {\n\n          this.buildSchedules(true);\n          deferred.resolve(event.schedules[0]);\n        }, deferred.reject);\n    } else {\n      this.Spinner.show(\"event-schedule-create\");\n      this.EventScheduleService.save(newData)\n          .then((schedule)=>{\n\n          this.buildScheduleTimestamp(schedule);\n\n          this.Snack.show(this.gettextCatalog.getString('Schedule created'));\n\n          deferred.resolve(schedule);\n        }, (err) => {\n\n          deferred.reject(err);\n        });\n    }\n\n    return deferred.promise;\n  }\n\n  cancelSchedule () {\n\n    if (!this.event.id) {\n      this.eventCtrl.removeEventItem();\n    }\n  }\n\n  getSchedulesCount () {\n\n    return this.schedules.length;\n  }\n\n  recalculateHeight() {\n\n    this.event.$expanding = true;\n    let maxHeight = 0;\n    this.schedules.forEach((i)=>{\n      maxHeight += 50 + 16;\n    });\n\n    // (button + height + margin-top + margin-bottom)\n    maxHeight = maxHeight + (50 + 8 + 32) + \"px\";\n    if (this.el[0].style.maxHeight !== maxHeight) {\n      this.el[0].style.maxHeight = maxHeight;\n    } else {\n      this.event.$expanding = false;\n    }\n  }\n\n  buildScheduleTimestamp(schedule) {\n\n    schedule.$startTimestamp = moment(schedule.startDate).valueOf();\n    schedule.$endTimestamp = moment(schedule.endDate).valueOf();\n  }\n\n  buildSchedules (shouldShow) {\n\n    this.schedules.forEach((schedule)=> {\n\n      schedule.$show = !!shouldShow;\n      this.buildScheduleTimestamp(schedule);\n    });\n  }\n\n  /* @ngInject */\n  constructor($scope, $timeout, $q, Spinner, Snack, gettextCatalog, EventScheduleService) {\n    \"ngInject\";\n\n    this.Spinner = Spinner;\n    this.Snack = Snack;\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.gettextCatalog = gettextCatalog;\n    this.EventScheduleService = EventScheduleService;\n\n    this.event.$expanding = false;\n\n    this.buildSchedules();\n\n    //watch for animation only if we're in a section\n    $scope.$watch(() => {\n\n      return this.event.$expanded;\n    },(newVal, oldVal)=>{\n\n      if(newVal){ // if expanded = true;\n        this.schedules.forEach((i)=>i.$show = true)\n        if (this.schedules.length === 0){\n          this.recalculateHeight();\n        }\n      } else if (oldVal){ //if expanded = false and it was true\n        this.el[0].style.maxHeight = 0;\n        this.event.$expanding = true;\n        $timeout(()=>{\n          this.schedules.forEach((i)=>i.$show = false)\n          this.event.$expanding = false;\n        }, 1000)\n\n      }\n    }, true);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.controller.js\n **/","// Import Style\nimport './eventScheduleList.scss';\n\n\n// Import internal modules\nimport controller from './eventScheduleList.controller';\nimport directive from './eventScheduleList.directive';\n\nexport default angular.module(\"eventScheduleList\" , ['cardItemList'])\n\n\n  .controller(controller.UID, controller)\n  .directive(\"eventScheduleList\", directive)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/index.js\n **/","\nexport default class eventListViewController {\n  static get UID(){\n    return \"eventListViewController\"\n  }\n\n  hideSpinner() {\n\n    this.Spinner.hide('events');\n  }\n\n  getEventByDate (date) {\n\n    let dateFormat = moment(date).format('DD/MM/YYYY');\n\n    let events = this.expandedSchedules[dateFormat] || [];\n\n    return events;\n  }\n\n  getDayEventsName (date) {\n\n    let events = this.getEventByDate(date);\n\n    let eventsName = events.map((event) => {\n\n      return '<span>' + event.name + '</span><br />';\n    }).join('');\n\n    let html = eventsName;\n\n    if (events.length > 1) {\n      eventsName = events.map((event) => {\n\n        return event.name + '\\n';\n      }).join('');\n\n      html = [\n                '<div>',\n                '<a ng-href title=\"' + eventsName + '\">' + events.length + ' ' + this.gettextCatalog.getString('events') + '</a>',\n                // '<md-tooltip>' + eventsName + '</md-tooltip>',\n                '</div>'\n              ].join('');\n    }\n\n    return html;\n  }\n\n  setDayContent (date) {\n\n    let eventsName = this.getDayEventsName(date);\n\n    if (eventsName) {\n      eventsName = this.$compile(eventsName)(this.$scope);\n      // console.log(eventsName[0].innerHTML);\n      eventsName = this.$sce.trustAsHtml(eventsName[0].innerHTML);\n      // console.log(eventsName);\n    }\n\n    this.MaterialCalendarData.data[this.MaterialCalendarData.getDayKey(date)] = eventsName || \"\";\n  }\n\n  toggleMode () {\n\n    this.Spinner.show('events');\n\n    if (!this.isCalendarMode()) {\n      this.expandSchedules();\n    } else {\n      this.expandedSchedules = {};\n    }\n\n\n    this.$timeout(() => {\n\n      this.calendarMode = !this.calendarMode;\n\n      this.Spinner.hide('events');\n    }, 500);\n  }\n\n  isCalendarMode () {\n\n    return this.calendarMode;\n  }\n\n  addExpandedScheduleItem(dates, event) {\n\n    for (var i = dates.length - 1; i >= 0; i--) {\n      let date = dates[i];\n\n      let dateFormat = moment(date).format('DD/MM/YYYY');\n      if (!this.expandedSchedules[dateFormat]) {\n        this.expandedSchedules[dateFormat] = [];\n      }\n\n      if (this.expandedSchedules[dateFormat].indexOf(event) === -1) {\n        this.expandedSchedules[dateFormat].push(event);\n      }\n    }\n  }\n\n  expandSchedules () {\n\n    for (var i = 0, len = this.data.events.length; i < len; i++) {\n      let event =  this.data.events[i];\n\n      for (var k = 0, kLen = event.schedules.length; k < kLen; k++) {\n        let schedule = event.schedules[k];\n\n        let dates = this.EventScheduleService.expandSchedule(schedule);\n        this.addExpandedScheduleItem(dates, event);\n      }\n    }\n  }\n\n  /* @ngInject */\n  constructor($scope, $q, $sce, $timeout, $compile, Spinner, EventService, VenueService, OutletLocationService, gettextCatalog, MaterialCalendarData, EventScheduleService) {\n  \t'ngInject';\n\n    this.$scope = $scope;\n    this.$sce = $sce;\n    this.$timeout = $timeout;\n    this.$compile = $compile;\n    this.Spinner = Spinner;\n    this.gettextCatalog = gettextCatalog;\n    this.MaterialCalendarData = MaterialCalendarData;\n    this.EventScheduleService = EventScheduleService;\n\n  \tthis.loaded = false;\n    this.calendarMode = false;\n    this.expandedSchedules = {};\n\n    this.Spinner.show('events');\n\n    this.calendar = {\n      selectedDate: null,\n      firstDayOfWeek: 0,\n      dayFormat: 'd',\n      tooltips: false\n    };\n\n    MaterialCalendarData.setDayContent = this.setDayContent.bind(this);\n\n    let filter = {\n      'after' : moment().subtract(7, 'days').format('YYYY/M/D')\n    };\n\n    $q.all([\n        EventService.getEvents(VenueService.currentVenue.id, filter),\n        OutletLocationService.getOutletLocations()\n      ]).then((results) => {\n\n        this.data = results[0];\n\n        this.loaded = true;\n        this.hideSpinner();\n      }, (err) => {\n\n        this.data = {\n          events: []\n        };\n        console.log('error events service', err);\n        this.loaded = true;\n\n        this.hideSpinner();\n      });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/eventList/eventList.controller.js\n **/","\nexport default class eventsController {\n  static get UID(){\n    return \"eventsController\";\n  }\n\n\n  constructor() {\n    \"ngInject\";\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/events.controller.js\n **/","exports = module.exports = require(\"./../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".collection-slots-view{width:100%}.collection-slots-view .main-content-right{margin-top:24px;width:calc(50% - 24px)}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.scss\n ** module id = 771\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".collection-slot-item{position:relative;margin:8px}.collection-slot-item>md-card{margin:0}.collection-slot-item>md-card>.card-title{min-height:46px;height:46px;font-size:13px}.collection-slot-item>md-card>.card-title .card-title-text{line-height:60px}.collection-slot-item>md-card>.card-title .visibility{top:-2px;position:relative}.collection-slot-item .sv-placeholder{margin:8px 22px}.collection-slot-item .card-item-actions md-card-actions{padding-top:5px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.scss\n ** module id = 772\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".collection-slots-list .sv-placeholder{min-height:46px!important}.collection-slots-list .card-item.card-item-new{max-height:48px;min-height:48px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.scss\n ** module id = 773\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".event{position:relative;margin:8px;transition:box-shadow .3s linear}.event>md-card{margin:0}.event>md-card>.card-title{min-height:58px;height:58px}.event>md-card>.card-title .card-title-text{line-height:60px}.event>md-card>.card-title .visibility{top:-2px;position:relative}.event>md-card>.card-title .warning-button{margin-right:12px;margin-left:0;padding:0;width:24px;height:24px}.event>md-card>.card-title .warning-button .warning-icon{color:#d0021b}.event .sv-placeholder{margin:8px 22px}.event .event-schedule-list{margin:0 22px}.event .event-schedule-list .event-schedule{margin-left:0;margin-right:0}.event .outlet-locations-chips{margin-top:-12px;padding-bottom:14px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/components/eventList/event/event.scss\n ** module id = 774\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".events-list .sv-placeholder{min-height:58px!important}.events-list .card-item.card-item-new{max-height:60px;min-height:60px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/components/eventList/eventList.scss\n ** module id = 775\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".event-schedule{margin:0;padding:0;position:relative}.event-schedule .card-item{margin:0}.event-schedule .card-item .hidden-card-actions{align-items:flex-start;padding-top:6px}.event-schedule .card-item .card-title{max-height:48px;min-height:auto;padding:0 14px}.event-schedule .card-item .card-title .card-title-text{font-size:13px;align-items:center}.event-schedule .card-item .card-title .schedule-name{flex:1;display:inline-block}.event-schedule .card-item .card-title .schedule-time{text-align:right;float:right}.event-schedule .card-item .card-title .warning-button{margin-right:12px;margin-left:0;padding:0;width:24px;height:24px}.event-schedule .card-item .card-title .warning-button .warning-icon{color:#d0021b}.event-schedule .card-item .size-wrapper{padding-bottom:5px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.scss\n ** module id = 776\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".event-schedule-list{transition:all 1s ease;overflow:hidden}.event-schedule-list .sv-placeholder{min-height:48px!important;margin:0}.event-schedule-list .event-schedule{margin:8px}.event-schedule-list .card-item:not(.card-item-new){margin:0}.event-schedule-list .card-item.card-item-new{margin-left:0;margin-right:0;max-height:48px;min-height:48px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.scss\n ** module id = 777\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".events-view{height:100%;width:100%}.events-view .main-content-right{margin-top:24px;width:calc(50% - 24px)}.events-view .events-toolbar{background:#eee;border-bottom:1px solid #ccc;min-height:50px;width:100%;font-size:14px;position:fixed;z-index:21;top:64px;padding-left:24px}.events-view .events-toolbar button md-icon{color:#0288d1!important;margin-right:8px}.events-view .edit-mode-button md-icon{margin-top:-4px}.events-view .content-calendar{padding:74px 24px 24px;height:100%}.events-view .content-calendar .md-toolbar-tools{background-color:#1893d6;color:#fff}.events-view .content-calendar .md-toolbar-tools h2{background:none;overflow:visible;font-size:17px}.events-view .content-calendar .md-toolbar-tools button span{display:none}.events-view .content-calendar .md-toolbar-tools button:after{content:\\\"\\\";display:inline-block;border-right:2.5px solid #fff;border-bottom:2.5px solid #fff;width:7.5px;height:7.5px;transform:rotate(-45deg)}.events-view .content-calendar .md-toolbar-tools button:first-child:after{border-right:0;border-left:2.5px solid #fff;transform:rotate(45deg)}.events-view .content-calendar md-content>div>div{color:rgba(0,0,0,.5);font-size:14px}.events-view .content-calendar md-content>div>div a{color:rgba(0,0,0,.5)}.events-view .content-calendar md-content>div>div button,.events-view .content-calendar md-content>div>div span{color:rgba(0,0,0,.5);font-size:12px;margin:0;width:100%;text-align:left;text-transform:none}.events-view .content-calendar md-content .active,.events-view .content-calendar md-content .md-whiteframe-12dp{box-shadow:none!important;background:none!important}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/eventList/eventList.scss\n ** module id = 778\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".events{height:100%}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./client/app/features/main/dashboard/events/events.scss\n ** module id = 779\n ** module chunks = 5\n **/","\nimport controller from './collectionSlots.controller'\n\n/**\n * Routing function for collectionSlots\n * @param  $stateProvider\n */\n/* @ngInject */\nexport default function routes($stateProvider) {\n  $stateProvider.state(\"main.dashboard.events.collectionSlots\", {\n    url: \"/collectionSlots\",\n    views: {\n    \teventContent: {\n\t\t    template: require(\"./collectionSlots.tpl.html\"),\n\t\t    controller: controller.UID,\n\t\t    controllerAs: \"collectionSlotsViewCtrl\"\n    \t}\n    }\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.routes.js\n **/","// Import Style\nimport './collectionSlots.scss';\n\nimport uirouter from 'angular-ui-router';\n\n// Import internal modules\nimport controller from './collectionSlots.controller';\nimport routes from './collectionSlots.routes';\n\n\nexport default angular.module(\"collectionSlots\" , [uirouter])\n  .config(routes)\n  .controller(controller.UID, controller)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/collectionSlots/index.js\n **/","import controller from './collectionSlotsItem.controller'\n\nexport default function collectionSlotsItem(){\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n        collectionSlot: '=',\n        hasActions: '=?'\n    },\n    template: require(\"./collectionSlotsItem.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"collectionSlotsItemCtrl\",\n    bindToController: true,\n    require:[\"^cardItemList\", \"^collectionSlotsList\", \"collectionSlotsItem\"],\n    link: (scope, el, attr, ctrls) => {\n\n      ctrls[2].cardItemList = ctrls[0];\n      ctrls[2].collectionSlotsListCtrl = ctrls[1];\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.directive.js\n **/","// Import Style\nimport './collectionSlotsItem.scss';\n\n\n\n\n// Import internal modules\nimport controller from './collectionSlotsItem.controller';\nimport directive from './collectionSlotsItem.directive';\n\n\n\nexport default angular.module(\"collectionSlotsItem\" , [])\n\n\n  .controller(controller.UID, controller)\n  .directive(\"collectionSlotsItem\", directive)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/index.js\n **/","import controller from './collectionSlotsList.controller'\n\nexport default function collectionSlotsList(){\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n        collectionSlots: '=',\n        hasActions: '=?',\n        hasNew:\"=\",\n        hasSearch:\"=?\",\n    },\n    template: require(\"./collectionSlotsList.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"collectionSlotsCtrl\",\n    bindToController: true,\n    link: (scope, el, attr, ctrl) => {\n\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.directive.js\n **/","// Import Style\nimport './collectionSlotsList.scss';\n\n\n// Import internal modules\nimport controller from './collectionSlotsList.controller';\nimport directive from './collectionSlotsList.directive';\n\n\n\nexport default angular.module(\"collectionSlotsList\" , [])\n\n\n  .controller(controller.UID, controller)\n  .directive(\"collectionSlotsList\", directive)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/index.js\n **/","import controller from './event.controller'\n\nexport default function event(){\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n        event: '=',\n        hasActions: '=?'\n    },\n    template: require(\"./event.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"eventCtrl\",\n    bindToController: true,\n    require:[\"^cardItemList\", \"^eventList\", \"event\"],\n    link: (scope, el, attr, ctrls) => {\n\n        ctrls[2].cardItemList = ctrls[0];\n        ctrls[2].eventListCtrl = ctrls[1];\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventList/event/event.directive.js\n **/","// Import Style\nimport './event.scss';\n\n\n\n\n// Import internal modules\nimport controller from './event.controller';\nimport directive from './event.directive';\n\nimport eventList from '../';\n\n\nexport default angular.module(\"event\" , [eventList])\n\n\n  .controller(controller.UID, controller)\n  .directive(\"event\", directive)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventList/event/index.js\n **/","import controller from './eventList.controller'\n\nexport default function eventList(){\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n        events: '=',\n        hasActions: '=?',\n        hasNew:\"=\",\n        hasSearch:\"=?\"\n    },\n    template: require(\"./eventList.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"eventListCtrl\",\n    bindToController: true,\n    link: (scope, el, attr, ctrl) => {\n\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventList/eventList.directive.js\n **/","import controller from './eventSchedule.controller'\n\nexport default function eventSchedule(){\n  return {\n    restrict: 'E',\n    scope: {\n        schedule: '=',\n        hasActions: '=?'\n    },\n    template: require(\"./eventSchedule.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"scheduleCtrl\",\n    replace: true,\n    bindToController: true,\n    require:[\"^cardItemList\", \"^eventScheduleList\", \"eventSchedule\"],\n    link: (scope, el, attr, ctrls) => {\n\n      ctrls[2].cardItemList = ctrls[0];\n      ctrls[2].eventScheduleListCtrl = ctrls[1];\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.directive.js\n **/","// Import Style\nimport './eventSchedule.scss';\n\n\n// Import internal modules\nimport controller from './eventSchedule.controller';\nimport directive from './eventSchedule.directive';\n\nimport eventScheduleList from '../';\n\nexport default angular.module(\"eventSchedule\" , [eventScheduleList])\n\n\n  .controller(controller.UID, controller)\n  .directive(\"eventSchedule\", directive)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/index.js\n **/","import controller from './eventScheduleList.controller'\n\nexport default function eventScheduleList($timeout){\n  \"ngInject\";\n  return {\n    restrict: 'E',\n    scope: {\n      schedules: \"=\",\n      event: '=',\n      hasNew:\"=\",\n    },\n    template: require(\"./eventScheduleList.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"eventScheduleListCtrl\",\n    bindToController: true,\n    replace: true,\n    require: ['^event', '^eventScheduleList'],\n    link: (scope, el, attr, ctrls) => {\n\n      let eventCtrl = ctrls[0];\n      let eventScheduleListCtrl = ctrls[1];\n\n      eventScheduleListCtrl.eventCtrl = eventCtrl;\n\n      eventScheduleListCtrl.el = el;\n      el[0].style.maxHeight = 0;\n      el.on('webkitTransitionEnd transitionend oTransitionEnd webkitTransitionEnd',(e)=>{\n        if (e.propertyName === 'max-height' || (e.originalEvent && e.originalEvent.propertyName === 'max-height')) {\n          $timeout(()=>{\n            eventScheduleListCtrl.event.$expanding = false;\n          })\n        }\n      })\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.directive.js\n **/","\nimport controller from './eventList.controller'\n\n/**\n * Routing function for eventList\n * @param  $stateProvider\n */\n/* @ngInject */\nexport default function routes($stateProvider) {\n  $stateProvider.state(\"main.dashboard.events.eventList\", {\n    url: \"/list\",\n    views: {\n    \teventContent: {\n\t\t    template: require(\"./eventList.tpl.html\"),\n\t\t    controller: controller.UID,\n\t\t    controllerAs: \"eventListViewCtrl\"\n    \t}\n    }\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/eventList/eventList.routes.js\n **/","// Import Style\nimport './eventList.scss';\n\n\n\nimport uirouter from 'angular-ui-router';\n\n// Import internal modules\nimport controller from './eventList.controller';\nimport routes from './eventList.routes';\n\n\nexport default angular.module(\"eventListView\" , [uirouter])\n  .config(routes)\n  .controller(controller.UID, controller)\n  .name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/eventList/index.js\n **/","\nimport controller from './events.controller';\n\n/**\n * Routing function for events\n * @param  $stateProvider\n */\n\nexport default function routes($stateProvider) {\n  \"ngInject\";\n  $stateProvider.state(\"main.dashboard.events\", {\n    url: \"/events\",\n    template: require(\"./events.tpl.html\"),\n    controller: controller.UID,\n    controllerAs: \"eventsViewCtrl\",\n    resolve: {\n\n    \t// authenticated -> this is from main.routes.js and makes sure there is an USER and a VENUE set in userService and venueService\n    \tisEvent: function ($q, $state, $stateParams, $timeout, authenticated, VenueService) {\n\n    \t\tif (VenueService.hasVenueSet() && VenueService.currentVenue.isEvent()) {\n\n    \t\t\treturn $q.when();\n    \t\t} else {\n\n    \t\t\t$timeout(() => {\n\n    \t\t\t\t$state.go('main.dashboard');\n    \t\t\t});\n\n    \t\t\treturn $q.reject();\n    \t\t}\n    \t}\n    }\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/app/features/main/dashboard/events/events.routes.js\n **/","module.exports = \"<div class='collection-slots-view' layout='column'>\\n  <div flex class=\\\"layout-left-right\\\">\\n    <div class='main-content-left'>\\n      <collection-slots-list has-search=\\\"true\\\"\\n         sv-multi-select=\\\"false\\\"\\n         sv-keep-in-list=\\\"false\\\"\\n         sv-is-dropzone=\\\"true\\\"\\n         sv-disabled=\\\"true\\\"\\n         has-new=\\\"true\\\"\\n         has-actions=\\\"true\\\"\\n         ng-if=\\\"collectionSlotsViewCtrl.loaded\\\"\\n         collection-slots=\\\"collectionSlotsViewCtrl.data.collectionSlots\\\"></collection-slots-list>\\n     </div>\\n  \\t<div class='main-content-right' media-query=\\\"min-width: 1024px\\\" sticky offset=\\\"88\\\" contextual-menu-holder></div>\\n  </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.tpl.html\n ** module id = 1056\n ** module chunks = 5\n **/","module.exports = \"<div class='collection-slot-item'\\n      ng-class=\\\"{expanded: collectionSlotsItemCtrl.collectionSlot.$expanded}\\\"\\n      ng-attr-data-id=\\\"{{collectionSlotsItemCtrl.collectionSlot.id}}\\\">\\n\\n  <card-item  has-actions=\\\"collectionSlotsItemCtrl.hasActions\\\"\\n              deleted=\\\"collectionSlotsItemCtrl.collectionSlot.$deleted\\\"\\n              selected=\\\"collectionSlotsItemCtrl.collectionSlot.$selected\\\"\\n              expanded=\\\"collectionSlotsItemCtrl.collectionSlot.$expanded\\\"\\n              >\\n    <card-item-title ng-click=\\\"collectionSlotsItemCtrl.toggleExpanded($event)\\\"\\n                    has-visible=\\\"true\\\"\\n                    sv-root=\\\"collectionSlot\\\">\\n                      <div ng-if=\\\"!collectionSlotsItemCtrl.collectionSlot.$expanded\\\" class='sv-dropzone sv-dropzone-item' sv-part=\\\"collectionSlotsItemCtrl.newItems\\\" sv-on-external-sort=\\\"collectionSlotsItemCtrl.onNewItemMoved($items, $partFrom, $partTo, $indexFrom, $indexTo)\\\">\\n                        <div sv-placeholder></div>\\n                      </div>\\n                      <span>{{collectionSlotsItemCtrl.collectionSlot.slotName}} </span>\\n                    </card-item-title>\\n\\n    <card-item-actions is-visible=\\\"collectionSlotsItemCtrl.collectionSlot.visible\\\"\\n                       on-delete=\\\"collectionSlotsItemCtrl.onDelete()\\\"\\n                       on-edit=\\\"collectionSlotsItemCtrl.onEdit($event)\\\"\\n                        ></card-item-actions>\\n  </card-item>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.tpl.html\n ** module id = 1057\n ** module chunks = 5\n **/","module.exports = \"<div class=\\\"collection-slots-list\\\">\\n  <div class='sv-root-holder'>\\n\\n    <card-item-list\\n        has-new=\\\"collectionSlotsCtrl.hasNew\\\"\\n        tooltip=\\\"{{ 'Add new collection slot' | translate }}\\\"\\n        on-click-new=\\\"collectionSlotsCtrl.showCreateCollectionSlot()\\\"\\n        collection=\\\"collectionSlotsCtrl.collectionSlots\\\">\\n      <div class='sort-holder' >\\n        <collection-slots-item\\n          has-actions=\\\"collectionSlotsCtrl.hasActions\\\"\\n          ng-repeat=\\\"collectionSlot in collectionSlotsCtrl.collectionSlots | orderBy: 'id' track by collectionSlot.id\\\"\\n          collection-slot=\\\"collectionSlot\\\">\\n        </collection-slots-item>\\n        <div sv-placeholder></div>\\n      </div>\\n    </card-item-list>\\n  </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.tpl.html\n ** module id = 1058\n ** module chunks = 5\n **/","module.exports = \"<div class='event'\\n      ng-class=\\\"{expanded: eventCtrl.event.$expanded}\\\"\\n      ng-attr-data-id=\\\"{{eventCtrl.event.id}}\\\">\\n\\n  <card-item  has-actions=\\\"eventCtrl.hasActions\\\"\\n              deleted=\\\"eventCtrl.event.$deleted\\\"\\n              selected=\\\"eventCtrl.event.$selected\\\"\\n              expanded=\\\"eventCtrl.event.$expanded\\\"\\n              >\\n    <card-item-title ng-click=\\\"eventCtrl.toggleExpanded($event)\\\"\\n                    has-visible=\\\"true\\\">\\n                      <md-button class=\\\"md-icon-button warning-button\\\" ng-if=\\\"eventCtrl.hasAnyScheduleWithoutSlots()\\\">\\n                        <icon class=\\\"warning-icon\\\">report_problem</icon>\\n                        <md-tooltip>{{ 'There are schedules in this event without a collection slot' }}</md-tooltip>\\n                      </md-button>\\n                      <span>{{eventCtrl.event.name}} </span>\\n                      <icon class='arrow-icon' flex>{{eventCtrl.event.$expanded ? 'arrow_drop_up' : 'arrow_drop_down'}}</icon>\\n                    </card-item-title>\\n\\n\\n    <item-chips\\n          ng-if=\\\"eventCtrl.event.outletLocationId && eventCtrl.outletLocations.length\\\"\\n          items=\\\"eventCtrl.outletLocations\\\"\\n          on-remove=\\\"eventCtrl.removeOutletLocation(item)\\\"\\n          class=\\\"outlet-locations-chips\\\"></item-chips>\\n\\n    <event-schedule-list\\n          has-new=\\\"true\\\"\\n          schedules=\\\"eventCtrl.event.schedules\\\"\\n          event=\\\"eventCtrl.event\\\"\\n        >\\n    </event-schedule-list>\\n\\n    <card-item-actions is-visible=\\\"eventCtrl.event.visible\\\"\\n                       on-delete=\\\"eventCtrl.onDelete()\\\"\\n                       on-edit=\\\"eventCtrl.onEdit($event)\\\"\\n                       on-add-location=\\\"eventCtrl.onAddOutletLocation($event)\\\"\\n                       add-location-message=\\\"eventCtrl.getAddOutletLocationMessage()\\\"\\n                        ></card-item-actions>\\n  </card-item>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventList/event/event.tpl.html\n ** module id = 1059\n ** module chunks = 5\n **/","module.exports = \"<div class=\\\"events-list\\\">\\n  <div class='sv-root-holder'>\\n\\n    <card-item-list\\n        has-new=\\\"eventListCtrl.hasNew\\\"\\n        tooltip=\\\"{{ 'Add new event' | translate }}\\\"\\n        on-click-new=\\\"eventListCtrl.showCreateEvent()\\\"\\n        collection=\\\"eventListCtrl.events\\\">\\n      <div class='sort-holder'>\\n        <event\\n          has-actions=\\\"eventListCtrl.hasActions\\\"\\n          ng-repeat=\\\"event in eventListCtrl.events | orderBy: id\\\"\\n          event=\\\"event\\\">\\n        </event>\\n        <div sv-placeholder></div>\\n      </div>\\n    </card-item-list>\\n  </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventList/eventList.tpl.html\n ** module id = 1060\n ** module chunks = 5\n **/","module.exports = \"<div class='event-schedule ng-enter'\\n      ng-class=\\\"{expanded:scheduleCtrl.schedule.$expanded}\\\"\\n      ng-attr-data-id=\\\"{{scheduleCtrl.schedule.id}}\\\">\\n\\n  <card-item  has-actions=\\\"true\\\"\\n              deleted=\\\"scheduleCtrl.schedule.$deleted\\\"\\n              selected=\\\"scheduleCtrl.schedule.$selected\\\"\\n              >\\n    <card-item-title ng-click=\\\"scheduleCtrl.toggleExpanded($event)\\\"\\n                    has-visible=\\\"true\\\">\\n                      <md-button class=\\\"md-icon-button warning-button\\\" ng-if=\\\"scheduleCtrl.shouldShowWarningSlots()\\\">\\n                        <icon class=\\\"warning-icon\\\">report_problem</icon>\\n                        <md-tooltip>{{ 'There are no collection slots assigned to this schedule' }}</md-tooltip>\\n                      </md-button>\\n                      <span class=\\\"schedule-name\\\" flex ng-bind-html=\\\"scheduleCtrl.getScheduleTitle()\\\"></span>\\n                      <span class=\\\"schedule-time\\\" ng-bind-html=\\\"scheduleCtrl.getScheduleTime()\\\"></span>\\n                    </card-item-title>\\n\\n    <card-item-actions is-visible=\\\"scheduleCtrl.schedule.visible\\\"\\n                       on-delete=\\\"scheduleCtrl.onDelete(createdOutlet)\\\"\\n                       on-edit=\\\"scheduleCtrl.onEdit($event)\\\"\\n                        ></card-item-actions>\\n  </card-item>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.tpl.html\n ** module id = 1061\n ** module chunks = 5\n **/","module.exports = \"<div class=\\\"event-schedule-list\\\">\\n  <div class='sv-root-holder'>\\n\\n    <card-item-list\\n        collection=\\\"eventScheduleListCtrl.schedules\\\"\\n        has-new=\\\"eventScheduleListCtrl.hasNew\\\"\\n        tooltip=\\\"{{ 'Add new schedule' | translate }}\\\"\\n        on-click-new=\\\"eventScheduleListCtrl.showCreateSchedule()\\\"\\n        >\\n    <div class='sort-holder'>\\n      <event-schedule\\n        ng-repeat=\\\"schedule in eventScheduleListCtrl.schedules | orderBy: ['$startTimestamp', '$endTimestamp']\\\"\\n        schedule=\\\"schedule\\\"\\n        ng-if=\\\"schedule.$show\\\"\\n        ng-init=\\\"$last && eventScheduleListCtrl.recalculateHeight()\\\"\\n        >\\n      </event-schedule>\\n      <div sv-placeholder></div>\\n    </div>\\n    </card-item-list>\\n  </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.tpl.html\n ** module id = 1062\n ** module chunks = 5\n **/","module.exports = \"<div class='events-view' layout='column'>\\n  <div class=\\\"events-toolbar\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\">\\n    <md-button class='md-primary' ng-if=\\\"!eventListViewCtrl.isCalendarMode()\\\" ng-click=\\\"eventListViewCtrl.toggleMode()\\\">\\n      <icon class=\\\"material-icons\\\">insert_invitation</icon>{{ 'View Calendar' | translate }}\\n    </md-button>\\n\\t\\t<md-button class='md-primary edit-mode-button' ng-if=\\\"eventListViewCtrl.isCalendarMode()\\\" ng-click=\\\"eventListViewCtrl.toggleMode()\\\">\\n      <icon class=\\\"material-icons\\\">edit</icon>{{ 'Edit Mode' | translate }}\\n    </md-button>\\n  </div>\\n  <div flex class=\\\"layout-left-right with-toolbar\\\" ng-if=\\\"eventListViewCtrl.loaded && !eventListViewCtrl.isCalendarMode()\\\">\\n    <div class='main-content-left'>\\n      <event-list has-search=\\\"true\\\"\\n         sv-multi-select=\\\"false\\\"\\n         sv-keep-in-list=\\\"false\\\"\\n         sv-is-dropzone=\\\"true\\\"\\n         sv-disabled=\\\"true\\\"\\n         has-new=\\\"true\\\"\\n         has-actions=\\\"true\\\"\\n         events=\\\"eventListViewCtrl.data.events\\\"></event-list>\\n     </div>\\n  \\t<div class='main-content-right' media-query=\\\"min-width: 1024px\\\" sticky offset=\\\"134\\\" contextual-menu-holder></div>\\n  </div>\\n\\n  <div class=\\\"content-calendar\\\" ng-if=\\\"eventListViewCtrl.loaded && eventListViewCtrl.isCalendarMode()\\\">\\n    <calendar-md flex layout layout-fill\\n      calendar-direction=\\\"eventListViewCtrl.calendar.direction\\\"\\n      title-format=\\\"'MMMM y'\\\"\\n      ng-model='eventListViewCtrl.calendar.selectedDate'\\n      week-starts-on=\\\"eventListViewCtrl.calendar.firstDayOfWeek\\\"\\n\\n      tooltips=\\\"eventListViewCtrl.calendar.tooltips\\\"\\n      day-format=\\\"eventListViewCtrl.calendar.dayFormat\\\"\\n      day-label-format=\\\"'EEE'\\\"\\n      day-label-tooltip-format=\\\"'EEEE'\\\"\\n      day-tooltip-format=\\\"'fullDate'\\\"\\n      disable-future-selection=\\\"false\\\"\\n      ></calendar-md>\\n  </div>\\n  <contextual-drawer-event-outlet-locations></contextual-drawer-event-outlet-locations>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/eventList/eventList.tpl.html\n ** module id = 1063\n ** module chunks = 5\n **/","module.exports = \"<div class='events' flex layout='row' layout-align=\\\"stretch stretch\\\">\\n  <ui-view flex name=\\\"eventContent\\\" layout='row' layout-align=\\\"stretch stretch\\\"></ui-view>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/events.tpl.html\n ** module id = 1064\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./collectionSlots.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./collectionSlots.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./collectionSlots.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/collectionSlots/collectionSlots.scss\n ** module id = 1151\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsItem.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsItem.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsItem.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsItem/collectionSlotsItem.scss\n ** module id = 1152\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsList.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsList.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./collectionSlotsList.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/collectionSlotsList/collectionSlotsList.scss\n ** module id = 1153\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./event.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./event.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./event.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventList/event/event.scss\n ** module id = 1154\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventList/eventList.scss\n ** module id = 1155\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./eventSchedule.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./eventSchedule.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../../node_modules/sass-loader/index.js!./eventSchedule.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventSchedule/eventSchedule.scss\n ** module id = 1156\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventScheduleList.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventScheduleList.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../../node_modules/css-loader/index.js!./../../../../../../../../node_modules/sass-loader/index.js!./eventScheduleList.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/components/eventScheduleList/eventScheduleList.scss\n ** module id = 1157\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../../node_modules/css-loader/index.js!./../../../../../../../node_modules/sass-loader/index.js!./eventList.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/eventList/eventList.scss\n ** module id = 1158\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../../node_modules/css-loader/index.js!./../../../../../../node_modules/sass-loader/index.js!./events.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../../node_modules/css-loader/index.js!./../../../../../../node_modules/sass-loader/index.js!./events.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../../node_modules/css-loader/index.js!./../../../../../../node_modules/sass-loader/index.js!./events.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/app/features/main/dashboard/events/events.scss\n ** module id = 1159\n ** module chunks = 5\n **/"],"sourceRoot":""}